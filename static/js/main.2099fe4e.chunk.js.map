{"version":3,"sources":["assets/images/badges/closer_badge.png","assets/images/badges/creativity_badge.png","assets/images/badges/culture_badge.png","assets/images/badges/detail_master_badge.png","assets/images/badges/goal_smasher_badge.png","assets/images/badges/idea_maker_badge.png","assets/images/badges/initiative_badge.png","assets/images/badges/innovator_badge.png","assets/images/badges/launcher_badge.png","assets/images/badges/leadership_badge.png","assets/images/badges/lifesaver_badge.png","assets/images/badges/motivator_badge.png","assets/images/badges/navigator_badge.png","assets/images/badges/obstacle_badge.png","assets/images/badges/problem_solver_badge.png","assets/images/badges/teamwork_badge.png","assets/images/badges/top_earner_badge.png","assets/Util/text.js","assets/Util/BadgesInfo.js","assets/Util/profilePic.js","components/give-carrot/DSTypeAhead.jsx","components/V2/StyledModal.jsx","components/V2/theme.js","components/V2/StyledCloseButton.jsx","components/V2/StyledButton.jsx","components/V2/CustomTypography.jsx","components/V2/HelpText.jsx","components/CarrotIcon.jsx","components/V2/CustomCarrotInputField.jsx","components/give-carrot/CustomImpactModal.jsx","components/give-carrot/ImpactSelectorItem.jsx","components/give-carrot/ImpactValueSelector.jsx","assets/Util/object.js","components/V2/CustomMentionSuggesstions.jsx","components/V2/CustomEditor.jsx","components/give-carrot/MessageInput.jsx","assets/Util/mention.js","components/give-carrot/BadgesItem.jsx","components/give-carrot/BadgesSelector.jsx","components/PostRecognition.jsx","assets/Util/constants.js","components/InfoRecognition.jsx","components/FeedComponent.js","components/FeedCard.jsx","assets/Util/time.js","components/Feed.jsx","components/DropdownMenu.jsx","components/TopReceivers.jsx","components/TopBadges.jsx","pages/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MENTION_REGEX","getProfileFullName","user","profile","first_name","last_name","badges","name","displayName","getBadgeObjectForName","badgeName","find","badge","getImageForBadge","creativity_badge","culture_badge","detail_master_badge","goal_smasher_badge","idea_maker_badge","initiative_badge","innovator_badge","launcher_badge","leadership_badge","lifesaver_badge","motivator_badge","navigator_badge","obstacle_badge","problem_solver_badge","teamwork_badge","top_earner_badge","closer_badge","useStyles","makeStyles","avatar","margin","avatarColor","props","color","backgroundColor","fontWeight","width","size","height","fontSize","avatarImage","UserNameAvatar","firstLetter","isDeleted","slice","toUpperCase","getFirstLetterOfName","colorProp","bg","getColor","styleProps","classes","Avatar","className","ProfilePic","src","lastChar","id","substr","length","charCodeAt","theme","root","display","position","zIndex","paper","left","right","maxHeight","overflowY","marginTop","marginLeft","background","boxShadow","borderRadius","iconWrapper","justifyContent","alignItems","iconStyle","cursor","iconInactiveStyle","filter","chip","chipAvatar","chipRoot","chipLabel","palette","text","main","paddingLeft","chipDeleteIcon","inputRoot","flexWrap","inputStyle","flexGrow","menuSelected","autocomplete_user_fullname","letterSpacing","autocomplete_user_username_focus","autocomplete_user_username","token","sessionStorage","getItem","DSTypeAhead","handleUsers","onFocus","useState","inputValue","setInputValue","selectedItem","setSelectedItem","userInputIconOn","setUserInputIconOn","employees","setEmployees","useEffect","updateUsersToParent","a","axios","get","headers","res","data","fetchEmployees","map","handleInputChange","e","target","value","handleDelete","item","postSelectedItem","splice","indexOf","handleUserInputIconStyleOff","onUserInputFocus","selectedUsers","handleKeyDown","keycode","renderOption","index","itemProps","highlightedIndex","disabled","isHighlighted","MenuItem","key","selected","user_name","findUsers","count","firstName","email","keep","toLowerCase","onChange","getInputProps","getItemProps","isOpen","inputValue2","openMenu","closeMenu","classNames","iconActiveStyle","onClick","inputRef","focus","role","aria-label","style","inputProps","InputProps","ref","other","TextField","autoComplete","input","underline","renderInput","fullWidth","startAdornment","u","Chip","tabIndex","label","deleteIcon","onDelete","onKeyDown","placeholder","event","onBlur","Paper","square","renderOptions","top","transform","padding","breakpoints","down","StyledModal","Modal","aria-labelledby","aria-describedby","open","onClose","handleClose","BackdropProps","mixBlendMode","opacity","customClass","children","primary","secondary","cyan1","cyan6","cyan7","gray1","gray2","gray3","gray4","gray5","gray6","gray7","gray8","gray9","gray10","athensGray","mischka","silver","dustRed6","dayBreakBlue2","volcano6","volcano7","sunriseYellow6","polarGreen6","polarGreen7","blue1","blue7","geekBlue1","geekBlue2","geekBlue3","geekBlue5","geekBlue6","geekBlue7","geekBlue8","gold1","gold5","gold6","gold7","purple1","purple7","darkText","greenLight","genoa","jetStream","lightGray1","lightGray2","lightGray3","lightGray4","lightGray5","lightGray6","drakGray2","darkGray3","darkGray7","fedora","darkGray9","alto","thunder","coffee","paleSlate","new","white","aqua","aqua2","blue","blue2","green","green1","green7","orange6","brown","azalea","skyblue","red","red1","red2","red6","ceriseRed","lightBlue","white2","white3","white4","yellow","yellow2","office365Logo","inherit","action","hoverOpacity","typography","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightSemibold","fontWeightBold","fontFamily","join","adminFontFamily","breakPoints","lg","md","sm","xs","animations","AdminMain","prop","y","duration","stagger","modalCloseButton","fill","ThemeV2","transition","StyledCloseButton","rest","viewBox","xmlns","d","StyledButton","withStyles","contained","themeV2","textDecoration","containedPrimary","darken","containedSecondary","textTransform","fontStyle","fontStretch","lineHeight","textAlign","Button","styles","adminRoot","getFontWeight","weight","CustomTypography","Typography","defaultProps","userSelect","error","FormHelperText","classnames","CarrotIcon","active","url","currency","blendMode","type","emojiType","_","String","fromCodePoint","parseInt","hexCode","alt","SvgIcon","stroke","strokeWidth","fillRule","cx","cy","r","textFieldWrapper","borderTop","borderBottom","borderLeft","helperText","inputWrapper","flexDirection","marginBottom","border","outline","borderColor","CustomCarrotInputField","errorClass","inputChar","customCompanyIcon","textField","buttonHolder","button","CustomImpactModal","maxGivingAllowance","availablePoints","availablePointsToGive","maxPointsToGive","Math","floor","maxPointsToGiveText","carrots","setCarrots","invalidValue","setInvalidValue","formtouched","setFormtouched","closeModal","openModal","variant","gutterBottom","match","reduce","sum","marginRight","nestedSelect","amountSelector","visibility","CarrotIconHover","listCarrotIconWrapper","paddingRight","menuDiv","flex","innerDefaultValues","innerDropdownStyle","ImpactSelectorItem","carrotAmount","defaultValue","innerSelectValues","range","Number","customCurrencyDisp","multipleUserText","onOptionSelect","onValueChange","impact","toggleSelect","onSubSelectToggle","selectOpen","setSelectOpen","handleChange","handleOpen","ReactHoverObserver","isHovering","option","canGivePoint","Select","SelectDisplayProps","onOpen","MenuProps","innerSelectValue","formControl","placeholderStyle","emoticonStyle","nestedFormControl","impactSelector","impactSelectorDisabled","ImpactValueSelector","inputIconOn","setInputIconOn","menuOpen","setMenuOpen","subSelectOpen","setSubSelectOpen","customImpactModalOpen","setCustomImpactModalOpen","impactValueSelector","setImpactValueSelector","mePointsToGive","disableSelect","filterOptions","options","preOption","goldLimit","onImpactOpen","onImpactSelected","closeSelect","toggle","onImpactClose","closeCustomImpactModal","values","customCurrency","NAME","FormControl","Tooltip","title","placement","displayEmpty","itemClicked","Input","renderValue","goldSelected","total","remaining","excessAlert","dispText","impactObj","canGivePoints","canGiveCustomAmount","getter","keys","hash","newHash","userName","b","userId","Entry","parentProps","mention","username","CustomMentionSuggesstions","onSearchChange","suggestions","onOpenSuggestions","onCloseSuggestions","onAddMention","MentionComponent","entryComponent","CustomEditor","mentionPlugin","createMentionPlugin","entityMutability","mentionTrigger","supportWhitespace","MentionSuggestions","editorState","plugins","editorRef","inputDiv","verticalAlign","overflow","errorhelper","textarea__input","MessageInput","editor","setEditor","handleMessage","hasText","getErrorMessage","getLiteralTextFromEditor","blocks","convertToRaw","getCurrentContent","mappedBlocks","block","trim","newText","i","getTextFromEditor","mentionsToReplace","forEach","replace","RegExp","getMentionsToReplace","selectedMentions","employee","emp","badge_selector_item","badge_selector_img","badge_selector_name","wordWrap","BadgesItem","onSelect","badge_selector_wrapper","badge_selector_body","badge_selected_image","BadgesSelector","selectedBadge","updateSelected","StyledTabs","indicator","Tabs","StyledTab","Tab","disableRipple","post_container","form_container","p_16","input_row_style","iconButton","minWidth","gc_button","add_emoji_img","impactLevels","PostRecognition","slideIndex","setSlideIndex","setSelectedBadge","setSelectedUsers","setImpact","carrotsTouched","setCarrotsTouched","carrotError","EditorState","createEmpty","setEditorState","messageError","setMessageError","setIsMessageTipsVisible","setSelectedMentions","isFormSubmitting","anchorEl","setAnchorEl","setToken","queryString","window","location","search","emailLogin","URLSearchParams","post","then","setItem","points_earned","remaining_point","messageInputHasText","mentionUsers","giveButtonDisabled","shouldDisableGiveButton","Boolean","centered","newValue","onSubmit","preventDefault","message","giveCarrots","to","carrots_each","console","log","selectedUsersProps","carrotsPerPost","isSet","switchBalanceTab","NAME_PLURAL","NAME_TITLEIZED","NAME_TITLEIZED_PLURAL","editorStateProps","minMessageChar","push","IconButton","currentTarget","getImageForBadgeIcon","TypeError","x","titleize","Popover","anchorOrigin","vertical","horizontal","onUpdateSelectedBadge","balance_container","redeem_container","balance_carrots","giving_container","remaining_container","date_container","Balance","onHandleChange","moment","add","startOf","format","useStyle","feed_card_header_text","flexFlow","username_clickable","feed_card_from","whiteSpace","feed_card_to","feed_card_badge_img","username_clickable_to_span","feed_card_carrots","users_list_container","user_list_hover","boxSizing","WebkitTapHighlightColor","ClickableFromUserName","deactivated_user","ClickableUserName","FeedCardTitle","UserNameComponent","usersToShow","Array","from","users","shift","isTo","List","ListItem","ListItemAvatar","ListItemText","feed_card_gave","hasBadge","FeedValue","StyledCard","Card","card","feed_card_header","feed_card_title","feed_carrot_value","feed_carrot_time","feed_card_message","feed_card_action","commentOn","heartOn","privateIcon","taggedUser","FeedCard","feedType","didILike","setDidILike","me","likes","renderAvatar","coreValue","serTime","time","abs","diff","fromNow","getAgoTime","created_at","taggedUsers","replacedText","reactStringReplace","emoji","getPostFormattedMessage","component","Feed","homeFeed","setHomeFeed","method","feed","toggleOverlay","bottom","Popper","TransitionProps","Fade","timeout","right_column_box","right_column_header","right_column_header_text","dropIcon","top_receivers_row_div","paddingBottom","paddingTop","top_receivers_name","textOverflow","top_receivers_carrots","top_receivers_carrots_text","minHeight","TopReceivers","topEarnedUsers","setTopEarnedUsers","setValue","top_earned_users","buttonLabel","handleMenuItemClick","idx","isEmpty","CarrotText","aria-owns","aria-haspopup","PaperProps","sorted","sort","getTopReceiversSorted","receiver","alert","top_badges_names","top_badges_img","TopBadges","setTopBadges","top_badges","topBadges","BadgeText","badgeObj","badgeImg","fixed_right_panel","Home","balanceTabToShow","setBalanceTabToShow","onHandleTabChange","Container","Row","Col","InfoRecognition","App","hostname","createMuiTheme","MuiDialogTitle","disableTypography","MuiButtonBase","overrides","MuiCssBaseline","body","MuiIconButton","MuiFormLabel","MuiInput","MuiButton","htmlFontSize","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2099fe4e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/closer_badge.543edc90.png\";","module.exports = __webpack_public_path__ + \"static/media/creativity_badge.51da00a7.png\";","module.exports = __webpack_public_path__ + \"static/media/culture_badge.d4ee91eb.png\";","module.exports = __webpack_public_path__ + \"static/media/detail_master_badge.299614d1.png\";","module.exports = __webpack_public_path__ + \"static/media/goal_smasher_badge.2ccd5746.png\";","module.exports = __webpack_public_path__ + \"static/media/idea_maker_badge.73420e58.png\";","module.exports = __webpack_public_path__ + \"static/media/initiative_badge.25ea3150.png\";","module.exports = __webpack_public_path__ + \"static/media/innovator_badge.f2cad379.png\";","module.exports = __webpack_public_path__ + \"static/media/launcher_badge.ca08a56a.png\";","module.exports = __webpack_public_path__ + \"static/media/leadership_badge.25ff00e8.png\";","module.exports = __webpack_public_path__ + \"static/media/lifesaver_badge.98e7f9ad.png\";","module.exports = __webpack_public_path__ + \"static/media/motivator_badge.19706b25.png\";","module.exports = __webpack_public_path__ + \"static/media/navigator_badge.739e52a5.png\";","module.exports = __webpack_public_path__ + \"static/media/obstacle_badge.18d58301.png\";","module.exports = __webpack_public_path__ + \"static/media/problem_solver_badge.4b93eeb6.png\";","module.exports = __webpack_public_path__ + \"static/media/teamwork_badge.1f291e2c.png\";","module.exports = __webpack_public_path__ + \"static/media/top_earner_badge.3a628322.png\";","import React from 'react';\r\nimport reactStringReplace from 'react-string-replace';\r\nimport { Emoji } from 'emoji-mart';\r\n// import _ from 'lodash';\r\n\r\nexport const CASHOUT_TITLE_TEXT_MAX_LENGTH = 35;\r\nexport const MENTION_REGEX = /@__(.*?)__@/;\r\n\r\nexport const getProfileFullName = (user) => {\r\n    if (user && user.profile) {\r\n        if (user.profile.first_name !== null && user.profile.last_name === null) {\r\n            return `${user.profile.first_name}`;\r\n        }\r\n\r\n        if (user.profile.last_name !== null && user.profile.first_name === null) {\r\n            return `${user.profile.last_name}`;\r\n        }\r\n\r\n        if (user.profile.last_name && user.profile.first_name ) {\r\n            return `${user.profile.first_name} ${user.profile.last_name}`;\r\n        }\r\n\r\n    }\r\n    return '';\r\n};\r\n\r\nexport const getFirstLetterOfName = (user) => {\r\n  if (user && user.profile && user.profile.first_name) {\r\n    return `${user.profile.first_name.slice(0, 1).toUpperCase()}`;\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const titleize = (input) => {\r\n  if (typeof input !== 'string') {\r\n\t\tthrow new TypeError('Expected a string');\r\n\t}\r\n\r\n\treturn input.toLowerCase().replace(/(?:^|\\s|-)\\S/g, x => x.toUpperCase());\r\n}\r\n\r\nexport const getPostFormattedMessage = (text, taggedUsers) => {\r\n    let replacedText = text;\r\n    \r\n    replacedText = reactStringReplace(replacedText, /#(\\w+)/g, (match, i) => (\r\n        <span key={match + i} className=\"feed-card-hashtag\">\r\n        #{match}\r\n        </span>\r\n    ));\r\n\r\n    replacedText = reactStringReplace(replacedText, /:(.*?):/g, (match, i) => (\r\n        <Emoji key={match + i} emoji={`:${match}:`} size={16} />\r\n    ));\r\n  \r\n    if (taggedUsers) {\r\n        if (taggedUsers.length > 0) {\r\n            replacedText = reactStringReplace(\r\n            replacedText,\r\n            MENTION_REGEX,\r\n            (match, i) => {\r\n                const filteredEmployeeArr = taggedUsers.filter((employee) => employee.id === match).map((employee) => {\r\n                // if (onUserClicked) {\r\n                //   return (\r\n                //     <span\r\n                //       key={match + i}\r\n                //       className={\r\n                //         employee.isDeleted\r\n                //           ? 'noEvent deactivated_user'\r\n                //           : 'feed-card-mention'\r\n                //       }\r\n                //       onClick={\r\n                //         !employee.isDeleted\r\n                //           ? () => {\r\n                //               onUserClicked(employee);\r\n                //             }\r\n                //           : null\r\n                //       }\r\n                //     >\r\n                //       {employee.isDeleted\r\n                //         ? 'Deactivated User'\r\n                //         : getProfileFullName(employee)}\r\n                //     </span>\r\n                //   );\r\n                // }\r\n                    return (\r\n                        <span key={match + i}>\r\n                            <b>\r\n                                {employee.isDeleted\r\n                                    ? 'Deactivated User'\r\n                                    : getProfileFullName(employee)\r\n                                }\r\n                            </b>\r\n                        </span>\r\n                    );\r\n                });\r\n                    return filteredEmployeeArr;\r\n                },\r\n            );\r\n        }\r\n    }\r\n    return replacedText;\r\n};","import closer_badge from '../images/badges/closer_badge.png';\r\n// import closer_badge_thumb from '../img/badges/thumb/closer_badge_thumb.png';\r\nimport creativity_badge from '../images/badges/creativity_badge.png';\r\n// import creativity_badge_thumb from '../img/badges/thumb/creativity_badge_thumb.png';\r\nimport culture_badge from '../images/badges/culture_badge.png';\r\n// import culture_badge_thumb from '../img/badges/thumb/culture_badge_thumb.png';\r\nimport detail_master_badge from '../images/badges/detail_master_badge.png';\r\n// import detail_master_badge_thumb from '../img/badges/thumb/detail_master_badge_thumb.png';\r\nimport goal_smasher_badge from '../images/badges/goal_smasher_badge.png';\r\n// import goal_smasher_badge_thumb from '../img/badges/thumb/goal_smasher_badge_thumb.png';\r\nimport idea_maker_badge from '../images/badges/idea_maker_badge.png';\r\n// import idea_maker_badge_thumb from '../img/badges/thumb/idea_maker_badge_thumb.png';\r\nimport initiative_badge from '../images/badges/initiative_badge.png';\r\n// import initiative_badge_thumb from '../img/badges/thumb/initiative_badge_thumb.png';\r\nimport innovator_badge from '../images/badges/innovator_badge.png';\r\n// import innovator_badge_thumb from '../img/badges/thumb/innovator_badge_thumb.png';\r\nimport launcher_badge from '../images/badges/launcher_badge.png';\r\n// import launcher_badge_thumb from '../img/badges/thumb/launcher_badge_thumb.png';\r\nimport leadership_badge from '../images/badges/leadership_badge.png';\r\n// import leadership_badge_thumb from '../images/badges/thumb/leadership_badge_thumb.png';\r\nimport lifesaver_badge from '../images/badges/lifesaver_badge.png';\r\n// import lifesaver_badge_thumb from '../images/badges/thumb/lifesaver_badge_thumb.png';\r\nimport motivator_badge from '../images/badges/motivator_badge.png';\r\n// import motivator_badge_thumb from '../images/badges/thumb/motivator_badge_thumb.png';\r\nimport navigator_badge from '../images/badges/navigator_badge.png';\r\n// import navigator_badge_thumb from '../images/badges/thumb/navigator_badge_thumb.png';\r\nimport obstacle_badge from '../images/badges/obstacle_badge.png';\r\n// import obstacle_badge_thumb from '../images/badges/thumb/obstacle_badge_thumb.png';\r\nimport problem_solver_badge from '../images/badges/problem_solver_badge.png';\r\n// import problem_solver_badge_thumb from '../images/badges/thumb/problem_solver_badge_thumb.png';\r\nimport teamwork_badge from '../images/badges/teamwork_badge.png';\r\n// import teamwork_badge_thumb from '../images/badges/thumb/teamwork_badge_thumb.png';\r\n import top_earner_badge from '../images/badges/top_earner_badge.png';\r\n// import top_earner_badge_thumb from '../images/badges/thumb/top_earner_badge_thumb.png';\r\n\r\nexport const badges = [\r\n  {\r\n    name: 'closer',\r\n    displayName: 'Closer',\r\n  },\r\n  {\r\n    name: 'creativity',\r\n    displayName: 'Creativity',\r\n  },\r\n  {\r\n    name: 'culture',\r\n    displayName: 'Culture Champ',\r\n  },\r\n  {\r\n    name: 'detail_master',\r\n    displayName: 'Detail Master',\r\n  },\r\n  {\r\n    name: 'goal_smasher',\r\n    displayName: 'Goal Smasher',\r\n  },\r\n  {\r\n    name: 'idea_maker',\r\n    displayName: 'Idea Maker',\r\n  },\r\n  {\r\n    name: 'initiative',\r\n    displayName: 'Initiative',\r\n  },\r\n  {\r\n    name: 'innovator',\r\n    displayName: 'Innovator',\r\n  },\r\n  {\r\n    name: 'launcher',\r\n    displayName: 'Launcher',\r\n  },\r\n  {\r\n    name: 'leadership',\r\n    displayName: 'Leadership',\r\n  },\r\n  {\r\n    name: 'life_saver',\r\n    displayName: 'Life Saver',\r\n  },\r\n  {\r\n    name: 'motivator',\r\n    displayName: 'Motivator',\r\n  },\r\n  {\r\n    name: 'navigator',\r\n    displayName: 'Navigator',\r\n  },\r\n  {\r\n    name: 'obstacle_eliminator',\r\n    displayName: 'Obstacle Eliminator',\r\n  },\r\n  {\r\n    name: 'problem_solver',\r\n    displayName: 'Problem Solver',\r\n  },\r\n  {\r\n    name: 'teamwork',\r\n    displayName: 'Teamwork',\r\n  },\r\n  {\r\n    name: 'top_earner',\r\n    displayName: 'Top Earner',\r\n  },\r\n];\r\n\r\nexport const getBadgeObjectForName = (badgeName) => badges.find(badge => badge.name === badgeName);\r\n\r\nexport const getImageForBadge = (badge, thumb = false) => {\r\n  switch (badge.name) {\r\n    case 'creativity':\r\n      return creativity_badge;\r\n    case 'culture':\r\n      return culture_badge;\r\n    case 'detail_master':\r\n      return detail_master_badge;\r\n    case 'goal_smasher':\r\n      return goal_smasher_badge;\r\n    case 'idea_maker':\r\n      return idea_maker_badge;\r\n    case 'initiative':\r\n      return initiative_badge;\r\n    case 'innovator':\r\n      return innovator_badge;\r\n    case 'launcher':\r\n      return launcher_badge;\r\n    case 'leadership':\r\n      return leadership_badge;\r\n    case 'life_saver':\r\n      return lifesaver_badge;\r\n    case 'motivator':\r\n      return motivator_badge;\r\n    case 'navigator':\r\n      return navigator_badge;\r\n    case 'obstacle_eliminator':\r\n      return obstacle_badge;\r\n    case 'problem_solver':\r\n      return problem_solver_badge;\r\n    case 'teamwork':\r\n      return teamwork_badge;\r\n    case 'top_earner':\r\n      return top_earner_badge;\r\n    case 'closer':\r\n      return closer_badge;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getFirstLetterOfName } from './text';\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        margin: 10,\r\n    },\r\n\r\n    avatarColor: (props) => ({\r\n    color: props.color,\r\n    backgroundColor: props.backgroundColor,\r\n    fontWeight: '600',\r\n    width: props.size ? props.size : 40,\r\n    height: props.size ? props.size : 40,\r\n    fontSize: props.fontSize,\r\n    }),\r\n\r\n    avatarImage: (props) => ({\r\n    width: props.size ? props.size : 40,\r\n    height: props.size ? props.size : 40,\r\n    }),\r\n})\r\n\r\nconst UserNameAvatar = (props) => {\r\n    const { user, size } = props;\r\n    const firstLetter = user.isDeleted ? 'D' : getFirstLetterOfName(user);\r\n    const colorProp = user.isDeleted ? { bg: '#FFF0A2', color: '#FFE145' } : getColor(user);\r\n    let fontSize = 18;\r\n\r\n    if (size === 30 || size === 32) {\r\n      fontSize = 14;\r\n    } else if (size === 88) {\r\n      fontSize = 36;\r\n    }\r\n\r\n    const styleProps = {\r\n      backgroundColor: colorProp.bg,\r\n      color: colorProp.color,\r\n      size,\r\n      fontSize,\r\n    };\r\n\r\n    const classes = useStyles(styleProps);\r\n  \r\n    return <Avatar className={classes.avatarColor}>{firstLetter}</Avatar>;\r\n};\r\n\r\nexport const ProfilePic = (props) =>  {\r\n    const { user, size } = props;\r\n    const classes = useStyles({ size });\r\n    // if (user &&\r\n    //     user.profile &&\r\n    //     user.profile.image &&\r\n    //     user.profile.image.original.relativeUrl) {\r\n    //         return (\r\n    //             <Avatar src={user.profile.image.original.relativeUrl} className={classes.avatarImage} />\r\n    //         )\r\n    // }\r\n    \r\n    if (user &&\r\n        user.profile &&\r\n        user.profile.avatar) {\r\n            return (\r\n                <Avatar src={user.profile.avatar} className={classes.avatarImage} />\r\n            )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <UserNameAvatar user={user} size={size} />\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport const getColor = (user) => {\r\n    let lastChar = 'p';\r\n    if (user && user.id) {\r\n        lastChar = user.id.substr(user.id.length - 1);\r\n    }\r\n    const charCode = lastChar.charCodeAt(0);\r\n    let bg = '#FFBBA2';\r\n    let color = '#FF7745';\r\n    switch (charCode) {\r\n        case 97:\r\n        case 113:\r\n        case 103:\r\n        case 119:\r\n        case 49:\r\n        case 111:\r\n        bg = '#FFBBA2';\r\n        color = '#FF7745';\r\n        break;\r\n        case 98:\r\n        case 114:\r\n        case 104:\r\n        case 120:\r\n        case 50:\r\n        case 57:\r\n        bg = '#E6D3FD';\r\n        color = '#CDA7FC';\r\n        break;\r\n        case 99:\r\n        case 115:\r\n        case 106:\r\n        case 122:\r\n        case 52:\r\n        case 112:\r\n        bg = '#A6F8AD';\r\n        color = '#4DF15A';\r\n        break;\r\n        case 100:\r\n        case 116:\r\n        case 105:\r\n        case 121:\r\n        case 51:\r\n        case 108:\r\n        bg = '#FFF0A2';\r\n        color = '#FFE145';\r\n        break;\r\n        case 101:\r\n        case 117:\r\n        case 107:\r\n        case 53:\r\n        case 110:\r\n        case 56:\r\n        case 54:\r\n        bg = '#FFA3C7';\r\n        color = '#FF478F';\r\n        break;\r\n        case 102:\r\n        case 118:\r\n        case 48:\r\n        case 109:\r\n        case 55:\r\n        bg = '#A2F5FF';\r\n        color = '#45EBFF';\r\n        break;\r\n        default:\r\n        bg = '#A2F5FF';\r\n        color = '#45EBFF';\r\n        break;\r\n    }\r\n    return {\r\n        bg,\r\n        color,\r\n    };\r\n}","import React, { useState, useEffect} from 'react';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport { getProfileFullName } from '../../assets/Util/text';\r\nimport { ProfilePic } from '../../assets/Util/profilePic';\r\nimport keycode from 'keycode';\r\nimport Downshift from 'downshift';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        position: 'relative',\r\n        zIndex: 3\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        left: 0,\r\n        right: 0,\r\n        maxHeight: '260px',\r\n        overflowY: 'auto',\r\n        marginTop: 45,\r\n        marginLeft: 48,\r\n        background: '#FFFFFF',\r\n        boxShadow:\r\n          '0px 2px 2px rgba(0, 0, 0, 0.24), 0px 0px 2px rgba(0, 0, 0, 0.12)',\r\n        borderRadius: 2,\r\n    },\r\n    iconWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '50px',\r\n        height: '31px'\r\n    },\r\n    iconStyle: {\r\n        fontSize: '16px',\r\n        cursor: 'pointer'\r\n    },\r\n    // iconActiveStyle: {\r\n    //     color: 'red',\r\n    //     filter: 'grayscale(0)'\r\n    // },\r\n    iconInactiveStyle: {\r\n        color: '#9e9e9e',\r\n        filter: 'grayscale(1)'\r\n    },\r\n    chip: {\r\n        margin: '4px 2px'\r\n    },\r\n    chipAvatar: {\r\n        height: '22px !important',\r\n        width: '22px !important',\r\n        marginLeft: 5,\r\n        // marginTop: 5,\r\n    },\r\n    chipRoot: {\r\n        backgroundColor: '#F6F6F6',\r\n    },\r\n    chipLabel: {\r\n        color: theme.palette.text.main,\r\n        fontWeight: 600,\r\n        fontSize: 12,\r\n        paddingLeft: 8,\r\n    },\r\n    chipDeleteIcon: {\r\n        color: '#E2E2E2',\r\n    },\r\n    inputRoot: {\r\n        flexWrap: 'wrap',\r\n    },\r\n    inputStyle: {\r\n        width: 'auto !important',\r\n        flexGrow: 1,\r\n        // marginTop : 12,\r\n        // marginBottom : 7,\r\n    },\r\n    // underline: {\r\n    //     '&:after': {\r\n    //       borderBottom: `2px solid ${theme.palette.primary.main}`,\r\n    //       transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\r\n    //     },\r\n    //     '&:before': {\r\n    //       borderBottom: '1px solid rgb(224, 224, 224)',\r\n    //     },\r\n    //     // '&:hover:not($disabled):after': {\r\n    //     //   borderBottom: '1px solid rgb(224, 224, 224) !important',\r\n    //     // },\r\n    //     '&:hover:before': {\r\n    //       // '&:hover:not($disabled):before':\r\n    //       borderBottom: '1px solid rgb(224, 224, 224) !important',\r\n    //     },\r\n    // },\r\n    menuSelected: {\r\n        backgroundColor: '#F8F8F8 !important',\r\n    },\r\n    autocomplete_user_fullname: {\r\n        paddingLeft: 8,\r\n        fontSize: 12,\r\n        color: '#2C2C2C',\r\n        fontWeight: 600,\r\n        letterSpacing: 0.2\r\n    },\r\n    autocomplete_user_username_focus: {\r\n        fontSize: 15,\r\n        color: '#e2e2e2'\r\n    },\r\n    autocomplete_user_username: {\r\n        fontSize: 15,\r\n        color: '#e2e2e2'\r\n    }\r\n}))\r\n\r\nconst token = sessionStorage.getItem('token');\r\n\r\nfunction DSTypeAhead(props) {//props: handleUsers, onFocus, onBlur\r\n    const { handleUsers, onFocus } = props;\r\n    const [ inputValue, setInputValue ] = useState('');\r\n    const [ selectedItem, setSelectedItem ] = useState([]);\r\n    const [ userInputIconOn, setUserInputIconOn ] = useState(false);\r\n    const [ employees, setEmployees] = useState();\r\n\r\n    useEffect(() => {\r\n        updateUsersToParent(selectedItem);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedItem])\r\n\r\n    useEffect(() => {\r\n        async function fetchEmployees() {\r\n            const res = await axios.get('https://camon.twgroup.vn/api/v1/home', {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            setEmployees(res.data.data.employees);\r\n            \r\n        }\r\n        fetchEmployees()\r\n    }, [])\r\n\r\n    const classes = useStyles();\r\n    \r\n    const updateUsersToParent = (selectedItem) => {\r\n        handleUsers(\r\n            selectedItem.map((id) => employees.find((user) => user.id === id)),\r\n          );\r\n    }\r\n\r\n    const renderInput = (inputProps) => {\r\n        const { InputProps, classes, ref, ...other } = inputProps;\r\n        return (\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            InputProps={{\r\n                inputRef: ref,\r\n                classes: {\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputStyle,\r\n                    underline: classes.underline,\r\n                },\r\n                ...InputProps,\r\n                // inputProps: {\r\n                //   className: classes.inputStyle\r\n                // },\r\n            }}\r\n            {...other}\r\n          />\r\n        );\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        if (inputValue && inputValue.length > 3) {\r\n          //this.debounceGetHomeInfo(); lodash\r\n        }\r\n        setInputValue(inputValue)\r\n    };\r\n\r\n    const handleChange = (item) => {\r\n        if (!item) {\r\n          setInputValue('');\r\n          return;\r\n        }\r\n    \r\n        if (selectedItem.indexOf(item) === -1) {//not found\r\n            let postSelectedItem = [...selectedItem, item];\r\n            setInputValue('');\r\n            setSelectedItem(postSelectedItem);\r\n        }\r\n    };\r\n\r\n    const handleDelete = (item) => () => {\r\n        const postSelectedItem = [...selectedItem];\r\n        postSelectedItem.splice(selectedItem.indexOf(item), 1);\r\n        setSelectedItem(postSelectedItem);\r\n        // updateUsersToParent(postSelectedItem);\r\n        handleUserInputIconStyleOff(postSelectedItem);\r\n    };\r\n\r\n    const onUserInputFocus = () => {\r\n        setUserInputIconOn(true);\r\n        onFocus();\r\n    }\r\n\r\n    const onUserInputBlur = () => {\r\n        handleUserInputIconStyleOff(selectedItem);\r\n    };\r\n\r\n    const handleUserInputIconStyleOff = (selectedUsers) => {\r\n        if( selectedUsers.length === 0 ) {\r\n            setUserInputIconOn(false);\r\n        }\r\n    }\r\n\r\n    const handleKeyDown = (e) => {\r\n        if ( selectedItem.length && !inputValue.length && keycode(e) === 'backspace' ) {\r\n            const postSelectedItem = selectedItem.slice(0, selectedItem.length - 1);\r\n            setSelectedItem(postSelectedItem);\r\n        }\r\n    };\r\n\r\n    const renderOptions = (inputValue, getItemProps, highlightedIndex) => {\r\n        // const { selectedItem } = this.state;\r\n        const users = findUsers(inputValue);\r\n        // const { classes } = this.props;\r\n\r\n        return users.map(\r\n            (user, index) => renderOption({\r\n                user,\r\n                index,\r\n                itemProps: getItemProps({item: user.id}),\r\n                highlightedIndex,\r\n                disabled: false\r\n            })\r\n        )\r\n    }\r\n\r\n    const renderOption = ({ user, index, itemProps, highlightedIndex, disabled }) => {\r\n        const isHighlighted = highlightedIndex === index;\r\n        return (\r\n            <MenuItem\r\n                {...itemProps}\r\n                disabled={disabled}\r\n                key={user.id}\r\n                selected={isHighlighted}\r\n                classes={\r\n                    { selected: classes.menuSelected}\r\n                }\r\n            >\r\n                <ProfilePic size={30} user={user} />\r\n                <span className={classes.autocomplete_user_fullname}>\r\n                    {getProfileFullName(user)}\r\n                </span>\r\n                <span className={isHighlighted ? classes.autocomplete_user_username_focus\r\n                    : classes.autocomplete_user_username }\r\n                >\r\n                    {/* { || `@${user.profile.first_name}`} */}\r\n                    { user.profile.user_name ? `@${user.profile.user_name}` : `@${user.profile.first_name}`}\r\n                </span>\r\n            </MenuItem>\r\n        )\r\n    }\r\n\r\n    const findUsers = (inputValue) => {\r\n        let count = 0;\r\n        return employees.filter((user) => {\r\n            \r\n            const firstName = user.profile.first_name || '';\r\n            // const lastName = user.profile.last_name || '';\r\n            // const userName = user.profile.user_name || '';\r\n            const email = user.email || '';\r\n            let keep = (\r\n                !inputValue ||\r\n                firstName.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1 ||\r\n                // lastName.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1 ||\r\n                // userName.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1 ||\r\n                email.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1\r\n            ) && (count < 20);\r\n            if (selectedItem.indexOf(user.id) !== -1) {\r\n                keep = false;\r\n            }\r\n            if (keep) {\r\n                count += 1;\r\n            }\r\n            return keep;\r\n        })\r\n    }\r\n    return (\r\n        <Downshift\r\n            inputValue={inputValue}\r\n            onChange={handleChange}\r\n            selectedItem={selectedItem}\r\n        >\r\n            {\r\n                (\r\n                    {\r\n                        getInputProps,\r\n                        getItemProps,\r\n                        isOpen,\r\n                        inputValue: inputValue2,\r\n                        selectedItem: selectedItem2,\r\n                        highlightedIndex,\r\n                        openMenu,\r\n                        closeMenu\r\n                    }\r\n                ) => (\r\n                    <div className={classes.root}>\r\n                        <div className={classes.iconWrapper}>\r\n                            <div className={classNames(\r\n                                classes.iconStyle,\r\n                                userInputIconOn ? classes.iconActiveStyle : classes.iconInactiveStyle\r\n                            )}\r\n                                onClick={() => {\r\n                                    this.inputRef.focus();\r\n                                }}\r\n                            >\r\n                                <span role=\"img\" aria-label=\"icon\">\r\n                                    😎\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ width: '100%' }}>\r\n                            {\r\n                                renderInput({\r\n                                    fullWidth: true,\r\n                                    classes,\r\n                                    ref: (inputRef) => {\r\n                                        return inputRef\r\n                                    },\r\n                                    InputProps: getInputProps({\r\n                                        startAdornment: selectedItem.map((item) => { //selectedItem state\r\n                                            const user = employees.find((u) => u.id === item); //employee props\r\n                                            if (user) {\r\n                                                return (\r\n                                                    <Chip\r\n                                                        avatar = {\r\n                                                            <ProfilePic size={32} user={user} />\r\n                                                        }\r\n                                                        key={item}\r\n                                                        tabIndex={-1}\r\n                                                        label={getProfileFullName(user)}\r\n                                                        className={classes.chip}\r\n                                                        classes={{\r\n                                                            root: classes.chipRoot,\r\n                                                            avatar: classes.chipAvatar,\r\n                                                            label: classes.chipLabel,\r\n                                                            deleteIcon: classes.chipDeleteIcon,\r\n                                                        }}\r\n                                                        onDelete={handleDelete(item)}\r\n                                                    />\r\n                                                )\r\n                                            }\r\n                                            return null;\r\n                                        }),\r\n                                        onChange: handleInputChange,\r\n                                        onKeyDown: handleKeyDown,\r\n                                        placeholder: 'Người được nhận',\r\n                                        id: 'integration-downshift-multiple',\r\n                                        onFocus: (event) => {\r\n                                            openMenu();\r\n                                            onUserInputFocus();\r\n                                        },\r\n                                        onBlur: (event) => {\r\n                                            closeMenu();\r\n                                            onUserInputBlur();\r\n                                        }\r\n                                    })\r\n                                })\r\n                            }\r\n                        </div>\r\n                        {\r\n                            isOpen ? (\r\n                                <Paper className={classes.paper} square>\r\n                                    {\r\n                                        renderOptions(\r\n                                            inputValue2,\r\n                                            getItemProps,\r\n                                            highlightedIndex\r\n                                        )\r\n                                    }\r\n                                </Paper>\r\n                            ) : null\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        </Downshift>\r\n\r\n    )\r\n}\r\n\r\nexport default DSTypeAhead","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        position: 'absolute',\r\n        width: 520,\r\n        padding: 54,\r\n        [theme.breakpoints.down('xs')]: {\r\n          width: 350,\r\n          padding: '20px 22px',\r\n        },\r\n        background: '#FFFFFF',\r\n        border: '1px solid #F6F6F6',\r\n        boxSizing: 'border-box',\r\n        borderRadius: 10,\r\n        outline: 'none',\r\n    },\r\n}))\r\n\r\nexport default function StyledModal(props) {\r\n    const classes = useStyles();\r\n  \r\n    return (\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={props.open}\r\n        onClose={props.handleClose}\r\n        BackdropProps={{\r\n          style: {\r\n            background: '#000000',\r\n            mixBlendMode: 'normal',\r\n            opacity: 0.8,\r\n          },\r\n        }}\r\n      >\r\n        <div className={props.customClass ? props.customClass : classes.paper}>\r\n          {props.children}\r\n        </div>\r\n      </Modal>\r\n    );\r\n}  \r\n\r\n","const LIGHT = 300;\r\nconst REGULAR = 400;\r\nconst MEDIUM = 500;\r\nconst SEMIBOLD = 600;\r\nconst BOLD = 700;\r\n\r\nexport default {\r\n    palette: {\r\n        primary: {\r\n          main: '#FF4400',\r\n        },\r\n        secondary: {\r\n          main: '#0AD71C',\r\n        },\r\n        /* Atomic Design Palette */\r\n        cyan1: '#E6FFFB',\r\n        cyan6: '#13C2C2',\r\n        cyan7: '#08979C',\r\n        gray1: '#FFFFFF',\r\n        gray2: '#FAFAFA',\r\n        gray3: '#F5F5F5',\r\n        gray4: '#E8E8E8',\r\n        gray5: '#D9D9D9',\r\n        gray6: '#BFBFBF',\r\n        gray7: '#8C8C8C',\r\n        gray8: '#595959',\r\n        gray9: '#262626',\r\n        gray10: '#000000',\r\n        athensGray: '#F7F7F9',\r\n        mischka: '#E1E1E9',\r\n        silver: '#C4C4C4',\r\n        dustRed6: '#F5222D',\r\n        dayBreakBlue2: '#BAE7FF',\r\n        volcano6: '#FA541C',\r\n        volcano7: '#D4380D',\r\n        sunriseYellow6: '#FADB14',\r\n        polarGreen6: '#52C41A',\r\n        polarGreen7: '#389E0D',\r\n        blue1: '#E6F7FF',\r\n        blue7: '#096DD9',\r\n        geekBlue1: '#F0F5FF',\r\n        geekBlue2: '#F0F2F5',\r\n        geekBlue3: '#ADC6FF',\r\n        geekBlue5: '#597EF7',\r\n        geekBlue6: '#2F54EB',\r\n        geekBlue7: '#1D39C4',\r\n        geekBlue8: '#10239E',\r\n        gold1: '#FFFBE6',\r\n        gold5: '#FFC53D',\r\n        gold6: '#FAAD14',\r\n        gold7: '#D48806',\r\n        purple1: '#F9F0FF',\r\n        purple7: '#531DAB',\r\n        /* Atomic Design Palette */\r\n    \r\n        darkText: '#2C2C2C', //  '#4d4d4f',\r\n        greenLight: '#44af69',\r\n        genoa: '#178062',\r\n        jetStream: '#B6D7CD',\r\n        lightGray1: '#E2E2E2', // '#CCCCCC'\r\n        lightGray2: '#E2E2E2',\r\n        lightGray3: '#CACACA',\r\n        lightGray4: '#D8D8D8',\r\n        lightGray5: '#D9D9D9',\r\n        lightGray6: '#BFBFBF',\r\n        drakGray2: '#888888',\r\n        darkGray3: '#9D9D9D',\r\n        darkGray7: '#8C8C8C',\r\n        fedora: '#727172',\r\n        darkGray9: '#262626',\r\n        alto: '#DDDDDD',\r\n        thunder: '#212021',\r\n        coffee: '#717274',\r\n        paleSlate: '#C1C0C1',\r\n        new: '#F7F7F9',\r\n        white: '#ffffff',\r\n        aqua: '#2292a4',\r\n        aqua2: '#08979C',\r\n        blue: '#00D0E8',\r\n        blue2: '#4a90e2',\r\n        green: '#09AC16',\r\n        green1: '#F6FFED',\r\n        green7: '#389E0D',\r\n        orange6: '#FA8C16',\r\n        brown: '#D46B08',\r\n        azalea: '#F6C2D2',\r\n        skyblue: '#00BBD1',\r\n        red: '#FF6060',\r\n        red1: '#FFF1F0',\r\n        red2: '#FC5A5A',\r\n        red6: '#F5222D',\r\n        ceriseRed: '#DE245C',\r\n        lightBlue: '#E7FCFF',\r\n        white2: '#F9F9F9',\r\n        white3: '#F6F6F6',\r\n        white4: '#E5E5E5',\r\n        yellow: '#E8C400',\r\n        yellow2: '#D4B106',\r\n        office365Logo: '#E64A19',\r\n        inherit: 'inherit',\r\n        action: {\r\n          hoverOpacity: 0.1,\r\n        },\r\n    },\r\n    typography: {\r\n        fontWeightLight: LIGHT,\r\n        fontWeightRegular: REGULAR,\r\n        fontWeightMedium: MEDIUM,\r\n        fontWeightSemibold: SEMIBOLD,\r\n        fontWeightBold: BOLD,\r\n        fontSize: 14,\r\n        fontFamily: ['\"Poppins\"', 'sans-serif'].join(','),\r\n        adminFontFamily: ['\"Roboto\"', 'sans-serif'].join(','),\r\n    },\r\n    breakPoints: {\r\n        lg: '1199.98px', // Large devices (desktops)\r\n        md: '991.98px', // Medium devices (tablets)\r\n        sm: '767.98px', // Small devices (landscape phones)\r\n        xs: '575.98px', // Extra small devices (portrait phones)\r\n    },\r\n    animations: {\r\n        AdminMain: {\r\n          prop: {\r\n            opacity: 0,\r\n            y: 20,\r\n          },\r\n          duration: 0.3,\r\n          stagger: 0.1,\r\n        },\r\n    },\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ThemeV2 from '../V2/theme';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    modalCloseButton: {\r\n        position: 'absolute',\r\n        top: 15,\r\n        right: 15,\r\n        cursor: 'pointer',\r\n        padding: '5px',\r\n        '& svg': {\r\n          '& path': {\r\n            fill: ThemeV2.palette.lightGray1,\r\n            transition: '0.3s ease',\r\n          },\r\n        },\r\n        '&:hover': {\r\n          '& svg': {\r\n            '& path': {\r\n              fill: ThemeV2.palette.darkGray3,\r\n            },\r\n          },\r\n        },\r\n    }\r\n}))\r\n\r\nfunction StyledCloseButton(props) {//props: classes,onClick\r\n    const classes = useStyles();\r\n    const { onClick, ...rest} = props;\r\n    return (\r\n        <div className={classes.modalCloseButton} onClick={onClick} {...rest}>\r\n          <svg\r\n            width=\"14\"\r\n            height=\"14\"\r\n            viewBox=\"0 0 14 14\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M13.3 0.709971C12.91 0.319971 12.28 0.319971 11.89 0.709971L6.99997 5.58997L2.10997 0.699971C1.71997 0.309971 1.08997 0.309971 0.699971 0.699971C0.309971 1.08997 0.309971 1.71997 0.699971 2.10997L5.58997 6.99997L0.699971 11.89C0.309971 12.28 0.309971 12.91 0.699971 13.3C1.08997 13.69 1.71997 13.69 2.10997 13.3L6.99997 8.40997L11.89 13.3C12.28 13.69 12.91 13.69 13.3 13.3C13.69 12.91 13.69 12.28 13.3 11.89L8.40997 6.99997L13.3 2.10997C13.68 1.72997 13.68 1.08997 13.3 0.709971Z\"\r\n              fill=\"#E2E2E2\"\r\n            />\r\n          </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledCloseButton","import Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { darken } from '@material-ui/core/styles/colorManipulator';\r\nimport themeV2 from './theme';\r\n\r\nconst StyledButton = withStyles({\r\n    contained: {\r\n        height: 44,\r\n        borderRadius: 10,\r\n        backgroundColor: themeV2.palette.greenLight,\r\n        color: themeV2.palette.white,\r\n        '&:$disabled': {\r\n            backgroundColor: `${themeV2.palette.drakGray2} !important`\r\n        },\r\n        '&:hover': {\r\n            textDecoration: 'none',\r\n            color: themeV2.palette.white,\r\n            backgroundColor: themeV2.palette.green,\r\n            // Reset on touch devices, it doesn't add specificity\r\n            '@media (hover: none)': {\r\n                backgroundColor: 'transparent',\r\n            },\r\n            boxShadow: 'none !important',\r\n        }   \r\n    },\r\n    containedPrimary: {\r\n        backgroundColor: themeV2.palette.primary.main,\r\n        color: themeV2.palette.white,\r\n        '&:hover': {\r\n          backgroundColor: darken(themeV2.palette.primary.main, 0.3),\r\n          // Reset on touch devices, it doesn't add specificity\r\n          '@media (hover: none)': {\r\n            backgroundColor: darken(themeV2.palette.primary.main, 0.3),\r\n          },\r\n        },\r\n        boxShadow: 'none !important',\r\n    },\r\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\r\n    containedSecondary: {\r\n        backgroundColor: themeV2.palette.secondary.main,\r\n        color: themeV2.palette.white,\r\n        '&:hover': {\r\n        color: `${themeV2.palette.white} !important`,\r\n        backgroundColor: darken(themeV2.palette.secondary.main, 0.3),\r\n            // Reset on touch devices, it doesn't add specificity\r\n            '@media (hover: none)': {\r\n                backgroundColor: darken(themeV2.palette.secondary.main, 0.3),\r\n            },\r\n        },\r\n        boxShadow: 'none !important',\r\n    },\r\n    label: {\r\n        textTransform: 'none',\r\n        fontFamily: themeV2.typography.fontFamily,\r\n        fontSize: 14,\r\n        fontWeight: themeV2.typography.fontWeightMedium,\r\n        fontStyle: 'normal',\r\n        fontStretch: 'normal',\r\n        lineHeight: 'normal',\r\n        letterSpacing: 'normal',\r\n        textAlign: 'center',\r\n    }\r\n})(Button)\r\n\r\nexport default StyledButton","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport classNames from 'classnames';\r\nimport themeV2 from './theme';\r\n\r\nconst styles = {\r\n  root: {\r\n    fontFamily: themeV2.typography.fontFamily,\r\n    color: themeV2.palette.darkText,\r\n  },\r\n  adminRoot: {\r\n    fontFamily: themeV2.typography.adminFontFamily,\r\n    color: themeV2.palette.darkText,\r\n  },\r\n};\r\n\r\nfunction getFontWeight(weight) {\r\n  switch (weight) {\r\n    case 'bold':\r\n      return themeV2.typography.fontWeightBold;\r\n    case 'medium':\r\n      return themeV2.typography.fontWeightMedium;\r\n    case 'semiBold':\r\n      return themeV2.typography.fontWeightSemibold;\r\n    default:\r\n      return themeV2.typography.fontWeightRegular;\r\n  }\r\n}\r\n\r\nfunction CustomTypography(props) {\r\n  const { classes, children, weight, style, className, ...rest } = props;\r\n  // const bull = <span className={classes.bullet}>•</span>;\r\n  return (\r\n    <Typography\r\n      className={classNames(classes.root, className)}\r\n      style={{ ...style, fontWeight: getFontWeight(weight) }}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction AdminTypographyComponent(props) {\r\n  const { classes, children, weight, style, className, ...rest } = props;\r\n  // const bull = <span className={classes.bullet}>•</span>;\r\n  return (\r\n    <Typography\r\n      className={classNames(classes.adminRoot, className)}\r\n      style={{ ...style, fontWeight: getFontWeight(weight) }}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n}\r\nexport const AdminTypography = withStyles(styles)(AdminTypographyComponent);\r\n\r\nCustomTypography.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  weight: PropTypes.string,\r\n  style: PropTypes.object,\r\n};\r\n\r\nCustomTypography.defaultProps = {\r\n  weight: 'Regular',\r\n  style: {},\r\n};\r\n\r\nexport default withStyles(styles)(CustomTypography);\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport ThemeV2 from './theme';\r\n\r\nconst styles = () => ({\r\n    root: {\r\n      fontFamily: ThemeV2.typography.fontFamily,\r\n      fontWeight: ThemeV2.typography.fontWeightMedium,\r\n      color: ThemeV2.palette.darkGray3,\r\n      lineHeight: '15px',\r\n      fontSize: '11px',\r\n      '&.disabled': {\r\n        opacity: '0.24',\r\n        userSelect: 'none',\r\n      },\r\n      '&.error': {\r\n        color: ThemeV2.palette.red2,\r\n      },\r\n    },\r\n});\r\nfunction HelperText(props) {\r\n    const { classes, text, disabled, error, children, ...rest } = props;\r\n    return (\r\n        <FormHelperText\r\n          className={classnames(\r\n            classes.root,\r\n            disabled ? 'disabled' : '',\r\n            error ? 'error' : '',\r\n          )}\r\n          {...rest}\r\n        >\r\n          {children}\r\n        </FormHelperText>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(HelperText);","import React from 'react';\r\nimport _ from 'lodash';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nfunction CarrotIcon(props) {\r\n  // style={{ fontSize: 73 }}\r\n  const { active, onClick, size, url, currency } = props;\r\n  if (url) {\r\n    const blendMode = active ? 'normal' : 'luminosity';\r\n    if (url.type === 'emoji') {\r\n      const emojiType = _.get(url, ['value', 'type'], 'REGULAR');\r\n      if (emojiType === 'REGULAR') {\r\n        return (\r\n          <span\r\n            className={props.className}\r\n            style={{\r\n              fontSize: size ? `${size}px` : '20px',\r\n              mixBlendMode: blendMode,\r\n              ...props.style,\r\n            }}\r\n            role=\"img\"\r\n            aria-label=\"custom-icon\"\r\n          >\r\n            {String.fromCodePoint(parseInt(url.value.hexCode, 16))}\r\n          </span>\r\n        );\r\n      }\r\n      if (emojiType === 'CUSTOM') {\r\n        return (\r\n          <img\r\n            src={url.value.url}\r\n            alt={currency}\r\n            className={props.className}\r\n            style={{\r\n              width: size ? `${size}px` : '20px',\r\n              mixBlendMode: blendMode,\r\n              ...props.style,\r\n            }}\r\n          />\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <img\r\n        src={url.value}\r\n        alt={currency}\r\n        className={props.className}\r\n        style={{\r\n          width: size ? `${size}px` : '20px',\r\n          mixBlendMode: blendMode,\r\n          ...props.style,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SvgIcon\r\n      className={props.className}\r\n      style={props.style || { fontSize: size ? size : '24' }}\r\n      viewBox=\"0 0 20 20\"\r\n      onClick={onClick}\r\n    >\r\n      <title>Gold</title>\r\n      <desc>Icon for gold</desc>\r\n      <g id=\"Logo\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n        <g id=\"coin-copy-2\">\r\n          <circle\r\n            id=\"Oval\"\r\n            fill={active ? '#FFCF40' : '#C0C0C0'}\r\n            fillRule=\"nonzero\"\r\n            cx=\"10\"\r\n            cy=\"10\"\r\n            r=\"10\"\r\n          />\r\n          <path\r\n            d=\"M5.55578364,15.4442164 C3.98747343,14.1698866 3,12.2196023 3,10 C3,6.07999038 6.07999038,3 10,3 C12.2196023,3 14.1698866,3.98747343 15.4442164,5.55578364 C14.2427551,4.57953682 12.7004073,4 11,4 C7.07999038,4 4,7.07999038 4,11 C4,12.7004073 4.57953682,14.2427551 5.55578364,15.4442164 Z\"\r\n            id=\"Combined-Shape\"\r\n            fill={active ? '#FFBF00' : '#9E9E9E'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M10,0 C4.4285802,0 0,4.4285802 0,10 C0,15.5714198 4.4285802,20 10,20 C15.5714198,20 20,15.5714198 20,10 C20,4.4285802 15.5714198,0 10,0 Z M10,17 C6.07999038,17 3,13.9200096 3,10 C3,6.07999038 6.07999038,3 10,3 C13.9200096,3 17,6.07999038 17,10 C17,13.9200096 13.9200096,17 10,17 Z\"\r\n            id=\"Shape\"\r\n            fill={active ? '#FFDB70' : '#CDCDCD'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M10,19.9966916 L10,19.9966916 C15.5714198,20.1416163 20,15.5053955 20,10 L19.857099,10 C19.1428396,10 18.5713584,10.5795743 18.4285802,11.3039488 C18.142901,13.332272 17.1428396,15.2156706 15.7143208,16.5196193 C14.5714812,17.6786434 13.0000614,18.4030179 11.2857406,18.6928673 C10.5714812,18.6927428 10,19.2721926 10,19.9966916 Z\"\r\n            id=\"Path\"\r\n            fill={active ? '#FFBF00' : '#9E9E9E'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M10,0.00330843364 L10,0.00330843364 C4.4285802,-0.141616265 0,4.49460453 0,10 L0.142900988,10 C0.857160395,10 1.42864158,9.42042571 1.5714198,8.69605123 C1.85709901,6.66772798 2.8571604,4.78432942 4.28567921,3.48038065 C5.42851881,2.32135658 6.99993862,1.5969821 8.71425941,1.3071327 C9.42864158,1.3072572 10,0.727682916 10,0.00330843364 Z\"\r\n            id=\"Path\"\r\n            fill={active ? '#FFD24F' : '#B1B1B1'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M14.2239024,14.4323171 C14.0819512,14.4323171 13.940122,14.4323171 13.7981707,14.2903659 C13.5143902,14.0065854 13.5143902,13.5808537 13.7981707,13.2970732 C14.6496341,12.4456098 15.0753659,11.1684146 15.0753659,10.0331707 C15.0753659,9.60743902 15.3591463,9.32365854 15.784878,9.32365854 C16.2106098,9.32365854 16.4943902,9.60743902 16.4943902,10.0331707 C16.4943902,11.5941463 15.9267073,13.155122 14.9334146,14.2903659 C14.6496341,14.4323171 14.3658537,14.4323171 14.2239024,14.4323171 Z\"\r\n            id=\"Path\"\r\n            fill={active ? '#FFD24F' : '#B1B1B1'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M8.5,7.5 C8.5,6.67157288 9.17157288,6 10,6 C10.8284271,6 11.5,6.67157288 11.5,7.5 L11.5,12.5 C11.5,13.3284271 10.8284271,14 10,14 C9.17157288,14 8.5,13.3284271 8.5,12.5 L8.5,7.5 Z\"\r\n            id=\"Combined-Shape\"\r\n            fill={active ? '#FFBF00' : '#9E9E9E'}\r\n          />\r\n        </g>\r\n      </g>\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nexport default CarrotIcon;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport themeV2 from './theme';\r\nimport classNames from 'classnames';\r\nimport HelperText from './HelpText';\r\nimport CarrotIcon from '../CarrotIcon';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textFieldWrapper: {\r\n      display: 'flex',\r\n      alignItems: 'start',\r\n    },\r\n    iconWrapper: {\r\n      height: '44px',\r\n      width: '44px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      background: '#F6F6F6',\r\n      borderTop: `1px solid ${themeV2.palette.lightGray1}`,\r\n      borderBottom: `1px solid ${themeV2.palette.lightGray1}`,\r\n      borderLeft: `1px solid ${themeV2.palette.lightGray1}`,\r\n      borderRadius: '3px 0 0 3px',\r\n      '&.invalid-value': {\r\n        borderTop: `1px solid ${themeV2.palette.red2}`,\r\n        borderBottom: `1px solid ${themeV2.palette.red2}`,\r\n        borderLeft: `1px solid ${themeV2.palette.red2}`,\r\n      },\r\n    },\r\n    helperText: {\r\n      marginTop: '4px',\r\n      marginLeft: -40,\r\n    },\r\n    inputWrapper: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      width: '100%',\r\n      marginBottom: '6px',\r\n      '& input': {\r\n        borderRadius: '0 3px 3px 0',\r\n        padding: '0px 14px',\r\n        height: 44,\r\n        border: `1px solid ${themeV2.palette.lightGray1}`,\r\n        fontFamily: themeV2.typography.fontFamily,\r\n        // fontSize: 16,\r\n        '&:focus': {\r\n          outline: '0',\r\n        },\r\n        '&.invalid-value': {\r\n          borderColor: themeV2.palette.red2,\r\n        },\r\n      },\r\n    },\r\n}));\r\n\r\nfunction CustomCarrotInputField(props) {\r\n\r\n    const errorClass = () => {\r\n        if (props.error) {\r\n          return 'invalid-value';\r\n        } else {\r\n          return '';\r\n        }\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const {...rest} = props;\r\n    // const {\r\n    //     id,\r\n    //     placeholder,\r\n    //     helperText,\r\n    //     inputProps,\r\n    //     error,\r\n    //     customCompanyIcon,\r\n    //     inputChar,\r\n    //     ...rest\r\n    //   } = props;\r\n    return (\r\n        <div className={classNames(classes.textFieldWrapper, errorClass())}>\r\n            <div className={classNames(classes.iconWrapper, errorClass())}>\r\n                {props.inputChar ?\r\n                    (\r\n                        props.inputChar\r\n                    ) : (\r\n                        <CarrotIcon active size='20' url= {props.customCompanyIcon} />\r\n                    )\r\n                }\r\n            </div>\r\n            <div className={classes.inputWrapper}>\r\n                <input \r\n                    id={props.id}\r\n                    className={classNames(classes.textField, errorClass())}\r\n                    autoComplete=\"off\"\r\n                    placeholder={props.placeholder}\r\n                    {...rest}\r\n                />\r\n                <HelperText\r\n                    error={props.error}\r\n                    style={{ marginLeft: -40 }}\r\n                >\r\n                    {props.error ? `🚨 ${props.helperText}` : `👉 ${props.helperText}`}\r\n                </HelperText>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomCarrotInputField","import React, { useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport StyledModal from '../V2/StyledModal';\r\nimport StyledCloseButton from '../V2/StyledCloseButton';\r\nimport StyledButton from '../V2/StyledButton';\r\nimport CustomTypography from '../V2/CustomTypography';\r\nimport CustomCarrotInputField from '../V2/CustomCarrotInputField';\r\nimport themeV2 from '../V2/theme';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    Modal: {\r\n        '& .MuiDialogContent-root': {\r\n          width: '500px',\r\n          padding: '44px 54px 24px 54px',\r\n        },\r\n    },\r\n    buttonHolder: {\r\n        marginTop: 30,\r\n        display: 'flex',\r\n    },\r\n    button: {\r\n        display: 'block',\r\n        borderRadius: 3,\r\n        width: '50%',\r\n    }\r\n}));\r\n\r\nfunction CustomImpactModal(props) {\r\n    \r\n    // const { classes, openModal, customCompanyIcon } = this.props;\r\n\r\n    const maxGivingAllowance = () => {\r\n        if (props.selectedUsers.length <= 1) {\r\n          return {\r\n            availablePoints: props.availablePointsToGive,\r\n          };\r\n        }\r\n\r\n        const maxPointsToGive = Math.floor(\r\n          props.availablePointsToGive / props.selectedUsers.length,\r\n        );\r\n\r\n        const maxPointsToGiveText = `${maxPointsToGive} each`;\r\n        return { availablePoints: maxPointsToGive, maxPointsToGiveText };\r\n    \r\n    }\r\n\r\n    const { availablePoints, maxPointsToGiveText } = maxGivingAllowance();\r\n\r\n    const [impact, setImpact] = useState('');\r\n    const [carrots, setCarrots] = useState('');\r\n    const [invalidValue, setInvalidValue] = useState(false);\r\n    const [formtouched, setFormtouched] = useState(false);\r\n    const [selectTouched, setSelectTouched] = useState(false);\r\n\r\n    const classes = useStyles();\r\n    \r\n    const onCarrotInputChange = (e) => {\r\n        const { value } = e.target;\r\n        const { availablePoints } = maxGivingAllowance();\r\n        if (!value || value.match(/^\\d{1,}$/)) {\r\n            const total = props.selectedUsers.length > 0 ? props.selectedUsers.reduce(\r\n                (sum, user) => sum + parseInt(value, 10),\r\n                    0,\r\n                )\r\n                : value;\r\n\r\n            const remaining = availablePoints - value;\r\n\r\n            let invalidValue = false;\r\n\r\n            if (total > 0) {\r\n              if (remaining < 0) {\r\n                invalidValue = true;\r\n              }\r\n            }\r\n\r\n            if (value !== '') {\r\n              setFormtouched(true)\r\n            }\r\n\r\n            else {\r\n              setFormtouched(false)\r\n            }\r\n            \r\n            setCarrots(value)\r\n            setInvalidValue(invalidValue);\r\n            // this.setState(() => ({\r\n            //   carrots: value,\r\n            //   invalidValue,\r\n            // }));\r\n            // this.props.handleCarrots(value);\r\n        }\r\n    }\r\n    const closeModal = () => {\r\n        // this.resetState();\r\n        // this.props.closeModal();\r\n        // this.setState({ selectTouched: false, formtouched: false });\r\n    }\r\n\r\n    const onConfirmClick = () => {\r\n        \r\n    }\r\n\r\n    return (\r\n        (\r\n            <StyledModal\r\n                className={classes.Modal}\r\n                open={props.openModal}\r\n                onClose={closeModal}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <StyledCloseButton onClick={closeModal} />\r\n                <CustomTypography variant=\"h5\" weight=\"bold\" gutterBottom>\r\n                    Give a custom amount.\r\n                </CustomTypography>\r\n                <CustomTypography variant=\"body2\" style={{ marginTop: 10 }} gutterBottom>\r\n                    Giving a custom amount still requires an impact selection. Select an impact and enter an amount.\r\n                </CustomTypography>\r\n                <div style={{ marginTop: '16px' }}>\r\n                    <CustomCarrotInputField \r\n                        placeholder=\"Enter custom amount...\"\r\n                        helperText={`You can give up to:  ${\r\n                          maxPointsToGiveText ? maxPointsToGiveText : availablePoints\r\n                        }`}\r\n                        error={invalidValue}\r\n                        onChange={onCarrotInputChange}\r\n                        value={carrots}\r\n                        customCompanyIcon={props.customCompanyIcon}\r\n                    />\r\n                </div>\r\n                <div className={classes.buttonHolder}>\r\n                    <StyledButton\r\n                        variant=\"contained\"\r\n                        style={{\r\n                            boxShadow: 'none',\r\n                            marginRight: 16,\r\n                            border: `1px solid ${themeV2.palette.lightGray1}`,\r\n                            backgroundColor: '#F6F6F6',\r\n                            color: themeV2.palette.darkGray3\r\n                        }}\r\n                        onClick={closeModal}\r\n                        className={classes.button}\r\n                    >\r\n                        Cancel\r\n                    </StyledButton>\r\n                    <StyledButton\r\n                        variant='contained'\r\n                        color='primary'\r\n                        className={classes.button}\r\n                        disabled={ !formtouched || invalidValue }\r\n                        onClick= {onConfirmClick}\r\n                    >\r\n                        Enter\r\n                    </StyledButton>\r\n                </div>\r\n            </StyledModal>\r\n        )\r\n    )\r\n}\r\n\r\nexport default CustomImpactModal","import React, { useState } from 'react';\r\nimport _ from 'lodash';\r\nimport ReactHoverObserver from 'react-hover-observer';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport themeV2 from '../V2/theme';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    nestedSelect: {\r\n      position: 'relative',\r\n      left: 25,\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      marginLeft: 'auto',\r\n      color: '#00BBD1',\r\n      fontWeight: themeV2.typography.fontWeightMedium,\r\n      '& .MuiSelect-selectMenu': {\r\n        marginLeft: '5px',\r\n        fontWeight: themeV2.typography.fontWeightMedium,\r\n      },\r\n      '& .MuiInput-underline:before,.MuiInput-underline:after,.MuiInput-underline:hover:before': {\r\n        borderBottom: 'none !important',\r\n      },\r\n      '& .MuiSelect-select:focus': {\r\n        background: 'transparent',\r\n      },\r\n    },\r\n    amountSelector: {\r\n      position: 'relative',\r\n      left: -65,\r\n      visibility: 'hidden',\r\n    },\r\n    CarrotIcon: {\r\n      opacity: '0.25',\r\n    },\r\n    CarrotIconHover: {\r\n      opacity: '1',\r\n    },\r\n    MenuItem: {\r\n      height: '46px',\r\n      display: 'flex',\r\n      padding: '0 0 0 16px',\r\n      cursor: 'pointer',\r\n      '&:hover': {\r\n        background: '#F8F8F8',\r\n        '& .MuiSvgIcon-root': {\r\n          opacity: 1,\r\n        },\r\n      },\r\n    },\r\n    listCarrotIconWrapper: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      height: '100%',\r\n      paddingRight: '18px',\r\n    },\r\n    menuDiv: {\r\n      display: 'flex',\r\n      flex: 1,\r\n      height: '100%',\r\n      alignItems: 'center',\r\n    },\r\n    innerDefaultValues: {\r\n      fontFamily: themeV2.typography.adminFontFamily,\r\n      fontSize: '16px',\r\n      fontWeight: themeV2.typography.fontWeightSemibold,\r\n      marginBottom: '0px',\r\n      opacity: '0.25',\r\n      marginRight: '5px',\r\n    },\r\n    innerDropdownStyle: {\r\n      maxHeight: '300px',\r\n    },\r\n}));\r\n\r\nfunction ImpactSelectorItem(props) {//props: impact,onValueChange,defaultValue,availablePointsToGive\r\n  // const {\r\n  //   classes,\r\n  //   option,\r\n  //   impact,\r\n  //   defaultValue,\r\n  //   onSubSelectToggle,\r\n  //   availablePointsToGive,\r\n  //   onValueChange,\r\n  //   canGivePoints,\r\n  //   customCompanyIcon,\r\n  //   customCurrency,\r\n  //   selectedUsers,\r\n  //   ...rest\r\n  // } = this.props;\r\n    let carrotAmount = props.defaultValue;\r\n    let innerSelectValues = _.range(0, Number(props.defaultValue) + 1);\r\n    \r\n    if(props.defaultValue > props.availablePointsToGive) {\r\n        carrotAmount = props.availablePointsToGive;\r\n        innerSelectValues = _.range(0, Number(props.availablePointsToGive) + 1);\r\n    }\r\n\r\n    const value = carrotAmount || 0;\r\n    // let customCurrencyDisp = props.customCurrency.NAME_TITLEIZED_PLURAL;\r\n    let customCurrencyDisp = 'Tim';\r\n\r\n    if (value === 1) {\r\n        // customCurrencyDisp = props.customCurrency.NAME_TITLEIZED;\r\n        customCurrencyDisp = 'Trophy';\r\n    }\r\n\r\n    let multipleUserText = '';\r\n\r\n    if (props.selectedUsers.length > 1) {\r\n        multipleUserText = 'each';\r\n    }\r\n\r\n    const onOptionSelect = () => {\r\n        let carrotAmount = props.defaultValue;\r\n\r\n        if (props.defaultValue > props.availablePointsToGive) {\r\n            carrotAmount = props.availablePointsToGive;\r\n        }\r\n\r\n        props.onValueChange(props.impact, carrotAmount);\r\n    }\r\n\r\n    const toggleSelect = () => {\r\n        props.onSubSelectToggle(!selectOpen);\r\n        setSelectOpen(!selectOpen)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        props.onValueChange(props.impact, e.target.value);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setSelectOpen(false);\r\n        props.onSubSelectToggle(false);\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setSelectOpen(true);\r\n        props.onSubSelectToggle(true);\r\n    }\r\n    \r\n    const [selectOpen, setSelectOpen] = useState(false);\r\n    const classes = useStyles();\r\n    const {...rest} = props;\r\n    return (\r\n        <div id='impact'>\r\n            <ReactHoverObserver>\r\n                {({isHovering}) => (\r\n                    <div\r\n                        className={classes.MenuItem}\r\n                        key={props.impact}\r\n                        value={props.impact}\r\n                        {...rest}\r\n                    >\r\n                        <div className={classes.menuDiv} id='select-item' onClick={onOptionSelect}>\r\n                            {props.option} Tặng {carrotAmount} {customCurrencyDisp} {multipleUserText}\r\n                        </div>\r\n                        {\r\n                            props.canGivePoint && (\r\n                                <div\r\n                                    className={classes.nestedSelect}\r\n                                    onClick={toggleSelect}\r\n                                >\r\n                                    {\r\n                                        isHovering === true ? (\r\n                                            <div id='select-custom-item'>\r\n                                                <EditIcon fontSize='inherit' style={{position: 'relative', top: '2px'}} />\r\n                                                &nbsp;Edit amount\r\n                                                <Select\r\n                                                    SelectDisplayProps = {{id: 'select-custom-item'}}\r\n                                                    onChange={handleChange}\r\n                                                    value={carrotAmount}\r\n                                                    open={selectOpen}\r\n                                                    onClose={handleClose}\r\n                                                    onOpen={handleOpen}\r\n                                                    className={classes.amountSelector}\r\n                                                    MenuProps={{ classes: {\r\n                                                        paper: classes.innerDropdownStyle\r\n                                                     }}}\r\n                                                >\r\n                                                    {\r\n                                                        innerSelectValues.map(innerSelectValue => (\r\n                                                            <MenuItem value={innerSelectValue}\r\n                                                                key={innerSelectValue}\r\n                                                            >\r\n                                                                {innerSelectValue}\r\n                                                            </MenuItem>\r\n                                                        ))\r\n                                                    }\r\n                                                </Select>\r\n                                            </div>\r\n                                        ) : (\r\n                                            ''\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                )}\r\n            </ReactHoverObserver>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImpactSelectorItem;","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport CustomImpactModal from './CustomImpactModal';\r\nimport themeV2 from '../V2/theme';\r\nimport CarrotIcon from '../CarrotIcon';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Select from '@material-ui/core/Select';\r\nimport Input from '@material-ui/core/Input';\r\nimport ImpactSelectorItem from './ImpactSelectorItem';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    formControl: {\r\n        width: '100%',\r\n    },\r\n    placeholderStyle: {\r\n        color: 'rgba(223,223,223)',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        fontSize: '1rem'\r\n    },\r\n    underline: {\r\n        '&:after': {\r\n          borderBottom: '2px solid #FFD700',\r\n          transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\r\n        },\r\n        '&:before': {\r\n          borderBottom: '1px solid rgb(224, 224, 224)',\r\n        },\r\n        '&:hover:before': {\r\n          borderBottom: '1px solid rgb(224, 224, 224) !important',\r\n        },\r\n    },\r\n    iconWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '50px',\r\n        height: '31px',\r\n    },\r\n    iconStyle: {\r\n        justifyContent: 'center',\r\n        cursor: 'pointer',\r\n    },\r\n    emoticonStyle: {\r\n        justifyContent: 'center',\r\n        cursor: 'pointer',\r\n    },\r\n    nestedFormControl: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        marginLeft: 'auto',\r\n        '& .MuiInput-underline:before': {\r\n          borderBottom: 'none',\r\n        },\r\n    },\r\n    MenuItem: {\r\n        height: '46px',\r\n        display: 'flex',\r\n        padding: '5px 18px 5px 16px',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n          background: '#F8F8F8',\r\n        },\r\n    },\r\n    menuDiv: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        height: '100%',\r\n        alignItems: 'center',\r\n    },\r\n    impactSelector: {\r\n        '& .MuiSelect-select:focus': {\r\n          background: 'transparent',\r\n        },\r\n    },\r\n    impactSelectorDisabled: {\r\n        '& .MuiSelect-icon': {\r\n          visibility: 'hidden',\r\n        },\r\n    },\r\n}));\r\n\r\nfunction ImpactValueSelector(props) {//props: carrots,impact,onChange,options,selectedUsers,mePointsToGive,carrotsPerPost,error,canGiveCustomAmount,canGivePoints,onImpactOpen,onImpactClose,customCurrency,customCompanyIcon\r\n    const [inputIconOn, setInputIconOn] = useState(false);\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [subSelectOpen, setSubSelectOpen] = useState(false);\r\n    const [customImpactModalOpen, setCustomImpactModalOpen] = useState(false);\r\n    const [impactValueSelector, setImpactValueSelector] = useState('');\r\n\r\n    const classes = useStyles();\r\n\r\n    //cpndidupdate\r\n    useEffect(() => {\r\n        if(impactValueSelector) {\r\n            setInputIconOn(true)\r\n        }\r\n        else {\r\n            setInputIconOn(false)\r\n       }\r\n\r\n    }, [impactValueSelector]);\r\n\r\n    const placeholder = 'Tặng tim';\r\n    let maxPointsToGive = props.mePointsToGive;\r\n\r\n    if( props.selectedUsers.length > 0 ) {\r\n        maxPointsToGive = Math.floor(props.mePointsToGive / props.selectedUsers.length)\r\n    }\r\n\r\n    const disableSelect = Number(props.mePointsToGive) === 0;\r\n\r\n    const filterOptions = props.options.filter((option, index) => {\r\n        if(index > 0) {\r\n            const preOption = props.options[index - 1];\r\n            if (props.maxPointsToGive < preOption.goldLimit) {\r\n                return false;\r\n              }\r\n        }\r\n        return true;\r\n    })\r\n\r\n    const handleOpen = () => {\r\n        props.onImpactOpen();\r\n        setInputIconOn(true);\r\n        setMenuOpen(true);\r\n    }\r\n    \r\n    const handleClose = (e) => {\r\n        let itemClicked = false;\r\n        if (e) {\r\n            if (e.target.id === 'select-custom-item') {\r\n                itemClicked = true;\r\n            }\r\n        }\r\n\r\n        if (!itemClicked && !subSelectOpen) {\r\n            closeSelect();\r\n        }\r\n    }\r\n\r\n    const onImpactSelected = (impact, carrots) => {\r\n        props.onChange(impact, carrots);\r\n        setImpactValueSelector(impact);\r\n        closeSelect();\r\n    }\r\n\r\n    const onSubSelectToggle = toggle => {\r\n        setSubSelectOpen(toggle)\r\n    };\r\n\r\n    const closeSelect = () => {\r\n        props.onImpactClose();\r\n        setMenuOpen(false);\r\n        if( props.impact || props.carrots ) {\r\n            setInputIconOn(true);\r\n        } else {\r\n            setInputIconOn(false);\r\n        }\r\n    };\r\n\r\n    const openCustomAmountModal = () => {\r\n        setCustomImpactModalOpen(true);\r\n    };\r\n\r\n    const closeCustomImpactModal = () => {\r\n        setCustomImpactModalOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CustomImpactModal \r\n                openModal={customImpactModalOpen}\r\n                closeModal={closeCustomImpactModal}\r\n                onClick={closeCustomImpactModal}\r\n                availablePointsToGive={props.mePointsToGive}\r\n                selectedUsers={props.selectedUsers}\r\n                values={props.options}\r\n                onImpactSelected={onImpactSelected}\r\n                customCompanyIcon={props.customCompanyIcon}\r\n            />\r\n            <div style={{display: 'flex'}}>\r\n                <div className={classes.iconWrapper}>\r\n                    <CarrotIcon\r\n                        className={props.customCompanyIcon && props.customCompanyIcon.type === 'emoji' ? classes.emoticonStyle : classes.iconStyle}\r\n                        size=\"16\"\r\n                        active={inputIconOn}\r\n                        onClick={handleOpen}\r\n                        url={props.customCompanyIcon}\r\n                        currency={props.customCurrency.NAME}\r\n                        style={{fontFamily: 'Segoe UI Emoji'}}\r\n                    />\r\n                </div>\r\n                <FormControl className={classes.formControl}>\r\n                    <Tooltip\r\n                        title={\r\n                            disableSelect\r\n                              ? `This field is disabled. You’ve used your allowance but you can still give recognitions`\r\n                              : ''\r\n                        }\r\n                        placement=\"top\"\r\n                    >\r\n                        <Select\r\n                            value={props.carrots}\r\n                            open={menuOpen}\r\n                            name='impactValue'\r\n                            displayEmpty\r\n                            fullWidth\r\n                            onOpen={handleOpen}\r\n                            onClose={(e) => handleClose(e)}\r\n                            className={classNames(classes.impactSelector, {\r\n                                [`${classes.impactSelectorDisabled}`] : disableSelect,\r\n                            })}\r\n                            disabled={disableSelect}\r\n                            input= {\r\n                                <Input\r\n                                    classes={{\r\n                                        underline: classes.underline\r\n                                    }}\r\n                                    name='impactValue'\r\n                                    id='impactValue'\r\n                                />\r\n                            }\r\n                            renderValue={() => {\r\n                                if(disableSelect) {\r\n                                    return (\r\n                                        <div className={classes.placeholderStyle}>\r\n                                            <div>\r\n                                                Your remaining allowance is 0 (zero), but you can still GIVERECOGNITIONs\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                if(!(props.impact) && !(props.carrots)) {\r\n                                    return (\r\n                                        <div className={classes.placeholderStyle}>\r\n                                            <div>{placeholder}</div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                const value = props.carrots || 0;\r\n                                let customCurrencyDisp = 'Tim';\r\n\r\n                                if( value === 1 ) {\r\n                                    customCurrencyDisp = 'Trophoy';\r\n                                }\r\n                                let goldSelected = value > 0 ? `${value} ${customCurrencyDisp}` : '';\r\n                                const total = props.selectedUsers.reduce((sum, user) => sum + parseInt(value, 10), 0);\r\n                                const remaining = props.mePointsToGive - (total > 0 ? total : value);\r\n                                let excessAlert = false;\r\n\r\n                                if(remaining < 0) {\r\n                                    excessAlert = true;\r\n                                }\r\n                                if(total > 0) {\r\n                                    if (remaining >= 0) {\r\n                                        if (Number(props.selectedUsers.length) === 1) {\r\n                                            goldSelected = `${total} ${customCurrencyDisp}`;\r\n                                        }\r\n                                        else {\r\n                                            goldSelected = `${value} ${customCurrencyDisp} each`;\r\n                                        }\r\n                                    } else {\r\n                                        goldSelected = `${value} ${customCurrencyDisp} each exceeds allowance`;\r\n                                    }\r\n                                }\r\n\r\n                                const impactObj = props.options.find(\r\n                                    option => option.value === props.impact,\r\n                                );\r\n\r\n                                let dispText;\r\n\r\n                                if (Number(value) === 0) {\r\n                                    dispText = 'No trophies';\r\n                                } \r\n                                else if (!(props.impact)) {\r\n                                    dispText = goldSelected;\r\n                                }\r\n                                else {\r\n                                    dispText = `${impactObj.label} ${goldSelected}`;\r\n                                }\r\n                                return (\r\n                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                        <div style={{ color: excessAlert ? themeV2.palette.red2 : '' }}>\r\n                                            {dispText}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }}\r\n                        >\r\n                            {\r\n                                filterOptions.map(option => (\r\n                                    <ImpactSelectorItem\r\n                                        option={option.label}\r\n                                        impact={option.value}\r\n                                        defaultValue={option.goldLimit}\r\n                                        canGivePoints={props.canGivePoints}\r\n                                        availablePointsToGive={maxPointsToGive}\r\n                                        onValueChange={onImpactSelected}\r\n                                        onSubSelectToggle={onSubSelectToggle}\r\n                                        key={option.label}\r\n                                        customCompanyIcon={props.customCompanyIcon}\r\n                                        customCurrency={props.customCurrency}\r\n                                        selectedUsers={props.selectedUsers}\r\n                                    >\r\n                                        {option.label}\r\n                                    </ImpactSelectorItem>\r\n                                ))\r\n                            }\r\n                            {props.canGiveCustomAmount && (\r\n                                <div className={classes.MenuItem}>\r\n                                    <div\r\n                                        className={classes.menuDiv}\r\n                                        onClick={openCustomAmountModal}\r\n                                    >\r\n                                        + Enter a custom amount\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </Select>\r\n                    </Tooltip>\r\n                </FormControl>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default ImpactValueSelector","export const getter = (keys, hash) => {\r\n    keys.reduce((newHash, key) => ((newHash && newHash[key]) ? newHash[key] : null), hash);\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ProfilePic } from '../../assets/Util/profilePic';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    user: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    userName: {\r\n        fontSize: '16px',\r\n        fontWeight: 'normal',\r\n        b: {\r\n          fontWeight: 'normal',\r\n        },\r\n    },\r\n    userId: {\r\n        fontSize: '12px',\r\n        fontWeight: 'normal',\r\n    },\r\n    autocomplete_user_fullname: {\r\n        paddingLeft: 8,\r\n        fontSize: 12,\r\n        color: '#2C2C2C',\r\n        fontWeight: 600,\r\n        letterSpacing: 0.2\r\n    },\r\n}));\r\n\r\nconst Entry = (props) => {\r\n    const {...parentProps} = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <div {...parentProps}>\r\n            <div className={classes.user}>\r\n                <ProfilePic size={32} user={props.mention} />\r\n                <span className={classes.autocomplete_user_fullname}>\r\n                    <div className={classes.userName}>{props.mention.name}</div>\r\n                    <div className={classes.userId}>\r\n                        {`@${props.mention.username}`}\r\n                    </div>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nfunction CustomMentionSuggesstions(props) {\r\n    const { onSearchChange, suggestions, onOpenSuggestions, onCloseSuggestions, onAddMention, MentionComponent } = props;\r\n    return (\r\n        <MentionComponent \r\n            onSearchChange={onSearchChange}\r\n            suggestions={suggestions}\r\n            onOpen={onOpenSuggestions}\r\n            onClose={onCloseSuggestions}\r\n            entryComponent={Entry}\r\n            onAddMention={onAddMention}\r\n        />\r\n    )\r\n    \r\n    \r\n}\r\n\r\nexport default CustomMentionSuggesstions","import React from 'react';\r\nimport Editor from 'draft-js-plugins-editor';\r\nimport createMentionPlugin from 'draft-js-mention-plugin';\r\nimport CustomMentionSuggestions from './CustomMentionSuggesstions';\r\n\r\nfunction CustomEditor(props) {\r\n    // const {\r\n    //     editorState,\r\n    //     onChange,\r\n    //     editorRef,\r\n    //     onBlur,\r\n    //     onFocus,\r\n    //     placeholder,\r\n    //     onSearchChange,\r\n    //     suggestions,\r\n    //     onOpenSuggestions,\r\n    //     onCloseSuggestions,\r\n    //     onAddMention,\r\n    //   } = this.props;\r\n    const mentionPlugin = createMentionPlugin({\r\n        entityMutability: 'IMMUTABLE',\r\n        mentionTrigger: '@',\r\n        supportWhitespace: true,\r\n    })\r\n\r\n    const { MentionSuggestions } = mentionPlugin;\r\n\r\n    return (\r\n        <>\r\n            <Editor\r\n                editorState={props.editorState}\r\n                onChange={props.onChange}\r\n                plugins={[mentionPlugin]}\r\n                ref={props.editorRef}\r\n                onBlur={props.onBlur}\r\n                onFocus={props.onFocus}\r\n                placeholder={props.placeholder}\r\n            />\r\n            <CustomMentionSuggestions\r\n                onSearchChange={props.onSearchChange}\r\n                suggestions={props.suggestions}\r\n                MentionComponent={MentionSuggestions}\r\n                onOpenSuggestions={props.onOpenSuggestions}\r\n                onCloseSuggestions={props.onCloseSuggestions}\r\n                onAddMention={props.onAddMention}\r\n            />\r\n        </>\r\n    )\r\n}\r\nexport default CustomEditor;","import React, { useRef, useState } from 'react';\r\n// import Fuse from 'fuse.js';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\n// import {\r\n//   GIVE_CARROTS_UI_STATUSES,\r\n//   uiActions,\r\n//   ADD_EMOJI_STATUS,\r\n// } from '../../../modules/UI-Reducers/UIReducers';\r\nimport { getter } from '../../assets/Util/object';\r\nimport CustomEditor from '../V2/CustomEditor';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        width: '100%',\r\n    },\r\n    iconWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '50px',\r\n        height: '31px',\r\n    },\r\n    iconStyle: {\r\n        fontSize: '16px',\r\n        cursor: 'pointer',\r\n    },\r\n    iconInactiveStyle: {\r\n        color: '#9e9e9e',\r\n        filter: 'grayscale(1)',\r\n    },\r\n    iconActiveStyle: {\r\n        color: theme.palette.secondary.main,\r\n        filter: 'grayscale(0)',\r\n    },\r\n    inputDiv: {\r\n        marginTop: 7,\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n        verticalAlign: 'top',\r\n        fontSize: '16px',\r\n        overflow: 'hidden',\r\n    },\r\n    errorhelper: {\r\n        color: '#f44336',\r\n        margin: 0,\r\n        fontSize: '0.75rem',\r\n        marginTop: 3,\r\n        textAlign: 'left',\r\n        fontWeight: 400,\r\n        lineHeight: 1.66,\r\n    },\r\n    textarea__input: {\r\n        width: '100%'\r\n    },\r\n    // textarea__input__input::-webkit-input-placeholder {\r\n    //     color: #e2e2e2 !important; }\r\n}))\r\n\r\nconst DIV_ID = 'gr_post_div';\r\n\r\nfunction MessageInput(props) {\r\n    const [inputIconOn, setInputIconOn] = useState(false);\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    // const { classes, editorState, error, onAddMention } = this.props;\r\n    const [editor, setEditor] = useState();\r\n    const classes = useStyles();\r\n\r\n    const onFocus = () => {\r\n        // this.setState({ inputIconOn: true });\r\n        setInputIconOn(true);\r\n        editor.focus();\r\n        props.onFocus();\r\n    }\r\n\r\n    const onChange = (editorState) => {\r\n        props.handleMessage(editorState)\r\n    }\r\n\r\n    const onInputBlur = () => {\r\n\r\n        if(props.hasText) {\r\n            setInputIconOn(true);\r\n        }\r\n        \r\n        else {\r\n            setInputIconOn(false);\r\n        }\r\n    }\r\n\r\n    const onSearchChange = () => {\r\n\r\n    }\r\n\r\n    const onOpenSuggestions = () => {\r\n\r\n    }\r\n\r\n    const onCloseSuggestions = () => {\r\n\r\n    }\r\n\r\n    const onAddMention = () => {\r\n\r\n    }\r\n    \r\n    const getErrorMessage = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.iconWrapper}>\r\n                <div className={classNames(\r\n                    classes.iconStyle,\r\n                    inputIconOn ? classes.iconActiveStyle : classes.iconInactiveStyle\r\n                )}\r\n                    onClick={onFocus}\r\n                >\r\n                    <span role=\"img\" aria-label=\"icon\">\r\n                        💌\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div\r\n                    onClick={onFocus}\r\n                    className={classNames(classes.textarea__input, DIV_ID)}\r\n                >\r\n                    <CustomEditor\r\n                        editorState={props.editorState}\r\n                        onChange={onChange}\r\n                        editorRef={(e) => {\r\n                            setEditor(e)\r\n                        }}\r\n                        onBlur={onInputBlur}\r\n                        onFocus={onFocus}\r\n                        placeholder=\"Hãy viết những lời ý nghĩa gửi đến người đó\"\r\n                        onSearchChange={onSearchChange}\r\n                        onAddMention={onAddMention}\r\n                        suggestions={suggestions}\r\n                        onOpenSuggestions={onOpenSuggestions}\r\n                        onCloseSuggestions={onCloseSuggestions}\r\n                    />\r\n                </div>\r\n                {props.error && (\r\n                    <div className={classes.errorhelper}>{getErrorMessage()}</div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MessageInput","import { convertToRaw } from 'draft-js';\r\n\r\nconst getLiteralTextFromEditor = (editorState = []) => {\r\n  const blocks = convertToRaw(editorState.getCurrentContent()).blocks;\r\n\r\n  const mappedBlocks = blocks.map(\r\n    (block) => (!block.text.trim() && '\\n') || block.text,\r\n  );\r\n\r\n  let newText = '';\r\n  for (let i = 0; i < mappedBlocks.length; i++) {\r\n    const block = mappedBlocks[i];\r\n\r\n    // handle last block\r\n    if (i === mappedBlocks.length - 1) {\r\n      newText += block;\r\n    } else {\r\n      // otherwise we join with \\n, except if the block is already a \\n\r\n      if (block === '\\n') newText += block;\r\n      else newText += block + '\\n';\r\n    }\r\n  }\r\n  return newText;\r\n};\r\n\r\nconst getTextFromEditor = (editorState, mentionsToReplace = []) => {\r\n  let newText = getLiteralTextFromEditor(editorState);\r\n  mentionsToReplace.forEach((mention) => {\r\n    newText = newText.replace(\r\n      new RegExp(mention.name, 'g'),\r\n      `@__${mention.id}__@`,\r\n    );\r\n  });\r\n  return newText;\r\n};\r\n\r\nconst getMentionsToReplace = (selectedMentions, employees) => {\r\n  \r\n  return selectedMentions.map((id) => {\r\n    const employee = employees.find((emp) => emp.id === id);\r\n    return {\r\n      id,\r\n      name: employee.name || '',\r\n    };\r\n  });\r\n};\r\n\r\nconst getMentionsFromEditorSate = (editorState, mentions) => {\r\n  const userIdsMentioned = [];\r\n  const message = getLiteralTextFromEditor(editorState);\r\n  mentions.forEach((mention) => {\r\n    if ((message.match(new RegExp(mention.name, 'g')) || []).length > 0) {\r\n      userIdsMentioned.push(mention.id);\r\n    }\r\n  });\r\n  return userIdsMentioned;\r\n};\r\n\r\nexport {\r\n  getTextFromEditor,\r\n  getMentionsToReplace,\r\n  getLiteralTextFromEditor,\r\n  getMentionsFromEditorSate,\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Img }  from 'react-image';\r\nimport { getImageForBadge } from '../../assets/Util/BadgesInfo';\r\n//import badge_selected from '../../../../img/badge_selected.png';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    badge_selector_item: {\r\n        height: 90,\r\n        padding: 10,\r\n        position: 'relative',\r\n        cursor: 'pointer'\r\n    },\r\n    badge_selector_img: {\r\n        width: 54,\r\n        height: 54\r\n    },\r\n    badge_selector_name: {\r\n        color: '#4b4f56',\r\n        fontSize: 8,\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        marginTop: 10,\r\n        wordWrap: 'break-word',\r\n        width: 54\r\n    },\r\n}))\r\nfunction BadgesItem(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div\r\n            className={classes.badge_selector_item}\r\n            onClick={props.onSelect}\r\n        >\r\n            <Img\r\n                className={classes.badge_selector_img}\r\n                alt={`badge-${props.badge.name}`}\r\n                src={getImageForBadge(props.badge)}\r\n            />\r\n            <div className={classes.badge_selector_name}>\r\n                {props.badge.displayName}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BadgesItem","import React from 'react';\r\nimport BadgesItem from './BadgesItem';\r\nimport { badges } from '../../assets/Util/BadgesInfo';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    badge_selector_wrapper: {\r\n        width: 320,\r\n        height: 230,\r\n        padding: 10\r\n    },\r\n    badge_selector_body: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    badge_selected_image: {\r\n        width: 60,\r\n        height: 61,\r\n        position: 'absolute',\r\n        top: 7,\r\n        left: 7\r\n    }\r\n}))\r\n\r\nfunction BadgesSelector(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.badge_selector_wrapper}>\r\n            <div className={classes.badge_selector_body}>\r\n                {\r\n                    badges.map((badge) => (\r\n                        <BadgesItem\r\n                            key={badge.name}\r\n                            badge={badge}\r\n                            selected={props.selectedBadge ? props.selectedBadge.name === badge.name : false}\r\n                            onSelect={() => { props.updateSelected(badge) }}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BadgesSelector;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport AdjustIcon from '@material-ui/icons/Adjust';\r\nimport classNames from 'classnames';\r\nimport { IconButton, Tooltip, Button, Popover } from '@material-ui/core';\r\nimport { titleize } from '../assets/Util/text';\r\n// import EmojiIcon from '@material-ui/icons/InsertEmoticon';\r\n// import CameraIcon from '@material-ui/icons/AddAPhoto';\r\n// import GifIcon from '@material-ui/icons/Gif';\r\nimport { getImageForBadge } from '../assets/Util/BadgesInfo';\r\nimport DSTypeAhead from './give-carrot/DSTypeAhead';\r\nimport ImpactValueSelector from './give-carrot/ImpactValueSelector';\r\nimport MessageInput from './give-carrot/MessageInput';\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\nimport { getTextFromEditor, getMentionsToReplace } from '../assets/Util/mention';\r\nimport { GIVE_RECOGNITION_HEADER } from '../assets/Util/constants';\r\nimport axios from 'axios';\r\nimport BadgesSelector from './give-carrot/BadgesSelector';\r\n\r\nconst StyledTabs = withStyles({\r\n    root: {\r\n        background: '#f6f6f6'\r\n    },\r\n    indicator: {\r\n      backgroundColor: '#EEEEEE',\r\n    },\r\n})(Tabs);\r\n\r\nconst StyledTab = withStyles(() => ({\r\n    root: {\r\n        textTransform: 'none',\r\n        color: '#2C2C2C',\r\n        // fontSize: 16,\r\n        fontWeight: 'bold',\r\n        letterSpacing: '.5px',\r\n        '&:focus': {\r\n        outline: 'none'\r\n        }\r\n    },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    post_container: {\r\n        border: '.5px solid #EEEEEE',\r\n        background: '#FFFFFF',\r\n        borderRadius: 2,\r\n        marginBottom: 10,\r\n    },\r\n    form_container: {\r\n        position: 'relative',\r\n        width: '100%'\r\n    },\r\n    p_16: {\r\n        padding: 16\r\n    },\r\n    input_row_style: {\r\n        position: 'relative',\r\n        marginBottom: 10,\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n    },\r\n    iconButton: {\r\n        color: '#9E9E9E',\r\n        '&:hover': {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.08)',\r\n        },\r\n        '&:focus': {\r\n            outline: 'none',\r\n        },\r\n    },\r\n    button: {\r\n        color: '#FFFFFF',\r\n        borderRadius: 4,\r\n        minWidth: 140,\r\n        // boxShadow: '0px 2px 3px rgba(0, 0, 0, 0.25)',\r\n        '&$disabled': {\r\n          boxShadow: 'none',\r\n        },\r\n        textTransform: 'none',\r\n    },\r\n    gc_button: {\r\n        marginLeft: 10,\r\n        marginRight: 10\r\n    },\r\n    add_emoji_img: {\r\n        width: 20,\r\n        height: 20\r\n    }\r\n}));\r\n\r\nconst impactLevels = [\r\n    {\r\n        goldLimit: 10,\r\n        label: \"🙂\",\r\n        value: \"small\"\r\n    },\r\n    {\r\n        goldLimit: 20,\r\n        label: \"😀\",\r\n        value: \"medium\"\r\n    },\r\n    {\r\n        goldLimit: 30,\r\n        label: \"👏\",\r\n        value: \"large\"\r\n    },\r\n    {\r\n        goldLimit: 40,\r\n        label: \"💪\",\r\n        value: \"huge\"\r\n    },\r\n    {\r\n        goldLimit: 50,\r\n        label: \"🚀\",\r\n        value: \"above\"\r\n    }\r\n]\r\nfunction PostRecognition (props) {\r\n    const classes = useStyles();\r\n    const [slideIndex, setSlideIndex] = useState(0);\r\n    const [selectedBadge, setSelectedBadge] = useState(null);\r\n    const [selectedUsers, setSelectedUsers] = useState([]);\r\n    const [carrots, setCarrots] = useState('');\r\n    const [impact, setImpact] = useState('');\r\n    const [carrotsTouched, setCarrotsTouched] = useState(false);\r\n    const [carrotError, setCarrotError] = useState(null);\r\n    // const [ internalTourState, setInternalTourState] = useState(null);\r\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n    const [messageError, setMessageError] = useState(null);\r\n    const [isMessageTipsVisible, setIsMessageTipsVisible] = useState(false);\r\n    const [selectedMentions, setSelectedMentions] = useState([]);\r\n    const [isFormSubmitting, setIsFormSubmitting] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    //token\r\n    const [token, setToken] = useState('')\r\n\r\n    //hardcode\r\n    const canGivePoints = true;\r\n\r\n    const canGiveCustomAmount = false;\r\n\r\n    const badgeAttachability = true;\r\n\r\n    const mePointsToGive = 200;\r\n\r\n    const carrotsPerPost = {\r\n        isSet: false,\r\n        value: 25\r\n    }\r\n\r\n    const customCurrency = {\r\n        NAME_PLURAL: \"Trophies\",\r\n        NAME_TITLEIZED: \"Trophy\",\r\n        NAME_TITLEIZED_PLURAL: \"Trophies\"\r\n    }\r\n\r\n    const customCompanyIcon = {\r\n        type: 'emoji',\r\n        value: {\r\n            hexCode: \"02764\",\r\n            id: \"heart\"\r\n        }\r\n    }\r\n\r\n    /*\r\n        get TOKEN\r\n    */\r\n    useEffect(() => {\r\n        const queryString = window.location.search;\r\n\r\n        const urlParams = new URLSearchParams(queryString);\r\n\r\n        const emailLogin = urlParams.get('email')\r\n\r\n        axios.post(`https://camon.twgroup.vn/api/v1/auth/user?email=${emailLogin}`)\r\n        .then((res) =>{\r\n            setToken(res.data.data.token);\r\n            //TODO\r\n            sessionStorage.setItem('id', res.data.data.user.id);\r\n            sessionStorage.setItem('token', res.data.data.token);\r\n            sessionStorage.setItem('points_earned', res.data.data.user.points_earned);\r\n            sessionStorage.setItem('remaining_point', res.data.data.user.remaining_point);\r\n        })\r\n    },[])\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setSlideIndex(newValue);\r\n    };\r\n\r\n    const getImageForBadgeIcon = () => {\r\n        if (selectedBadge) {\r\n            return getImageForBadge(selectedBadge, true);\r\n        }\r\n\r\n    };\r\n\r\n    const getImageTitleForBadge = () => {\r\n        \r\n        if (selectedBadge) {\r\n            return selectedBadge.displayName;\r\n        }\r\n        return 'Danh hiệu';\r\n    };\r\n\r\n    const handleTypeAheadUsers = (selectedUsersProps) => {\r\n        setSelectedUsers(selectedUsersProps);\r\n    };\r\n\r\n    const onUserInputFocus = () => {\r\n    }\r\n\r\n    const minMessageChar = {\r\n        isSet: false,\r\n        value: 25\r\n    }\r\n    // const onUserInputBlur = () => {\r\n\r\n    // }\r\n\r\n    const onImpactOpen = () => {\r\n        props.switchBalanceTab(1);\r\n    }\r\n\r\n    const onImpactClose = () => {\r\n        props.switchBalanceTab(0);\r\n    }\r\n\r\n    const handleImpactValueChange = (impact, carrots) => {\r\n        setImpact(impact);\r\n        setCarrots(carrots);\r\n        setCarrotsTouched(true);\r\n    }\r\n\r\n    const handleMessage = (editorStateProps) => {\r\n        setEditorState(editorStateProps);\r\n        setMessageError(null);\r\n    }\r\n\r\n    const handleMessageInputFocus = () => {\r\n        setIsMessageTipsVisible(true);\r\n      };\r\n\r\n    const onAddMention = (props) => {\r\n        selectedMentions.push(props.id);\r\n        setSelectedMentions(selectedMentions);\r\n    };\r\n\r\n    const messageInputHasText = editorState.getCurrentContent().hasText();\r\n    const mentionUsers = [\r\n        {\r\n            \"id\": \"5f60a577937a424a11ee2b36\",\r\n            \"_id\": \"5f60a577937a424a11ee2b36\",\r\n            \"name\" : \"Minh Y Nguyen\",\r\n            \"username\": \"minh-y-nguyen\",\r\n            \"profile\": {\r\n                \"firstName\": \"Minh Y\",\r\n                \"lastName\": \"Nguyen\",\r\n                \"username\": \"minh-y-nguyen\",\r\n                \"allowanceType\": \"regular\",\r\n                \"status\": \"normal\"\r\n            },\r\n            \"role\": [\r\n                \"Employee\"\r\n            ]\r\n        }\r\n    ]\r\n\r\n    \r\n    const shouldDisableGiveButton = () => {\r\n        let giveButtonDisabled = true;\r\n        \r\n        // const { canGivePoints, mePointsToGive } = props; //hardcode\r\n        \r\n        const blocks = convertToRaw(editorState.getCurrentContent()).blocks;\r\n        const value = blocks[0].text.trim();\r\n        \r\n        const hasText = editorState.getCurrentContent().hasText();\r\n\r\n        if (isFormSubmitting) {\r\n            giveButtonDisabled = true;\r\n        } else if (selectedUsers.length > 0  && hasText && value !== '') {\r\n            if(!carrotError) {\r\n                if(!canGivePoints || Number(mePointsToGive) === 0) {\r\n                    giveButtonDisabled = true;\r\n                }\r\n                else if(canGivePoints && carrotsTouched) {\r\n                    if (selectedUsers.length * carrots <= mePointsToGive) {\r\n                        giveButtonDisabled = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return giveButtonDisabled;\r\n    }\r\n\r\n    const giveButtonDisabled = shouldDisableGiveButton();\r\n\r\n    const onUpdateSelectedBadge = (badge) => {\r\n        if(selectedBadge) {\r\n            if(selectedBadge.name === badge.name) {\r\n                setSelectedBadge(null);\r\n                setAnchorEl(null);\r\n                return\r\n            }\r\n        }\r\n        setSelectedBadge(badge);\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const onAddBadgeClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    \r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleSubmit = (e, values={}) => {\r\n        e.preventDefault();\r\n\r\n        const mentionsToReplace = getMentionsToReplace(selectedMentions, mentionUsers)\r\n\r\n        const message = getTextFromEditor(editorState, mentionsToReplace)\r\n        // const literalMessage = getLiteralTextFromEditor(editorState);\r\n\r\n        //mapping data\r\n        const giveCarrots = {\r\n            to: selectedUsers.map((user) => user.id),\r\n            carrots_each: Number(carrots),\r\n            message,\r\n        }\r\n\r\n        if (selectedBadge) {\r\n            giveCarrots.badges = [selectedBadge.name];\r\n        }\r\n\r\n        // if(impact) {\r\n        //     giveCarrots.postImpact = props.impactData.find((item) => item.name === impact)\r\n        // }\r\n\r\n        // this.setState({\r\n        //     isFormSubmitting: true,\r\n        //     isRecognitionOpen: false,\r\n        //     isMessageTipsVisible: false,\r\n        // });\r\n\r\n        console.log(giveCarrots)\r\n        //call API\r\n        axios.post('https://camon.twgroup.vn/api/v1/feed', giveCarrots , {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token\r\n            }\r\n        }).then((res) => {\r\n            console.log(res.data.data)\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.post_container}>\r\n            <div style={{overflow: 'hidden', width: 'calc(100% - 1px)'}}>\r\n                <StyledTabs\r\n                    centered\r\n                    variant='fullWidth'\r\n                    value={slideIndex}\r\n                    onChange={handleTabChange}>\r\n                    <StyledTab disableRipple label= {GIVE_RECOGNITION_HEADER} />\r\n                </StyledTabs>\r\n            </div>\r\n            <form onSubmit={handleSubmit} className={classes.form_container}>\r\n                <div className={classes.p_16}>\r\n                    <div\r\n                        className={classNames(\r\n                            'row',\r\n                            'shoutout-user-select',\r\n                            classes.input_row_style,\r\n                        )}\r\n                    >\r\n                        <DSTypeAhead\r\n                            handleUsers={handleTypeAheadUsers}\r\n                            onFocus={onUserInputFocus}\r\n                            // onBlue={onUserInputBlur}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        canGivePoints && (\r\n                            <div className={classNames(\r\n                                'row',\r\n                                'shoutout-user-select',\r\n                                classes.input_row_style,\r\n                            )}>\r\n                                <ImpactValueSelector\r\n                                    carrots={carrots}\r\n                                    impact={impact}\r\n                                    onChange={handleImpactValueChange}\r\n                                    options={impactLevels}//hard\r\n                                    selectedUsers={selectedUsers}//hard\r\n                                    mePointsToGive={mePointsToGive}//hard\r\n                                    carrotsPerPost={carrotsPerPost}//setting\r\n                                    error={carrotError}\r\n                                    canGiveCustomAmount={canGiveCustomAmount && canGivePoints}//hard\r\n                                    canGivePoints={canGivePoints}\r\n                                    onImpactOpen={onImpactOpen}\r\n                                    onImpactClose={onImpactClose}\r\n                                    customCurrency={customCurrency}//hard\r\n                                    customCompanyIcon={customCompanyIcon}//hard\r\n                                />\r\n                            </div>\r\n                        )\r\n                    }\r\n                    <div className={classNames(\r\n                                'row',\r\n                                'shoutout-user-select',\r\n                                classes.input_row_style,\r\n                    )}>\r\n                        <MessageInput\r\n                            handleMessage={handleMessage}\r\n                            editorState={editorState}\r\n                            error={messageError}\r\n                            minMessageChar={minMessageChar}//hard\r\n                            hasText={messageInputHasText}//hard\r\n                            mentionUsers={mentionUsers}//hard\r\n                            onAddMention={onAddMention}\r\n                            onFocus={handleMessageInputFocus}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"justify-content-end align-items-center\" style={{display: 'flex', padding: 14}}>\r\n                    <div style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                        {\r\n                            badgeAttachability && (\r\n                                <Tooltip title='Danh hiệu' placement='top'>\r\n                                    <IconButton\r\n                                        className={classes.iconButton}\r\n                                        aria-label='Danh hiệu'\r\n                                        onClick={onAddBadgeClick}\r\n                                    >\r\n                                        {\r\n                                            selectedBadge ? (\r\n                                                <img\r\n                                                    className={classes.add_emoji_img}\r\n                                                    alt='badges'\r\n                                                    title={getImageTitleForBadge(selectedBadge)}\r\n                                                    src={getImageForBadgeIcon(selectedBadge)} />\r\n                                            ) : (\r\n                                            <AdjustIcon /> )\r\n                                        }\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            )\r\n                        }\r\n                        {/* <Tooltip title=\"Biểu tượng cảm xúc\" placement=\"top\">\r\n                            <IconButton\r\n                                className={classes.iconButton}\r\n                                // onClick={onEmojiClick}\r\n                                aria-label=\"Biểu tượng cảm xúc\"\r\n                            >\r\n                                <EmojiIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Hình ảnh\" placement=\"top\">\r\n                            <IconButton\r\n                                color=\"primary\"\r\n                                className={classes.iconButton}\r\n                                component=\"span\"\r\n                                aria-label=\"Hình ảnh\"\r\n                            >\r\n                                <CameraIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Gif\" placement=\"top\">\r\n                            <IconButton\r\n                                // onClick={onGifClick}\r\n                                className={classes.iconButton}\r\n                                aria-label=\"Gif\"\r\n                            >\r\n                                <GifIcon />\r\n                            </IconButton>\r\n                        </Tooltip> */}\r\n                    </div>\r\n                    <div className={classes.gc_button}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            type=\"submit\"\r\n                            disabled={giveButtonDisabled}\r\n                        >\r\n                            {\r\n                            /* {givePrivately\r\n                            ? 'Give Privately'\r\n                            : titleize(GIVE_RECOGNITION)} */\r\n\r\n                            titleize('gửi lời cảm ơn')}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Popover\r\n                    open={open}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'center',\r\n                    }}\r\n                >\r\n                    <BadgesSelector \r\n                        updateSelected={(badge) => onUpdateSelectedBadge(badge)}\r\n                        selectedBadge={selectedBadge}\r\n                    />\r\n                </Popover>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostRecognition","const GIVE_RECOGNITION_HEADER = 'Lời cảm ơn';\r\n\r\nexport {\r\n    GIVE_RECOGNITION_HEADER\r\n}","import React, { useEffect } from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport CarrotIcon from './CarrotIcon';\r\nimport moment from 'moment';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    balance_container: {\r\n        border: '.5px solid #EEEEEE',\r\n        background: '#FFFFFF',\r\n        borderRadius: 2,\r\n        marginBottom: 10,\r\n    },\r\n    redeem_container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        padding: '16px 25px'\r\n    },\r\n    balance_carrots: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        fontSize: 34,\r\n        color: '#2c2c2c',\r\n        alignItems: 'center'\r\n    },\r\n    giving_container: {\r\n        paddingLeft: 10\r\n    },\r\n    remaining_container: {\r\n        color: '#2c2c2c',\r\n        fontSize: 12,\r\n        fontWeight: 700\r\n    },\r\n    date_container: {\r\n        color: '#2c2c2c',\r\n        fontSize: 12\r\n    }\r\n}));\r\n\r\nconst StyledTabs = withStyles({\r\n    root: {\r\n        background: '#f6f6f6'\r\n    },\r\n    indicator: {\r\n      backgroundColor: '#EEEEEE',\r\n    },\r\n})(Tabs);\r\n  \r\nconst StyledTab = withStyles(() => ({\r\n    root: {\r\n        textTransform: 'none',\r\n        color: '#2C2C2C',\r\n        // fontSize: 16,\r\n        fontWeight: 'bold',\r\n        letterSpacing: '.5px',\r\n        '&:focus': {\r\n        outline: 'none'\r\n        },\r\n    },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nfunction Balance (props) {\r\n    const classes = useStyles();\r\n    let showEarnedBalance = true;\r\n    let showAllowance = true;\r\n    const { slideIndex, onHandleChange } = props;\r\n    const customCompanyIcon = {\r\n        type: 'emoji',\r\n        value: {\r\n            hexCode: \"02764\",\r\n            id: \"heart\"\r\n        }\r\n    }\r\n\r\n    const handleChange = (event, newValue) => {\r\n        onHandleChange(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.balance_container}>\r\n            <StyledTabs value={slideIndex}\r\n                variant='fullWidth'\r\n                onChange={handleChange}\r\n            >\r\n                {\r\n                    showEarnedBalance && <StyledTab value={0} label=\"Số ❤️ nhận được\" />\r\n                }\r\n                {\r\n                    showAllowance && <StyledTab value={1} label=\"Số ❤️ còn lại\" />\r\n                }\r\n            </StyledTabs>\r\n            {\r\n                slideIndex === 0 && (\r\n                    <div className={classes.redeem_container}>\r\n                        <div className={classes.balance_carrots}>\r\n                            {sessionStorage.getItem('points_earned')}\r\n                            <CarrotIcon\r\n                                style={{fontSize: 24, fontFamily: 'Segoe UI Emoji'}}\r\n                                active\r\n                                url={customCompanyIcon}/>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            {\r\n                slideIndex === 1 && (\r\n                    <div className={classes.redeem_container}>\r\n                        <div className={classes.balance_carrots}>\r\n                            <div>\r\n                                {sessionStorage.getItem('remaining_point')}\r\n                            </div>\r\n                            <CarrotIcon\r\n                                style={{ fontSize: 24, fontFamily: 'Segoe UI Emoji' }}\r\n                                active\r\n                                url={customCompanyIcon}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.giving_container}>\r\n                            <div className={classes.remaining_container}>\r\n                                Số dư\r\n                            </div>\r\n                            <div className={classes.date_container}>\r\n                                Được làm mới vào ngày:{' '}\r\n                                {moment()\r\n                                .add(1, 'months')\r\n                                .startOf('month')\r\n                                .format('D/M/YY')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Balance","import React from 'react';\r\nimport ReactHoverObserver from 'react-hover-observer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport classNames from 'classnames';\r\nimport { getProfileFullName } from '../assets/Util/text';\r\nimport { getBadgeObjectForName, getImageForBadge } from '../assets/Util/BadgesInfo';\r\nimport CarrotIcon from './CarrotIcon';\r\nimport { ProfilePic } from '../assets/Util/profilePic';\r\n\r\nconst useStyle = makeStyles({\r\n    feed_card_header_text: {\r\n        flexFlow: 'row wrap',\r\n        display: 'flex',\r\n        alignItems: 'baseline'\r\n    },\r\n    username_clickable: {\r\n        cursor: 'pointer',\r\n        color: '#2c2c2c'\r\n    },\r\n    feed_card_from: {\r\n        fontWeight: 600,\r\n        whiteSpace: 'normal',\r\n        // fontSize: 14\r\n    },\r\n    feed_card_to: {\r\n        fontWeight: 600,\r\n        whiteSpace: 'normal',\r\n        // fontSize: 14\r\n    },\r\n    feed_card_badge_img: {\r\n        width: 20,\r\n        height: 20,\r\n        margin: '0 3px',\r\n        whiteSpace: 'normal'\r\n    },\r\n    username_clickable_to_span: {\r\n        color: '#f40',\r\n        cursor: 'pointer'\r\n    },\r\n    feed_card_carrots: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        margin: '16px 0',\r\n        padding: 12,\r\n        color: '#2c2c2c'\r\n    },\r\n    users_list_container: {\r\n        position: 'relative',\r\n        cursor: 'pointer',\r\n        color: '#2C2C2C'\r\n    },\r\n    user_list_hover : {\r\n        position: 'absolute',\r\n        width: 300,\r\n        top: 20,\r\n        left: -10,\r\n        zIndex: 99,\r\n        borderRadius: 2,\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        backgroundColor: 'white',\r\n        transition: 'transform 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, opacity 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\r\n        boxSizing: 'border-box',\r\n        WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)',\r\n        boxShadow: 'rgba(0, 0, 0, 0.12) 0px 1px 6px, rgba(0, 0, 0, 0.12) 0px 1px 4px',\r\n        overflowY: 'auto'\r\n    }\r\n})\r\n\r\nconst ClickableFromUserName = ({ user }) => {\r\n    // const onClick = () => {\r\n    //   onUserClicked(user);\r\n    // };\r\n    const classes = useStyle();\r\n    return (\r\n      <p\r\n        // onClick={onClick}\r\n        className={\r\n          user.isDeleted\r\n            ? classNames(classes.username_clickable, classes.feed_card_from, classes.deactivated_user)\r\n            : classNames(classes.username_clickable , classes.feed_card_from)\r\n        }\r\n        style={{ marginBottom: 0 }}\r\n      >\r\n        {user.isDeleted ? 'Deactivated User' : getProfileFullName(user)}\r\n      </p>\r\n    );\r\n};\r\n\r\nconst ClickableUserName = ({ user }) => {\r\n    // const onClick = () => {\r\n    //     onUserClicked(user);\r\n    // };\r\n    const classes = useStyle();\r\n    return (\r\n        <p\r\n        // onClick={onClick}\r\n          className={\r\n            user.isDeleted ? 'deactivated_user' : classes.username_clickable_to_span\r\n          }\r\n          style={{ marginBottom: 0 }}\r\n        >\r\n          {user.isDeleted ? 'Deactivated User' : getProfileFullName(user)}\r\n        </p>\r\n    )\r\n}\r\nfunction FeedCardTitle(props) {\r\n    const classes = useStyle();\r\n    // const to = props.to.users;\r\n\r\n    const hasBadge = () => {\r\n        const badge = props.badges && props.badges.length > 0\r\n            ? getBadgeObjectForName(props.badges[0])\r\n            : null\r\n        if (badge) {\r\n            return (\r\n                <span className={classes.feed_card_gave}>\r\n                    &nbsp;đã cảm ơn và trao danh hiệu{' '}\r\n                    <img className={classes.feed_card_badge_img}\r\n                        alt={badge.displayName}\r\n                        title={badge.displayName}\r\n                        src={getImageForBadge(badge, true)}\r\n                    />\r\n                    {badge.displayName} cho&nbsp;\r\n                </span>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <span className={classes.feed_card_gave} style={{ display: 'contents', marginBottom: 0 }}>\r\n                    &nbsp;đã cảm ơn&nbsp;\r\n                </span>\r\n            )\r\n        }\r\n    }\r\n\r\n    const UserNameComponent = (props) => {\r\n        const onClickListItem = (user) => {\r\n            // onUserClicked(user)\r\n            console.log('onUserClicked')\r\n        }\r\n        const usersToShow = Array.from(props.users);\r\n        usersToShow.shift();\r\n        return (\r\n            <div className={classes.users_list_container} style={{display: 'flex'}}>\r\n                <ClickableUserName \r\n                    user={props.users[0]}\r\n                    isTo\r\n                    // onUserClicked={onUserClicked}\r\n                />\r\n                &nbsp;and {`${props.users.length - 1} others`}\r\n                {\r\n                    props.isHovering && (\r\n                        <div className={classes.user_list_hover}>\r\n                            <List>\r\n                                {\r\n                                    usersToShow.map((user) => (\r\n                                        <ListItem\r\n                                            button\r\n                                            key={user.id}\r\n                                            onClick={(user) => onClickListItem(user)}\r\n                                        >\r\n                                            <ListItemAvatar>\r\n                                                <ProfilePic size={40} user={user} />\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={getProfileFullName(user)} />\r\n                                        </ListItem>\r\n                                    ))\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.feed_card_header_text}>\r\n            <ClickableFromUserName \r\n                user={props.from}\r\n                // onUserClicked={onUserClicked()}\r\n            />\r\n            {hasBadge()}\r\n            {props.to.length > 2 ? (\r\n                <span className={classes.feed_card_to} style={{ display: 'flex' }}>\r\n                    <ReactHoverObserver>\r\n                        <UserNameComponent\r\n                            users={props.to}\r\n                            // onUserClicked={onUserClicked}\r\n                        />\r\n                    </ReactHoverObserver>\r\n                </span>\r\n            ) : Number(props.to.length) === 1 ? (\r\n                <span className={classes.feed_card_to} style={{display: 'flex'}}>\r\n                    <ClickableUserName\r\n                        user={props.to[0]}\r\n                        // isTo\r\n                        // onUserClicked={this.onUserClicked}\r\n                    />\r\n                </span>\r\n            ) : (\r\n                <span className={classes.feed_card_to} style={{display: 'flex'}}>\r\n                    <ClickableUserName\r\n                        user={props.to[0]}\r\n                        // isTo\r\n                        // onUserClicked={this.onUserClicked}\r\n                    />\r\n                    <span className=\"feed-card-gave\">&nbsp;and&nbsp;</span>\r\n                    <ClickableUserName\r\n                        user={props.to[1]}\r\n                        // isTo\r\n                        // onUserClicked={this.onUserClicked}\r\n                    />\r\n                </span>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeedCardTitle;\r\n\r\nexport const FeedValue = (props) => {\r\n    const classes = useStyle();\r\n    return (\r\n        <div className={classes.feed_card_carrots}>\r\n            <div>{props.value}</div>\r\n            <CarrotIcon\r\n                style={{ fontSize: 20, fontFamily: 'Segoe ui emoji' }}\r\n                active\r\n                url={props.customCompanyIcon}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { getter } from '../assets/Util/object';\r\nimport { ProfilePic } from '../assets/Util/profilePic';\r\nimport { getAgoTime } from '../assets/Util/time';\r\nimport { getPostFormattedMessage } from '../assets/Util/text';\r\nimport FeedCardTitle, { FeedValue } from './FeedComponent';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FavourtieIcon from '@material-ui/icons/Favorite';\r\nimport classNames from 'classnames';\r\nimport axios from 'axios';\r\n\r\nconst StyledCard = withStyles({\r\n    root: {\r\n        background: '#FFFFFF',\r\n        border: '0.5px solid #EEEEEE',\r\n        boxSizing: 'border-box',\r\n        borderRadius: 2,\r\n        boxShadow: 'none',\r\n        overflow: 'visible',\r\n    }\r\n})(Card);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        // marginLeft: '5px',\r\n        // marginRight: '5px',\r\n        marginBottom: '12px',\r\n    },\r\n    feed_card_header: {\r\n        display: 'flex',\r\n        padding: 16,\r\n        position: 'relative'\r\n    },\r\n    feed_card_title: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        paddingRight: 45,\r\n        marginLeft: 16\r\n    },\r\n    feed_carrot_value: {\r\n        display: 'inline-block',\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 4,\r\n        color: '#000',\r\n        fontSize: 18,\r\n        fontWeight: 700\r\n    },\r\n    feed_card_carrots: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        margin: '16px 0',\r\n        padding: 12,\r\n        color: '#2c2c2c'\r\n    },\r\n    feed_carrot_time: {\r\n        color: 'rgba(0,0,0,.54)',\r\n        // fontSize: 14\r\n    },\r\n    feed_card_message: {\r\n        color: '#2c2c2c',\r\n        padding: '0 16px 16px',\r\n        whiteSpace: 'pre-wrap',\r\n        fontWeight: 400,\r\n        // fontSize: 14\r\n    },\r\n    feed_card_action: {\r\n        padding: '0 14px 6px',\r\n        display: 'flex',\r\n        justifyContent: 'flex-start'\r\n    },\r\n    iconButton: {\r\n        color: '#9E9E9E',\r\n        '&:focus': {\r\n          outline: 'none',\r\n        },\r\n    },\r\n    commentOn: {\r\n        color: '#0AD71C',\r\n    },\r\n    heartOn: {\r\n        color: '#FF0266',\r\n    },\r\n    privateIcon: {\r\n        marginRight: 5,\r\n    },\r\n    taggedUser: {\r\n        color: 'red',\r\n    },\r\n}));\r\n\r\nconst renderAvatar = (card) => {\r\n    const feedType = getter(['card', 'type'], card) || 'recognition';\r\n    switch (feedType) {\r\n        case 'recognition':\r\n        default: {\r\n            return (\r\n            <div style={{width: 40, height: 40}}>\r\n                <ProfilePic size={40} user={card.from} />\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst customCompanyIcon = {\r\n    type: 'emoji',\r\n    value: {\r\n        hexCode: \"02764\",\r\n        id: \"heart\"\r\n    }\r\n}\r\n\r\nfunction FeedCard(props) {\r\n    const classes = useStyles();\r\n    const { card }= props;\r\n    // const [cardState, setCardState] = useState(props.card)\r\n    const feedType = getter(['card', 'type'], card) || 'recognition';\r\n    const [didILike, setDidILike] = useState();\r\n    const me = sessionStorage.getItem('id');\r\n    const token = sessionStorage.getItem('token');\r\n    \r\n    useEffect(() => {\r\n        props.card.likes.find((user) => (setDidILike(user.id === me)));\r\n\r\n    \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const onFavouriteClick = () => {\r\n        //callAPI\r\n        axios.get(`https://camon.twgroup.vn/api/v1/feed/${card.id}/like`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token\r\n            }\r\n        }).then((res) => {\r\n            //setCardState(res.data.data);\r\n            setDidILike(!didILike)\r\n\r\n        })\r\n    }\r\n    return (\r\n        <StyledCard key={card.id} className={classes.card}>\r\n            <div className={classes.feed_card_header}>\r\n                {renderAvatar(card)}\r\n                <div className={classes.feed_card_title}>\r\n                    {\r\n                        feedType === 'recognition' ? (\r\n                            <FeedCardTitle\r\n                                to={card.to}\r\n                                from={card.from}\r\n                                badges={card.badges}\r\n                                coreValue={card.coreValue}\r\n                            />\r\n                        ) : (\r\n                            // <FeedAnniversaryTitle to={this.props.card.to} type={feedType} />\r\n                            <div>FeedAnniversaryTitle</div>\r\n                        )\r\n                    }\r\n                    <span className={classes.feed_carrot_time} style={{ display: 'flex', alignItems: 'center' }}>\r\n                        {getAgoTime(card.created_at)}\r\n                    </span>\r\n                </div>\r\n                {card.carrots_each > 0 && (\r\n                    <div className={classes.feed_carrot_value}>\r\n                    <FeedValue\r\n                        customCompanyIcon={customCompanyIcon}\r\n                        value={ card.carrots_each * card.to.length }\r\n                    />\r\n                    </div>\r\n                )}\r\n                {/* {mediaUrl && mediaUrl.length > 0 && isImage ? (\r\n                    <div className=\"feed-image__div\">\r\n                        <Img className=\"media__Image\" alt=\"media\" src={mediaUrl} />\r\n                    </div>\r\n                    ) : (\r\n                    <div className=\"feed-media__div\">\r\n                        <Img className=\"media__Image\" alt=\"media\" src={mediaUrl} />\r\n                    </div>\r\n                )} */}\r\n                \r\n            </div>\r\n            <div className={classes.feed_card_message}>\r\n                {getPostFormattedMessage(\r\n                    card.message,\r\n                    card.taggedUsers\r\n                    // this.onUserClicked,\r\n                )}\r\n            </div>\r\n            <div className={classes.feed_card_action}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between', width: '100%', }}>\r\n                    <div style={{ display: 'flex' }}>\r\n                        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                            <IconButton\r\n                                onClick={onFavouriteClick}\r\n                                className={\r\n                                    didILike\r\n                                    ? classNames(classes.iconButton, classes.heartOn)\r\n                                    : classes.iconButton\r\n                                }\r\n                                component=\"span\"\r\n                                aria-label=\"Favourite\"\r\n                            >\r\n                                <FavourtieIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </StyledCard>\r\n    )\r\n}\r\n\r\nexport default FeedCard","import moment from 'moment';\r\n\r\nexport const getAgoTime = (serTime) => {\r\n    const time = moment(serTime);\r\n\r\n    if (Math.abs(moment().diff(time)) < 1000) {\r\n        return 'just now';\r\n    }\r\n\r\n    return time.fromNow();\r\n}","import React, { useEffect, useState } from 'react';\r\nimport FeedCard from './FeedCard';\r\nimport axios from 'axios';\r\n\r\nconst token = sessionStorage.getItem('token');\r\n\r\nfunction Feed() {\r\n    const [homeFeed, setHomeFeed] = useState([]);\r\n    useEffect(() => {\r\n        axios('https://camon.twgroup.vn/api/v1/feed', {\r\n            method: 'get',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token\r\n            }\r\n        }).then((res) => {\r\n            setHomeFeed(res.data.data)\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                homeFeed.map((feed) => (\r\n                    <FeedCard key={feed.id} card={feed} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed;","import React from 'react';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n  toggleOverlay: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    right: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    zIndex: '99',\r\n  },\r\n  paper: {\r\n    background: '#fff',\r\n    boxShadow: '0px 2px 7px rgba(0, 0, 0, 0.15)',\r\n    overflow: 'hidden',\r\n    zIndex: 9999,\r\n  },\r\n};\r\n\r\nfunction DropdownMenu (props) {\r\n    const {classes, open, onClose, anchorEl, children, placement} = props;\r\n\r\n    // const [dropdownMenu, setDropdownMenu] = useState(false);\r\n    // const [actionsPopover, setActionsPopover] = useState(null);\r\n  \r\n    // const onActionClick = (e) => {\r\n    //     e.preventDefault();\r\n    //     setDropdownMenu(!dropdownMenu);\r\n    // }\r\n\r\n    // const handleActionsPopoverClose = () => {\r\n    //     setActionsPopover(false)\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            {open && (\r\n                <div className={classes.toggleOverlay} onClick={onClose}></div>\r\n            )}\r\n            <Popper\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                style={{ zIndex: 9999 }}\r\n                placement={placement ? placement : 'bottom'}\r\n                transition\r\n            >\r\n                {({ TransitionProps }) => (\r\n                    <Fade {...TransitionProps} timeout={350}>\r\n                    <div className={classes.paper}>{children}</div>\r\n                    </Fade>\r\n                )}\r\n            </Popper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(DropdownMenu);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport DropIcon from '@material-ui/icons/ArrowDropDown';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DropdownMenu from '../components/DropdownMenu';\r\nimport { getProfileFullName } from '../assets/Util/text';\r\nimport classNames from 'classnames';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    right_column_box: {\r\n        position: 'relative',\r\n        background: '#FFFFFF',\r\n        border: '0.5px solid #EEEEEE',\r\n        borderRadius: 2,\r\n        padding: 20,\r\n        marginBottom: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap'\r\n    },\r\n    right_column_header: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        flexGrow: 1\r\n    },\r\n    right_column_header_text: {\r\n        fontWeight: 700,\r\n        // fontSize: 16,\r\n        color: '#2c2c2c',\r\n        flexGrow: 1\r\n    },\r\n    dropIcon: {\r\n        position: 'absolute',\r\n        right: 2,\r\n        color: '#4A4A4A',\r\n    },\r\n    top_receivers_row_div: {\r\n        position: 'relative',\r\n        borderBottom: '1px solid #e0e0e0',\r\n        paddingBottom: 5,\r\n        paddingTop: 5\r\n    },\r\n    top_receivers_name: {\r\n        color: '#2c2c2c',\r\n        // fontSize: 14,\r\n        paddingRight: 40,\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    top_receivers_carrots: {\r\n        display: 'flex',\r\n        position: 'absolute',\r\n        right: 0\r\n    },\r\n    top_receivers_carrots_text: {\r\n        color: '#212121',\r\n        // fontSize: 14,\r\n        fontWeight: 700\r\n    }\r\n}));\r\n\r\nconst StyledButton = withStyles({\r\n    root: {\r\n        textTransform: 'none',\r\n        // width: 160,\r\n        minHeight: 30,\r\n        padding: '5px 8px',\r\n        paddingRight: 28,\r\n        position: 'relative',\r\n        '&:focus': {\r\n            outline: 'none',\r\n        }\r\n    },\r\n    label: {\r\n        color: '#4A4A4A',\r\n        fontSize: 15,\r\n        justifyContent: 'start',\r\n        fontWeight: 'lighter',\r\n    },\r\n})(Button);\r\n\r\nconst token = sessionStorage.getItem('token');\r\n\r\nfunction TopReceivers() {\r\n    const classes = useStyles();\r\n    const [topEarnedUsers , setTopEarnedUsers] = useState([])\r\n    const [value, setValue] = useState(1);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    useEffect(()=> {\r\n        axios.get('https://camon.twgroup.vn/api/v1/home/sidebar', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token\r\n            }\r\n        }).then((res) => {\r\n            setTopEarnedUsers(res.data.data.top_earned_users)\r\n        })\r\n    },[])\r\n\r\n    const handleOptionClick = (event) => {\r\n        setAnchorEl(anchorEl ? null : event.currentTarget);\r\n    }\r\n\r\n    const handleMenuItemClick = (e, idx) => {\r\n        let filterBy;\r\n        if (idx === 1) {\r\n            filterBy = 'monthly';\r\n        }\r\n\r\n        else if (idx === 2) {\r\n            filterBy = 'quarterly';\r\n        }\r\n\r\n        else {\r\n            filterBy = 'alltime';\r\n        }\r\n\r\n        //dispatch action\r\n        // this.props.dispatch(getSidebarInfoAction(filterBy));\r\n        setValue(idx);\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const onUserClicked = (user) => {\r\n        //call API\r\n        // this.props.dispatch(uiActions.showUserProfile(user));\r\n        alert(\"click user\");\r\n    }\r\n    \r\n    const getTopReceiversSorted = () => {\r\n        \r\n        let sorted = topEarnedUsers.sort((a, b) => a.count < b.count);\r\n        sorted = sorted.length > 5 ? sorted.slice(0, 5) : sorted;\r\n        return sorted;\r\n    };\r\n\r\n    let buttonLabel;\r\n\r\n    if (value === 1) {\r\n      buttonLabel = 'Tháng';\r\n    }\r\n\r\n    else if (value === 2) {\r\n      buttonLabel = 'Quý';\r\n    }\r\n\r\n    else {\r\n      buttonLabel = 'Tất cả';\r\n    }\r\n\r\n    const isEmpty = topEarnedUsers.length === 0;\r\n\r\n    const CarrotText = (props) => (\r\n      <div className={classes.top_receivers_carrots}>\r\n        <div\r\n          className={classes.top_receivers_carrots_text}\r\n          style={{ marginRight: 10 }}\r\n        >\r\n          {props.value}\r\n        </div>\r\n        {/* <img src={ic_gc_carrot} alt=\"carrot\" className=\"allowance-change-carrrot__img\" /> */}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.right_column_box}>\r\n            <div className={classes.right_column_header}>\r\n                <div className={classes.right_column_header_text}>\r\n                    Cá nhân có sức ảnh hưởng\r\n                </div>\r\n                <StyledButton\r\n                    aria-label='Options'\r\n                    aria-owns={anchorEl ? 'menu' : null}\r\n                    aria-haspopup='true'\r\n                    onClick={handleOptionClick}\r\n                >\r\n                    {buttonLabel}\r\n                    <DropIcon className={classes.dropIcon} />\r\n                </StyledButton>\r\n                <DropdownMenu\r\n                    id=\"menu\"\r\n                    anchorEl={anchorEl}\r\n                    open= {Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                    PaperProps={{\r\n                        style: {\r\n                            width: 150,\r\n                        },\r\n                    }}\r\n                >\r\n                    <MenuItem\r\n                        key={1}\r\n                        // selected={this.state.value === 1}\r\n                        onClick={(e) => handleMenuItemClick(e, 1)}\r\n                    >\r\n                        Tháng\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                        key={2}\r\n                        // selected={this.state.value === 1}\r\n                        onClick={(e) => handleMenuItemClick(e, 2)}\r\n                    >\r\n                        Quý\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                        key={3}\r\n                        // selected={this.state.value === 2}\r\n                        onClick={(e) => handleMenuItemClick(e, 3)}\r\n                    >\r\n                        Tất cả\r\n                    </MenuItem>\r\n                </DropdownMenu>\r\n            </div>\r\n            <div className='container' style={{marginTop: '10px'}}>\r\n            {!isEmpty ?\r\n            (\r\n                getTopReceiversSorted().map((receiver) => (\r\n                    <div key={receiver.user.id} className={classNames(\r\n                        'row',\r\n                        'justify-content-start',\r\n                        classes.top_receivers_row_div)}>\r\n                        <div className={classes.top_receivers_name} style={{cursor: 'pointer'}} \r\n                            onClick={() => onUserClicked(receiver.user)}>\r\n                            {getProfileFullName(receiver.user)}\r\n                        </div>\r\n                        <CarrotText value={receiver.count} />\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                    <div className=\"container top_receivers_noname_container\">\r\n                        <div className=\"row justify-content-center medium_icon_popovers\">\r\n                            <span role=\"img\" aria-label=\"Smirking Face\">\r\n                            😏\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"row justify-content-center top_receivers_noname\">\r\n                            No top receivers, yet\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopReceivers","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport { getBadgeObjectForName, getImageForBadge } from '../assets/Util/BadgesInfo';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    right_column_box: {\r\n        position: 'relative',\r\n        background: '#FFFFFF',\r\n        border: '0.5px solid #EEEEEE',\r\n        borderRadius: 2,\r\n        padding: 20,\r\n        marginBottom: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap'\r\n    },\r\n    right_column_header: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        flexGrow: 1\r\n    },\r\n    right_column_header_text: {\r\n        fontWeight: 700,\r\n        // fontSize: 16,\r\n        color: '#2c2c2c',\r\n        flexGrow: 1\r\n    },\r\n    top_receivers_row_div: {\r\n        position: 'relative',\r\n        borderBottom: '1px solid #e0e0e0',\r\n        paddingBottom: 5,\r\n        paddingTop: 5\r\n    },\r\n    top_receivers_name: {\r\n        color: '#2c2c2c',\r\n        // fontSize: 14,\r\n        paddingRight: 40,\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    top_receivers_carrots: {\r\n        display: 'flex',\r\n        position: 'absolute',\r\n        right: 0\r\n    },\r\n    top_receivers_carrots_text: {\r\n        color: '#212121',\r\n        fontSize: 14,\r\n        fontWeight: 700\r\n    },\r\n    top_badges_names: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    top_badges_img: {\r\n        width: 20,\r\n        height: 20,\r\n        marginRight: 5\r\n    }\r\n}));\r\n\r\nconst token = sessionStorage.getItem('token');\r\nfunction TopBadges() {\r\n    useEffect(() => {\r\n        axios.get('https://camon.twgroup.vn/api/v1/home/sidebar', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token\r\n            }\r\n        }).then((res) => {\r\n            setTopBadges(res.data.data.top_badges)\r\n        })\r\n    }, [])\r\n\r\n    const classes = useStyles();\r\n\r\n    const [topBadges, setTopBadges] = useState([]);\r\n\r\n    const BadgeText = (props) => {\r\n        const badgeObj = getBadgeObjectForName(props.name);\r\n        const badgeImg = getImageForBadge(badgeObj, true);\r\n        return (\r\n          <div className={classes.top_badges_names}>\r\n            <img src={badgeImg} alt={badgeObj.displayName} className={classes.top_badges_img} />\r\n            <div className={classes.top_receivers_name}>{badgeObj.displayName}</div>\r\n          </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={classes.right_column_box}>\r\n            <div className={classes.right_column_header}>\r\n                <div className={classes.right_column_header_text}>\r\n                    Danh hiệu đứng đầu\r\n                </div>\r\n            </div>\r\n            <div className='container' style={{marginTop: '10px'}}>\r\n                <div>\r\n                    {\r\n                        (topBadges && topBadges.length > 0) ?\r\n                            topBadges.map((badge) => (\r\n                                <div key={badge.name} className={classNames(\r\n                                    'row',\r\n                                    'justify-content-start',\r\n                                    classes.top_receivers_row_div)}>\r\n                                        <BadgeText name={badge.name} />\r\n                                        <div className={classNames(classes.top_receivers_carrots, classes.top_receivers_carrots_text)}>\r\n                                            {badge.count}\r\n                                        </div>\r\n                                </div>\r\n                        ))\r\n                        : \r\n                        (\r\n                            <div className=\"container top_receivers_noname_container\">\r\n                                <div className=\"row justify-content-center medium_icon_popovers\">\r\n                                    <span role=\"img\" aria-label=\"Smirking Face\">\r\n                                    🤔\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"row justify-content-center top_receivers_noname\">\r\n                                    No top badges, yet\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBadges","import React, { useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PostRecognition from '../components/PostRecognition';\r\nimport InfoRecognition from '../components/InfoRecognition';\r\nimport Feed from '../components/Feed';\r\nimport TopReceivers from '../components/TopReceivers';\r\nimport TopBadges from '../components/TopBadges';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    fixed_right_panel: {\r\n        position: 'fixed',\r\n        top: 16,\r\n        right: 0,\r\n        overflowY: 'auto',\r\n        maxHeight: 'calc(100vh - 16px)'\r\n    },\r\n}));\r\n\r\nfunction Home () {\r\n    const classes = useStyles();\r\n    const [balanceTabToShow, setBalanceTabToShow] = useState(0);\r\n\r\n    const onHandleTabChange = (tabIndex) => {\r\n        setBalanceTabToShow(tabIndex);\r\n    }\r\n\r\n    const badgeSetStatus = true;//setting\r\n    // const coreValueSetStatus = true;//setting\r\n    return (\r\n        <Container>\r\n            <Row className='position-relative justify-content-start'>\r\n                <Col xs={6} md={6} lg={8} style={{padding: '0px'}}>\r\n                    <PostRecognition\r\n                        switchBalanceTab={onHandleTabChange}\r\n                    />\r\n                    <Feed />\r\n                </Col>\r\n                <Col xs={6} md={6} lg={4} style={{padding: '0 32px'}} className={classes.fixed_right_panel}>\r\n                    <InfoRecognition \r\n                        slideIndex={balanceTabToShow}\r\n                        onHandleChange={onHandleTabChange}\r\n                    />\r\n                    <TopReceivers />\r\n                    {badgeSetStatus && <TopBadges />}\r\n                    {/* {coreValueSetStatus && <TopCoreValues />} */}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport './sass/main.scss';\r\nimport Home from './pages/Home';\r\n// import NavigationBar from './components/NavigationBar';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n        {/* <NavigationBar /> */}\r\n        <main className=\"main-content\">\r\n            <section>\r\n                <Home />\r\n            </section>\r\n        </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\r\nimport { CssBaseline } from '@material-ui/core';\r\n\r\nconst LIGHT = 300;\r\nconst REGULAR = 400;\r\nconst SEMIBOLD = 500;\r\nconst BOLD = 600;\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#FF4400',\r\n    },\r\n    secondary: {\r\n      main: '#0AD71C',\r\n    },\r\n    text: {\r\n      main: 'red',\r\n    },\r\n  },\r\n  props: {\r\n    MuiDialogTitle: {\r\n      disableTypography: true,\r\n    },\r\n    MuiButtonBase: {\r\n      disableRipple: true,\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      '@global': {\r\n        button: {\r\n          '&:focus': {\r\n            outline: 'none !important',\r\n          },\r\n        },\r\n        body: {\r\n          backgroundColor: '#f6f6f6',\r\n        },\r\n      },\r\n    },\r\n    MuiIconButton: {\r\n      root: {\r\n        '&:focus': {\r\n          outline: 'none !important',\r\n        },\r\n      },\r\n    },\r\n    MuiFormLabel: {\r\n      // Name of the component ⚛️ / style sheet\r\n      root: {\r\n        // Name of the rule\r\n        color: 'rgb(0,0,0,0.38)', // Some CSS\r\n      },\r\n    },\r\n    MuiInput: {\r\n      root: {\r\n        fontSize: '1rem',\r\n      },\r\n      underline: {\r\n        '&:after': {\r\n          borderBottom: '2px solid #FF4400',\r\n          transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\r\n        },\r\n        '&:before': {\r\n          borderBottom: '1px solid rgb(224, 224, 224)',\r\n        },\r\n        '&:hover:before': {\r\n          borderBottom: '1px solid rgb(224, 224, 224) !important',\r\n        },\r\n      },\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        boxShadow: 'none',\r\n        '&:focus': {\r\n          outline: 'none',\r\n        },\r\n      },\r\n      containedPrimary: {\r\n        boxShadow: 'none',\r\n        color: '#FFF',\r\n        minWidth: 80,\r\n        backgroundColor: '#EB6200',\r\n        '&:hover': {\r\n          color: '#FFF',\r\n          backgroundColor: '#F3933C'\r\n        },\r\n      },\r\n      containedSecondary: {\r\n        boxShadow: 'none',\r\n        color: '#FFF',\r\n        '&:hover': {\r\n          color: '#FFF',\r\n        },\r\n      },\r\n    },\r\n    MuiDialogTitle: {\r\n      root: {\r\n        color: '#000',\r\n        fontSize: 20,\r\n        fontWeight: 500,\r\n      },\r\n    },\r\n  },\r\n  typography: {\r\n    fontWeightLight: LIGHT,\r\n    fontWeightRegular: REGULAR,\r\n    fontWeightSemibold: SEMIBOLD,\r\n    fontWeightBold: BOLD,\r\n    fontSize: 16,\r\n    htmlFontSize: 16,\r\n    fontFamily: ['IBM Plex Sans', 'sans-serif'].join(','),\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <App />\r\n    </MuiThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}