{"version":3,"sources":["assets/images/badges/closer_badge.png","assets/images/badges/creativity_badge.png","assets/images/badges/culture_badge.png","assets/images/badges/detail_master_badge.png","assets/images/badges/goal_smasher_badge.png","assets/images/badges/idea_maker_badge.png","assets/images/badges/initiative_badge.png","assets/images/badges/innovator_badge.png","assets/images/badges/launcher_badge.png","assets/images/badges/leadership_badge.png","assets/images/badges/lifesaver_badge.png","assets/images/badges/motivator_badge.png","assets/images/badges/navigator_badge.png","assets/images/badges/obstacle_badge.png","assets/images/badges/problem_solver_badge.png","assets/images/badges/teamwork_badge.png","assets/images/badges/top_earner_badge.png","assets/Util/text.js","assets/Util/profilePic.js","store/StoreContext.js","components/give-carrot/DSTypeAhead.jsx","components/V2/StyledModal.jsx","components/V2/theme.js","components/V2/StyledCloseButton.jsx","components/V2/StyledButton.jsx","components/V2/CustomTypography.jsx","components/V2/HelpText.jsx","components/CarrotIcon.jsx","components/V2/CustomCarrotInputField.jsx","components/give-carrot/CustomImpactModal.jsx","components/give-carrot/ImpactSelectorItem.jsx","components/give-carrot/ImpactValueSelector.jsx","components/V2/CustomMentionSuggesstions.jsx","components/V2/CustomEditor.jsx","components/give-carrot/MessageInput.jsx","components/atom/Body.jsx","assets/Util/constants.js","components/give-carrot/GiveRecognitionTips.jsx","assets/Util/BadgesInfo.js","components/give-carrot/BadgesItem.jsx","components/give-carrot/BadgesSelector.jsx","assets/Util/mention.js","components/PostRecognition.jsx","components/InfoRecognition.jsx","assets/Util/object.js","components/FeedComponent.js","components/FeedCard.jsx","assets/Util/time.js","components/Feed.jsx","components/DropdownMenu.jsx","components/TopReceivers.jsx","components/TopBadges.jsx","pages/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MENTION_REGEX","getProfileFullName","user","profile","first_name","last_name","useStyles","makeStyles","avatar","margin","avatarColor","props","color","backgroundColor","fontWeight","width","size","height","fontSize","avatarImage","UserNameAvatar","firstLetter","isDeleted","slice","toUpperCase","getFirstLetterOfName","colorProp","bg","getColor","styleProps","classes","Avatar","className","ProfilePic","src","lastChar","id","substr","length","charCodeAt","StoreContext","React","createContext","children","useState","token","setToken","me","setMe","points_earned","setPointEarned","remaining_point","setRemainingPoint","useEffect","queryString","window","location","search","emailLogin","URLSearchParams","get","axios","post","then","res","data","store","Provider","value","theme","root","display","position","zIndex","paper","left","right","maxHeight","overflowY","marginTop","marginLeft","background","boxShadow","borderRadius","iconWrapper","justifyContent","alignItems","iconStyle","cursor","iconInactiveStyle","filter","chip","chipAvatar","chipRoot","chipLabel","palette","text","main","paddingLeft","chipDeleteIcon","inputRoot","flexWrap","inputStyle","flexGrow","menuSelected","autocomplete_user_fullname","letterSpacing","autocomplete_user_username_focus","autocomplete_user_username","DSTypeAhead","handleUsers","onFocus","selectedItem","userInputIconOn","onUserInputIconOn","inputValue","setInputValue","employees","setEmployees","useContext","a","headers","fetchEmployees","handleInputChange","e","target","handleDelete","item","postSelectedItem","splice","indexOf","handleUserInputIconStyleOff","onUserInputFocus","selectedUsers","handleKeyDown","keycode","renderOption","index","itemProps","highlightedIndex","disabled","isHighlighted","MenuItem","key","selected","user_name","findUsers","count","firstName","email","keep","toLowerCase","onChange","getInputProps","getItemProps","isOpen","inputValue2","openMenu","closeMenu","classNames","iconActiveStyle","onClick","inputRef","focus","role","aria-label","style","inputProps","InputProps","ref","other","TextField","autoComplete","input","underline","renderInput","fullWidth","startAdornment","map","find","u","Chip","tabIndex","label","deleteIcon","onDelete","onKeyDown","placeholder","event","onBlur","Paper","square","renderOptions","top","transform","padding","breakpoints","down","StyledModal","Modal","aria-labelledby","aria-describedby","open","onClose","handleClose","BackdropProps","mixBlendMode","opacity","customClass","primary","secondary","cyan1","cyan6","cyan7","gray1","gray2","gray3","gray4","gray5","gray6","gray7","gray8","gray9","gray10","athensGray","mischka","silver","dustRed6","dayBreakBlue2","volcano6","volcano7","sunriseYellow6","polarGreen6","polarGreen7","blue1","blue7","geekBlue1","geekBlue2","geekBlue3","geekBlue5","geekBlue6","geekBlue7","geekBlue8","gold1","gold5","gold6","gold7","purple1","purple7","darkText","greenLight","genoa","jetStream","lightGray1","lightGray2","lightGray3","lightGray4","lightGray5","lightGray6","drakGray2","darkGray3","darkGray7","fedora","darkGray9","alto","thunder","coffee","paleSlate","new","white","aqua","aqua2","blue","blue2","green","green1","green7","orange6","brown","azalea","skyblue","red","red1","red2","red6","ceriseRed","lightBlue","white2","white3","white4","yellow","yellow2","office365Logo","inherit","action","hoverOpacity","typography","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightSemibold","fontWeightBold","fontFamily","join","adminFontFamily","breakPoints","lg","md","sm","xs","animations","AdminMain","prop","y","duration","stagger","modalCloseButton","fill","ThemeV2","transition","StyledCloseButton","rest","viewBox","xmlns","d","StyledButton","withStyles","contained","themeV2","textDecoration","containedPrimary","darken","containedSecondary","textTransform","fontStyle","fontStretch","lineHeight","textAlign","Button","styles","adminRoot","getFontWeight","weight","CustomTypography","Typography","defaultProps","userSelect","error","FormHelperText","classnames","CarrotIcon","active","url","currency","blendMode","type","emojiType","_","String","fromCodePoint","parseInt","hexCode","alt","SvgIcon","stroke","strokeWidth","fillRule","cx","cy","r","textFieldWrapper","borderTop","borderBottom","borderLeft","helperText","inputWrapper","flexDirection","marginBottom","border","outline","borderColor","CustomCarrotInputField","errorClass","inputChar","customCompanyIcon","textField","buttonHolder","button","CustomImpactModal","maxGivingAllowance","availablePoints","availablePointsToGive","maxPointsToGive","Math","floor","maxPointsToGiveText","carrots","setCarrots","invalidValue","setInvalidValue","formtouched","setFormtouched","closeModal","openModal","variant","gutterBottom","match","reduce","sum","marginRight","nestedSelect","amountSelector","visibility","CarrotIconHover","listCarrotIconWrapper","paddingRight","menuDiv","flex","innerDefaultValues","innerDropdownStyle","ImpactSelectorItem","carrotAmount","defaultValue","innerSelectValues","range","Number","customCurrencyDisp","multipleUserText","onOptionSelect","onValueChange","impact","toggleSelect","onSubSelectToggle","selectOpen","setSelectOpen","handleChange","handleOpen","ReactHoverObserver","isHovering","option","canGivePoint","Select","SelectDisplayProps","onOpen","MenuProps","innerSelectValue","formControl","placeholderStyle","emoticonStyle","nestedFormControl","impactSelector","impactSelectorDisabled","ImpactValueSelector","inputIconOn","onInputIconOn","mePointsToGive","menuOpen","setMenuOpen","subSelectOpen","setSubSelectOpen","customImpactModalOpen","setCustomImpactModalOpen","impactValueSelector","setImpactValueSelector","disableSelect","filterOptions","options","preOption","goldLimit","onImpactOpen","onImpactSelected","closeSelect","toggle","onImpactClose","closeCustomImpactModal","values","customCurrency","NAME","FormControl","Tooltip","title","placement","name","displayEmpty","itemClicked","Input","renderValue","goldSelected","total","remaining","excessAlert","dispText","impactObj","canGivePoints","canGiveCustomAmount","userName","b","userId","Entry","parentProps","mention","username","CustomMentionSuggesstions","onSearchChange","suggestions","onOpenSuggestions","onCloseSuggestions","onAddMention","MentionComponent","entryComponent","CustomEditor","mentionPlugin","createMentionPlugin","entityMutability","mentionTrigger","supportWhitespace","MentionSuggestions","editorState","plugins","editorRef","inputDiv","verticalAlign","overflow","errorhelper","textarea__input","MessageInput","inputIconMessageOn","onInputIconMessageOn","editor","setEditor","handleMessage","hasText","getErrorMessage","variantMap","body2","body2SemiBold","body2Bold","body2Medium","Body","parentClassName","inline","dataTestId","fontColor","variantFromMap","paletteColor","bodyStyle","useMemo","data-testid","MemoizedBody","memo","displayName","RECOGNITION_TIPS","body","collapsingHeader","toggleButton","tip","gridTemplateColumns","tipsWrapper","indexHolder","tipIndex","backgroundSize","content","contentWrapper","paddingTop","expandOpen","GiveRecognitionTips","onToggleClick","onToggleKeyPress","expanded","setExpanded","onKeyPress","IconButton","aria-expanded","Collapse","in","timeout","unmountOnExit","icon","badges","getBadgeObjectForName","badgeName","badge","getImageForBadge","creativity_badge","culture_badge","detail_master_badge","goal_smasher_badge","idea_maker_badge","initiative_badge","innovator_badge","launcher_badge","leadership_badge","lifesaver_badge","motivator_badge","navigator_badge","obstacle_badge","problem_solver_badge","teamwork_badge","top_earner_badge","closer_badge","badge_selector_item","badge_selector_img","badge_selector_name","wordWrap","BadgesItem","onSelect","badge_selector_wrapper","badge_selector_body","badge_selected_image","BadgesSelector","selectedBadge","updateSelected","getLiteralTextFromEditor","blocks","convertToRaw","getCurrentContent","mappedBlocks","block","trim","newText","i","getTextFromEditor","mentionsToReplace","forEach","replace","RegExp","getMentionsToReplace","selectedMentions","employee","emp","StyledTabs","indicator","Tabs","StyledTab","Tab","disableRipple","post_container","form_container","p_16","input_row_style","iconButton","minWidth","gc_button","add_emoji_img","impactLevels","Alert","elevation","PostRecognition","slideIndex","setSlideIndex","setSelectedBadge","setSelectedUsers","setImpact","setUserInputIconOn","setInputIconOn","setInputIconMessageOn","carrotsTouched","setCarrotsTouched","carrotError","EditorState","createEmpty","setEditorState","messageError","setMessageError","isMessageTipsVisible","setIsMessageTipsVisible","isRecognitionOpen","setIsRecognitionOpen","setSelectedMentions","isFormSubmitting","anchorEl","setAnchorEl","openMessage","setOpenMessage","handleCloseMessage","reason","messageInputHasText","mentionUsers","giveButtonDisabled","shouldDisableGiveButton","Boolean","handleRecognitionTipsToggle","resetForm","centered","newValue","onSubmit","preventDefault","message","giveCarrots","to","carrots_each","setTimeout","reload","carrotsPerPost","isSet","switchBalanceTab","NAME_PLURAL","NAME_TITLEIZED","NAME_TITLEIZED_PLURAL","editorStateProps","minMessageChar","push","currentTarget","getImageForBadgeIcon","TypeError","x","titleize","Snackbar","autoHideDuration","severity","Popover","anchorOrigin","vertical","horizontal","onUpdateSelectedBadge","balance_container","redeem_container","balance_carrots","giving_container","remaining_container","date_container","Balance","onHandleChange","moment","add","startOf","format","getter","keys","hash","newHash","useStyle","feed_card_header_text","flexFlow","username_clickable","feed_card_from","whiteSpace","feed_card_to","feed_card_badge_img","username_clickable_to_span","feed_card_carrots","users_list_container","users_list_hover","boxSizing","WebkitTapHighlightColor","ClickableFromUserName","deactivated_user","ClickableUserName","FeedCardTitle","UserNameComponent","usersToShow","Array","from","users","shift","isTo","List","ListItem","console","log","ListItemAvatar","ListItemText","feed_card_gave","hasBadge","FeedValue","StyledCard","Card","card","feed_card_header","feed_card_title","feed_carrot_value","feed_carrot_time","feed_card_message","feed_card_action","commentOn","heartOn","privateIcon","taggedUser","FeedCard","feedType","liked","didILike","setDidILike","onUserClicked","likes","renderAvatar","coreValue","serTime","time","abs","diff","fromNow","getAgoTime","created_at","taggedUsers","replacedText","reactStringReplace","emoji","getPostFormattedMessage","component","Feed","homeFeed","setHomeFeed","method","some","feed","toggleOverlay","bottom","Popper","TransitionProps","Fade","right_column_box","right_column_header","right_column_header_text","dropIcon","top_receivers_row_div","paddingBottom","top_receivers_name","textOverflow","top_receivers_carrots","top_receivers_carrots_text","minHeight","TopReceivers","topEarnedUsers","setTopEarnedUsers","setValue","top_earned_users","buttonLabel","handleMenuItemClick","idx","isEmpty","CarrotText","aria-owns","aria-haspopup","PaperProps","sorted","sort","getTopReceiversSorted","receiver","alert","top_badges_names","top_badges_img","TopBadges","topBadges","setTopBadges","top_badges","BadgeText","badgeObj","badgeImg","fixed_right_panel","Home","balanceTabToShow","setBalanceTabToShow","onHandleTabChange","Container","Row","Col","InfoRecognition","App","hostname","createMuiTheme","MuiDialogTitle","disableTypography","MuiButtonBase","overrides","MuiCssBaseline","MuiIconButton","MuiFormLabel","MuiInput","MuiButton","htmlFontSize","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"uHAAAA,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,kD,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,8C,2bCM9BC,EAAgB,cAEhBC,EAAqB,SAACC,GAC/B,GAAIA,GAAQA,EAAKC,QAAS,CACtB,GAAgC,OAA5BD,EAAKC,QAAQC,YAAkD,OAA3BF,EAAKC,QAAQE,UACjD,MAAM,GAAN,OAAUH,EAAKC,QAAQC,YAG3B,GAA+B,OAA3BF,EAAKC,QAAQE,WAAkD,OAA5BH,EAAKC,QAAQC,WAChD,MAAM,GAAN,OAAUF,EAAKC,QAAQE,WAG3B,GAAIH,EAAKC,QAAQE,WAAaH,EAAKC,QAAQC,WACvC,MAAM,GAAN,OAAUF,EAAKC,QAAQC,WAAvB,YAAqCF,EAAKC,QAAQE,WAI1D,MAAO,I,SClBLC,EAAYC,YAAW,CACzBC,OAAQ,CACJC,OAAQ,IAGZC,YAAa,SAACC,GAAD,MAAY,CACzBC,MAAOD,EAAMC,MACbC,gBAAiBF,EAAME,gBACvBC,WAAY,MACZC,MAAOJ,EAAMK,KAAOL,EAAMK,KAAO,GACjCC,OAAQN,EAAMK,KAAOL,EAAMK,KAAO,GAClCE,SAAUP,EAAMO,WAGhBC,YAAa,SAACR,GAAD,MAAY,CACzBI,MAAOJ,EAAMK,KAAOL,EAAMK,KAAO,GACjCC,OAAQN,EAAMK,KAAOL,EAAMK,KAAO,OAIhCI,EAAiB,SAACT,GAAW,IACvBT,EAAeS,EAAfT,KAAMc,EAASL,EAATK,KACRK,EAAcnB,EAAKoB,UAAY,IDDL,SAACpB,GACnC,OAAIA,GAAQA,EAAKC,SAAWD,EAAKC,QAAQC,WACjC,GAAN,OAAUF,EAAKC,QAAQC,WAAWmB,MAAM,EAAG,GAAGC,eAEzC,GCHsCC,CAAqBvB,GAC1DwB,EAAYxB,EAAKoB,UAAY,CAAEK,GAAI,UAAWf,MAAO,WAAcgB,EAAS1B,GAC9EgB,EAAW,GAEF,KAATF,GAAwB,KAATA,EACjBE,EAAW,GACO,KAATF,IACTE,EAAW,IAGb,IAAMW,EAAa,CACjBhB,gBAAiBa,EAAUC,GAC3Bf,MAAOc,EAAUd,MACjBI,OACAE,YAGIY,EAAUxB,EAAUuB,GAE1B,OAAO,kBAACE,EAAA,EAAD,CAAQC,UAAWF,EAAQpB,aAAcW,IAGvCY,EAAa,SAACtB,GAAY,IAC3BT,EAAeS,EAAfT,KAAMc,EAASL,EAATK,KACRc,EAAUxB,EAAU,CAAEU,SAU5B,OAAId,GACAA,EAAKC,SACLD,EAAKC,QAAQK,OAEL,kBAACuB,EAAA,EAAD,CAAQG,IAAKhC,EAAKC,QAAQK,OAAQwB,UAAWF,EAAQX,cAMzD,kBAAC,EAAD,CAAgBjB,KAAMA,EAAMc,KAAMA,KAMjCY,EAAW,SAAC1B,GACrB,IAAIiC,EAAW,IACXjC,GAAQA,EAAKkC,KACbD,EAAWjC,EAAKkC,GAAGC,OAAOnC,EAAKkC,GAAGE,OAAS,IAE/C,IACIX,EAAK,UACLf,EAAQ,UACZ,OAHiBuB,EAASI,WAAW,IAIjC,KAAK,GACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,GACL,KAAK,IACLZ,EAAK,UACLf,EAAQ,UACR,MACA,KAAK,GACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,GACL,KAAK,GACLe,EAAK,UACLf,EAAQ,UACR,MACA,KAAK,GACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,GACL,KAAK,IACLe,EAAK,UACLf,EAAQ,UACR,MACA,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,GACL,KAAK,IACLe,EAAK,UACLf,EAAQ,UACR,MACA,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,GACL,KAAK,IACL,KAAK,GACL,KAAK,GACLe,EAAK,UACLf,EAAQ,UACR,MACA,KAAK,IACL,KAAK,IACL,KAAK,GACL,KAAK,IACL,KAAK,GAIL,QACAe,EAAK,UACLf,EAAQ,UAGZ,MAAO,CACHe,KACAf,U,2BChJK4B,EAAeC,IAAMC,cAAc,MAEjC,cAAiB,IAAfC,EAAc,EAAdA,SAAc,EACDC,mBAAS,IADR,mBACpBC,EADoB,KACbC,EADa,OAEPF,mBAAS,IAFF,mBAEpBG,EAFoB,KAEhBC,EAFgB,OAGaJ,qBAHb,mBAGpBK,EAHoB,KAGLC,EAHK,OAIkBN,qBAJlB,mBAIpBO,EAJoB,KAIHC,EAJG,KAM3BC,qBAAU,WACN,IAAMC,EAAcC,OAAOC,SAASC,OAI9BC,EAFY,IAAIC,gBAAgBL,GAETM,IAAI,SAEjCC,IAAMC,KAAN,0DAA8DJ,IAC7DK,MAAK,SAACC,GACHlB,EAASkB,EAAIC,KAAKA,KAAKpB,OACvBG,EAAMgB,EAAIC,KAAKA,KAAK/D,KAAKkC,IACzBc,EAAec,EAAIC,KAAKA,KAAK/D,KAAK+C,eAClCG,EAAkBY,EAAIC,KAAKA,KAAK/D,KAAKiD,sBAE3C,IAEF,IAAMe,EAAQ,CACVrB,QACAE,KACAE,gBACAE,kBACAC,qBAGJ,OACI,kBAACZ,EAAa2B,SAAd,CAAuBC,MAAOF,GACzBrB,EAAQF,EAAW,OCtB1BrC,EAAYC,aAAW,SAAC8D,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,OACTxD,MAAO,OACPyD,SAAU,WACVC,OAAQ,GAEZC,MAAO,CACHF,SAAU,WACVC,OAAQ,EACRE,KAAM,EACNC,MAAO,EACPC,UAAW,QACXC,UAAW,OACXC,UAAW,GACXC,WAAY,GACZC,WAAY,UACZC,UACE,mEACFC,aAAc,GAElBC,YAAa,CACTb,QAAS,OACTc,eAAgB,SAChBC,WAAY,SACZvE,MAAO,OACPE,OAAQ,QAEZsE,UAAW,CACPrE,SAAU,OACVsE,OAAQ,WAMZC,kBAAmB,CACf7E,MAAO,UACP8E,OAAQ,gBAEZC,KAAM,CACFlF,OAAQ,WAEZmF,WAAY,CACR3E,OAAQ,kBACRF,MAAO,kBACPiE,WAAY,GAGhBa,SAAU,CACNhF,gBAAiB,WAErBiF,UAAW,CACPlF,MAAOyD,EAAM0B,QAAQC,KAAKC,KAC1BnF,WAAY,IACZI,SAAU,GACVgF,YAAa,GAEjBC,eAAgB,CACZvF,MAAO,WAEXwF,UAAW,CACPC,SAAU,QAEdC,WAAY,CACRvF,MAAO,kBACPwF,SAAU,GAoBdC,aAAc,CACV3F,gBAAiB,sBAErB4F,2BAA4B,CACxBP,YAAa,EACbhF,SAAU,GACVN,MAAO,UACPE,WAAY,IACZ4F,cAAe,IAEnBC,iCAAkC,CAC9BzF,SAAU,GACVN,MAAO,WAEXgG,2BAA4B,CACxB1F,SAAU,GACVN,MAAO,eAwQAiG,OApQf,SAAqBlG,GAAQ,IAAD,OAChBmG,EAA2EnG,EAA3EmG,YAAaC,EAA8DpG,EAA9DoG,QAASC,EAAqDrG,EAArDqG,aAAcC,EAAuCtG,EAAvCsG,gBAAiBC,EAAsBvG,EAAtBuG,kBADrC,EAEctE,mBAAS,IAFvB,mBAEhBuE,EAFgB,KAEJC,EAFI,OAKWxE,qBALX,mBAKhByE,EALgB,KAKLC,EALK,KAMhBzE,EAAUJ,IAAM8E,WAAW/E,GAA3BK,MACFf,EAAUxB,IAEhB+C,qBAAU,WAAM,4CACZ,4BAAAmE,EAAA,sEACsB3D,IAAMD,IAAI,uCAAwC,CAChE6D,QAAS,CACL,eAAgB,mBAChB,8BAA+B,IAC/B,cAAiB5E,KAL7B,OACUmB,EADV,OAQIsD,EAAatD,EAAIC,KAAKA,KAAKoD,WAR/B,4CADY,uBAAC,WAAD,wBAYZK,KACD,CAAC7E,IAEJ,IAsBM8E,EAAoB,SAACC,GACvB,IAAMT,EAAaS,EAAEC,OAAOzD,MACxB+C,GAAcA,EAAW7E,OAG7B8E,EAAcD,IAgBZW,EAAe,SAACC,GAAD,OAAU,WAC3B,IAAMC,EAAgB,YAAOhB,GAC7BgB,EAAiBC,OAAOjB,EAAakB,QAAQH,GAAO,GACpDjB,EAAYkB,GACZG,EAA4BH,KAG1BI,EAAmB,WACrBlB,GAAkB,GAClBH,KAOEoB,EAA8B,SAACE,GACJ,IAAzBA,EAAc/F,QACd4E,GAAkB,IAIpBoB,EAAgB,SAACV,GACnB,GAAKZ,EAAa1E,SAAW6E,EAAW7E,QAAyB,cAAfiG,IAAQX,GAAqB,CAC3E,IAAMI,EAAmBhB,EAAazF,MAAM,EAAGyF,EAAa1E,OAAS,GACrEwE,EAAYkB,KAiBdQ,EAAe,SAAC,GAA4D,IAA1DtI,EAAyD,EAAzDA,KAAMuI,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,iBAAkBC,EAAe,EAAfA,SACxDC,EAAgBF,IAAqBF,EAC3C,OACI,kBAACK,EAAA,EAAD,iBACQJ,EADR,CAEIE,SAAUA,EACVG,IAAK7I,EAAKkC,GACV4G,SAAUH,EACV/G,QACI,CAAEkH,SAAUlH,EAAQ0E,gBAGxB,kBAAC,EAAD,CAAYxF,KAAM,GAAId,KAAMA,IAC5B,0BAAM8B,UAAWF,EAAQ2E,4BACpBxG,EAAmBC,IAExB,0BAAM8B,UAAW6G,EAAgB/G,EAAQ6E,iCACnC7E,EAAQ8E,4BAER1G,EAAKC,QAAQ8I,UAAb,WAA6B/I,EAAKC,QAAQ8I,WAA1C,WAA4D/I,EAAKC,QAAQC,eAMrF8I,EAAY,SAAC/B,GACf,IAAIgC,EAAQ,EACZ,OAAO9B,EAAU3B,QAAO,SAACxF,GAErB,IAAMkJ,EAAYlJ,EAAKC,QAAQC,YAAc,GAGvCiJ,EAAQnJ,EAAKmJ,OAAS,GACxBC,IACCnC,IAC8D,IAA/DiC,EAAUG,cAAcrB,QAAQf,EAAWoC,iBACgB,IAA3DF,EAAME,cAAcrB,QAAQf,EAAWoC,iBACrCJ,EAAQ,GAOd,OANuC,IAAnCnC,EAAakB,QAAQhI,EAAKkC,MAC1BkH,GAAO,GAEPA,IACAH,GAAS,GAENG,MAGf,OACI,kBAAC,IAAD,CACInC,WAAYA,EACZqC,SAzGa,SAACzB,GAClB,GAAKA,GAKL,IAAoC,IAAhCf,EAAakB,QAAQH,GAAc,CACnC,IAAIC,EAAgB,sBAAOhB,GAAP,CAAqBe,IACzCX,EAAc,IACdN,EAAYkB,SAPdZ,EAAc,KAwGZJ,aAAcA,IAGV,gBAEQyC,EAFR,EAEQA,cACAC,EAHR,EAGQA,aACAC,EAJR,EAIQA,OACYC,EALpB,EAKQzC,WAEAwB,EAPR,EAOQA,iBACAkB,EARR,EAQQA,SACAC,EATR,EASQA,UATR,OAYI,yBAAK9H,UAAWF,EAAQwC,MACpB,yBAAKtC,UAAWF,EAAQsD,aACpB,yBAAKpD,UAAW+H,IACZjI,EAAQyD,UACR0B,EAAkBnF,EAAQkI,gBAAkBlI,EAAQ2D,mBAEpDwE,QAAS,WACL,EAAKC,SAASC,UAGlB,0BAAMC,KAAK,MAAMC,aAAW,QAA5B,kBAKR,yBAAKC,MAAO,CAAEvJ,MAAO,SAtKrB,SAACwJ,GAAgB,IACzBC,EAAuCD,EAAvCC,WAAY1I,EAA2ByI,EAA3BzI,QAAS2I,EAAkBF,EAAlBE,IAAQC,EADL,YACeH,EADf,gCAEhC,OACE,kBAACI,EAAA,EAAD,eACEC,aAAa,MACbJ,WAAU,aACNN,SAAUO,EACV3I,QAAS,CACLwC,KAAMxC,EAAQsE,UACdyE,MAAO/I,EAAQwE,WACfwE,UAAWhJ,EAAQgJ,YAEpBN,IAKHE,IAuJgBK,CAAY,CACRC,WAAW,EACXlJ,UACA2I,IAAK,SAACP,GACF,OAAOA,GAEXM,WAAYf,EAAc,CACtBwB,eAAgBjE,EAAakE,KAAI,SAACnD,GAC9B,IAAM7H,EAAOmH,EAAU8D,MAAK,SAACC,GAAD,OAAOA,EAAEhJ,KAAO2F,KAC5C,OAAI7H,EAEI,kBAACmL,EAAA,EAAD,CACI7K,OACI,kBAAC,EAAD,CAAYQ,KAAM,GAAId,KAAMA,IAEhC6I,IAAKhB,EACLuD,UAAW,EACXC,MAAOtL,EAAmBC,GAC1B8B,UAAWF,EAAQ6D,KACnB7D,QAAS,CACLwC,KAAMxC,EAAQ+D,SACdrF,OAAQsB,EAAQ8D,WAChB2F,MAAOzJ,EAAQgE,UACf0F,WAAY1J,EAAQqE,gBAExBsF,SAAU3D,EAAaC,KAI5B,QAEXyB,SAAU7B,EACV+D,UAAWpD,EACXqD,YAAa,gDACbvJ,GAAI,iCACJ2E,QAAS,SAAC6E,GACN/B,IACAzB,KAEJyD,OAAQ,SAACD,GACL9B,IAxJpC3B,EAA4BnB,SAgKR2C,EACI,kBAACmC,EAAA,EAAD,CAAO9J,UAAWF,EAAQ4C,MAAOqH,QAAM,GAjJ7C,SAAC5E,EAAYuC,EAAcf,GAE7C,OADcO,EAAU/B,GACX+D,KACT,SAAChL,EAAMuI,GAAP,OAAiBD,EAAa,CAC1BtI,OACAuI,QACAC,UAAWgB,EAAa,CAAC3B,KAAM7H,EAAKkC,KACpCuG,mBACAC,UAAU,OA2IcoD,CACIpC,EACAF,EACAf,IAIZ,U,mBC/W1BrI,GAAYC,aAAW,SAAC8D,GAAD,YAAY,CACrCK,OAAK,GACDuH,IAAK,MACLtH,KAAM,MACNuH,UAAW,wBACX1H,SAAU,WACVzD,MAAO,IACPoL,QAAS,IANR,eAOA9H,EAAM+H,YAAYC,KAAK,MAAQ,CAC9BtL,MAAO,IACPoL,QAAS,cATV,4BAWW,WAXX,wBAYO,qBAZP,2BAaU,cAbV,8BAca,IAdb,yBAeQ,QAfR,OAmBM,SAASG,GAAY3L,GAChC,IAAMmB,EAAUxB,KAEhB,OACE,kBAACiM,GAAA,EAAD,CACEC,kBAAgB,qBAChBC,mBAAiB,2BACjBC,KAAM/L,EAAM+L,KACZC,QAAShM,EAAMiM,YACfC,cAAe,CACbvC,MAAO,CACLrF,WAAY,UACZ6H,aAAc,SACdC,QAAS,MAIb,yBAAK/K,UAAWrB,EAAMqM,YAAcrM,EAAMqM,YAAclL,EAAQ4C,OAC7D/D,EAAMgC,WC1CjB,IAMe,IACXoD,QAAS,CACLkH,QAAS,CACPhH,KAAM,WAERiH,UAAW,CACTjH,KAAM,WAGRkH,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,OAAQ,UACRC,WAAY,UACZC,QAAS,UACTC,OAAQ,UACRC,SAAU,UACVC,cAAe,UACfC,SAAU,UACVC,SAAU,UACVC,eAAgB,UAChBC,YAAa,UACbC,YAAa,UACbC,MAAO,UACPC,MAAO,UACPC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,QAAS,UACTC,QAAS,UAGTC,SAAU,UACVC,WAAY,UACZC,MAAO,UACPC,UAAW,UACXC,WAAY,UACZC,WAAY,UACZC,WAAY,UACZC,WAAY,UACZC,WAAY,UACZC,WAAY,UACZC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,OAAQ,UACRC,UAAW,UACXC,KAAM,UACNC,QAAS,UACTC,OAAQ,UACRC,UAAW,UACXC,IAAK,UACLC,MAAO,UACPC,KAAM,UACNC,MAAO,UACPC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,OAAQ,UACRC,OAAQ,UACRC,QAAS,UACTC,MAAO,UACPC,OAAQ,UACRC,QAAS,UACTC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,UAAW,UACXC,UAAW,UACXC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,QAAS,UACTC,cAAe,UACfC,QAAS,UACTC,OAAQ,CACNC,aAAc,KAGpBC,WAAY,CACRC,gBAzGM,IA0GNC,kBAzGQ,IA0GRC,iBAzGO,IA0GPC,mBAzGS,IA0GTC,eAzGK,IA0GL3R,SAAU,GACV4R,WAAY,CAAC,YAAa,cAAcC,KAAK,KAC7CC,gBAAiB,CAAC,WAAY,cAAcD,KAAK,MAErDE,YAAa,CACTC,GAAI,YACJC,GAAI,WACJC,GAAI,WACJC,GAAI,YAERC,WAAY,CACRC,UAAW,CACTC,KAAM,CACJzG,QAAS,EACT0G,EAAG,IAELC,SAAU,GACVC,QAAS,MC3HbrT,GAAYC,aAAW,iBAAO,CAChCqT,iBAAkB,CACdpP,SAAU,WACVyH,IAAK,GACLrH,MAAO,GACPY,OAAQ,UACR2G,QAAS,MACT,QAAS,CACP,SAAU,CACR0H,KAAMC,GAAQ/N,QAAQ8J,WACtBkE,WAAY,cAGhB,UAAW,CACT,QAAS,CACP,SAAU,CACRF,KAAMC,GAAQ/N,QAAQqK,kBA4BrB4D,OArBf,SAA2BrT,GACvB,IAAMmB,EAAUxB,KACR2J,EAAoBtJ,EAApBsJ,QAAYgK,EAFU,YAEFtT,EAFE,aAG9B,OACI,uCAAKqB,UAAWF,EAAQ8R,iBAAkB3J,QAASA,GAAagK,GAC9D,yBACElT,MAAM,KACNE,OAAO,KACPiT,QAAQ,YACRL,KAAK,OACLM,MAAM,8BAEN,0BACEC,EAAE,keACFP,KAAK,e,SCuBJQ,GA3DMC,YAAW,CAC5BC,UAAW,CACPtT,OAAQ,GACRkE,aAAc,GACdtE,gBAAiB2T,GAAQzO,QAAQ2J,WACjC9O,MAAO4T,GAAQzO,QAAQ8K,MACvB,cAAe,CACXhQ,gBAAgB,GAAD,OAAK2T,GAAQzO,QAAQoK,UAArB,gBAEnB,UAAW,CACPsE,eAAgB,OAChB7T,MAAO4T,GAAQzO,QAAQ8K,MACvBhQ,gBAAiB2T,GAAQzO,QAAQmL,MAEjC,uBAAwB,CACpBrQ,gBAAiB,eAErBqE,UAAW,oBAGnBwP,iBAAkB,CACd7T,gBAAiB2T,GAAQzO,QAAQkH,QAAQhH,KACzCrF,MAAO4T,GAAQzO,QAAQ8K,MACvB,UAAW,CACThQ,gBAAiB8T,kBAAOH,GAAQzO,QAAQkH,QAAQhH,KAAM,IAEtD,uBAAwB,CACtBpF,gBAAiB8T,kBAAOH,GAAQzO,QAAQkH,QAAQhH,KAAM,MAG1Df,UAAW,mBAGf0P,mBAAoB,CAChB/T,gBAAiB2T,GAAQzO,QAAQmH,UAAUjH,KAC3CrF,MAAO4T,GAAQzO,QAAQ8K,MACvB,UAAW,CACXjQ,MAAM,GAAD,OAAK4T,GAAQzO,QAAQ8K,MAArB,eACLhQ,gBAAiB8T,kBAAOH,GAAQzO,QAAQmH,UAAUjH,KAAM,IAEpD,uBAAwB,CACpBpF,gBAAiB8T,kBAAOH,GAAQzO,QAAQmH,UAAUjH,KAAM,MAGhEf,UAAW,mBAEfqG,MAAO,CACHsJ,cAAe,OACf/B,WAAY0B,GAAQhC,WAAWM,WAC/B5R,SAAU,GACVJ,WAAY0T,GAAQhC,WAAWG,iBAC/BmC,UAAW,SACXC,YAAa,SACbC,WAAY,SACZtO,cAAe,SACfuO,UAAW,WAvDEX,CAyDlBY,K,UCvDGC,GAAS,CACb7Q,KAAM,CACJwO,WAAY0B,GAAQhC,WAAWM,WAC/BlS,MAAO4T,GAAQzO,QAAQ0J,UAEzB2F,UAAW,CACTtC,WAAY0B,GAAQhC,WAAWQ,gBAC/BpS,MAAO4T,GAAQzO,QAAQ0J,WAI3B,SAAS4F,GAAcC,GACrB,OAAQA,GACN,IAAK,OACH,OAAOd,GAAQhC,WAAWK,eAC5B,IAAK,SACH,OAAO2B,GAAQhC,WAAWG,iBAC5B,IAAK,WACH,OAAO6B,GAAQhC,WAAWI,mBAC5B,QACE,OAAO4B,GAAQhC,WAAWE,mBAIhC,SAAS6C,GAAiB5U,GAAQ,IACxBmB,EAAyDnB,EAAzDmB,QAASa,EAAgDhC,EAAhDgC,SAAU2S,EAAsC3U,EAAtC2U,OAAQhL,EAA8B3J,EAA9B2J,MAAOtI,EAAuBrB,EAAvBqB,UAAciS,EADzB,YACkCtT,EADlC,qDAG/B,OACE,kBAAC6U,GAAA,EAAD,eACExT,UAAW+H,IAAWjI,EAAQwC,KAAMtC,GACpCsI,MAAK,eAAOA,EAAP,CAAcxJ,WAAYuU,GAAcC,MACzCrB,GAEHtR,GAkBwB2R,YAAWa,GAAXb,EAb/B,SAAkC3T,GAAQ,IAChCmB,EAAyDnB,EAAzDmB,QAASa,EAAgDhC,EAAhDgC,SAAU2S,EAAsC3U,EAAtC2U,OAAQhL,EAA8B3J,EAA9B2J,MAAOtI,EAAuBrB,EAAvBqB,UAAciS,EADjB,YAC0BtT,EAD1B,qDAGvC,OACE,kBAAC6U,GAAA,EAAD,eACExT,UAAW+H,IAAWjI,EAAQsT,UAAWpT,GACzCsI,MAAK,eAAOA,EAAP,CAAcxJ,WAAYuU,GAAcC,MACzCrB,GAEHtR,MAaP4S,GAAiBE,aAAe,CAC9BH,OAAQ,UACRhL,MAAO,IAGMgK,mBAAWa,GAAXb,CAAmBiB,I,UClCnBjB,oBAhCA,iBAAO,CAClBhQ,KAAM,CACJwO,WAAYgB,GAAQtB,WAAWM,WAC/BhS,WAAYgT,GAAQtB,WAAWG,iBAC/B/R,MAAOkT,GAAQ/N,QAAQqK,UACvB4E,WAAY,OACZ9T,SAAU,OACV,aAAc,CACZ6L,QAAS,OACT2I,WAAY,QAEd,UAAW,CACT9U,MAAOkT,GAAQ/N,QAAQ4L,UAoBhB2C,EAhBf,SAAoB3T,GAAQ,IAChBmB,EAAsDnB,EAAtDmB,QAAe8G,GAAuCjI,EAA7CqF,KAA6CrF,EAAvCiI,UAAU+M,EAA6BhV,EAA7BgV,MAAOhT,EAAsBhC,EAAtBgC,SAAasR,EAD9B,YACuCtT,EADvC,kDAEvB,OACI,kBAACiV,GAAA,EAAD,eACE5T,UAAW6T,IACT/T,EAAQwC,KACRsE,EAAW,WAAa,GACxB+M,EAAQ,QAAU,KAEhB1B,GAEHtR,M,8BCmFImT,OAhHf,SAAoBnV,GAAO,IAEjBoV,EAAyCpV,EAAzCoV,OAAQ9L,EAAiCtJ,EAAjCsJ,QAASjJ,EAAwBL,EAAxBK,KAAMgV,EAAkBrV,EAAlBqV,IAAKC,EAAatV,EAAbsV,SACpC,GAAID,EAAK,CACP,IAAME,EAAYH,EAAS,SAAW,aACtC,GAAiB,UAAbC,EAAIG,KAAkB,CACxB,IAAMC,EAAYC,KAAEzS,IAAIoS,EAAK,CAAC,QAAS,QAAS,WAChD,GAAkB,YAAdI,EACF,OACE,0BACEpU,UAAWrB,EAAMqB,UACjBsI,MAAK,aACHpJ,SAAUF,EAAI,UAAMA,EAAN,MAAiB,OAC/B8L,aAAcoJ,GACXvV,EAAM2J,OAEXF,KAAK,MACLC,aAAW,eAEViM,OAAOC,cAAcC,SAASR,EAAI5R,MAAMqS,QAAS,MAIxD,GAAkB,WAAdL,EACF,OACE,yBACElU,IAAK8T,EAAI5R,MAAM4R,IACfU,IAAKT,EACLjU,UAAWrB,EAAMqB,UACjBsI,MAAK,aACHvJ,MAAOC,EAAI,UAAMA,EAAN,MAAiB,OAC5B8L,aAAcoJ,GACXvV,EAAM2J,SAMnB,OACE,yBACEpI,IAAK8T,EAAI5R,MACTsS,IAAKT,EACLjU,UAAWrB,EAAMqB,UACjBsI,MAAK,aACHvJ,MAAOC,EAAI,UAAMA,EAAN,MAAiB,OAC5B8L,aAAcoJ,GACXvV,EAAM2J,SAMjB,OACE,kBAACqM,GAAA,EAAD,CACE3U,UAAWrB,EAAMqB,UACjBsI,MAAO3J,EAAM2J,OAAS,CAAEpJ,SAAUF,GAAc,MAChDkT,QAAQ,YACRjK,QAASA,GAET,uCACA,+CACA,uBAAG7H,GAAG,OAAOwU,OAAO,OAAOC,YAAY,IAAIhD,KAAK,OAAOiD,SAAS,WAC9D,uBAAG1U,GAAG,eACJ,4BACEA,GAAG,OACHyR,KAAMkC,EAAS,UAAY,UAC3Be,SAAS,UACTC,GAAG,KACHC,GAAG,KACHC,EAAE,OAEJ,0BACE7C,EAAE,iSACFhS,GAAG,iBACHyR,KAAMkC,EAAS,UAAY,UAC3Be,SAAS,YAEX,0BACE1C,EAAE,2RACFhS,GAAG,QACHyR,KAAMkC,EAAS,UAAY,UAC3Be,SAAS,YAEX,0BACE1C,EAAE,6UACFhS,GAAG,OACHyR,KAAMkC,EAAS,UAAY,UAC3Be,SAAS,YAEX,0BACE1C,EAAE,sVACFhS,GAAG,OACHyR,KAAMkC,EAAS,UAAY,UAC3Be,SAAS,YAEX,0BACE1C,EAAE,6eACFhS,GAAG,OACHyR,KAAMkC,EAAS,UAAY,UAC3Be,SAAS,YAEX,0BACE1C,EAAE,sLACFhS,GAAG,iBACHyR,KAAMkC,EAAS,UAAY,gBCrGjCzV,GAAYC,aAAW,SAAA8D,GAAK,MAAK,CACnC6S,iBAAkB,CAChB3S,QAAS,OACTe,WAAY,SAEdF,YAAa,CACXnE,OAAQ,OACRF,MAAO,OACPwD,QAAS,OACTc,eAAgB,SAChBC,WAAY,SACZL,WAAY,UACZkS,UAAU,aAAD,OAAe3C,GAAQzO,QAAQ8J,YACxCuH,aAAa,aAAD,OAAe5C,GAAQzO,QAAQ8J,YAC3CwH,WAAW,aAAD,OAAe7C,GAAQzO,QAAQ8J,YACzC1K,aAAc,cACd,kBAAmB,CACjBgS,UAAU,aAAD,OAAe3C,GAAQzO,QAAQ4L,MACxCyF,aAAa,aAAD,OAAe5C,GAAQzO,QAAQ4L,MAC3C0F,WAAW,aAAD,OAAe7C,GAAQzO,QAAQ4L,QAG7C2F,WAAY,CACVvS,UAAW,MACXC,YAAa,IAEfuS,aAAc,CACZhT,QAAS,OACTiT,cAAe,SACfzW,MAAO,OACP0W,aAAc,MACd,UAAW,CACTtS,aAAc,cACdgH,QAAS,WACTlL,OAAQ,GACRyW,OAAO,aAAD,OAAelD,GAAQzO,QAAQ8J,YACrCiD,WAAY0B,GAAQhC,WAAWM,WAE/B,UAAW,CACT6E,QAAS,KAEX,kBAAmB,CACjBC,YAAapD,GAAQzO,QAAQ4L,YA0DxBkG,OApDf,SAAgClX,GAE5B,IAAMmX,EAAa,WACf,OAAInX,EAAMgV,MACD,gBAEA,IAIP7T,EAAUxB,KACN2T,EAXyB,iBAWjBtT,GAWlB,OACI,yBAAKqB,UAAW+H,IAAWjI,EAAQoV,iBAAkBY,MACjD,yBAAK9V,UAAW+H,IAAWjI,EAAQsD,YAAa0S,MAC3CnX,EAAMoX,UAECpX,EAAMoX,UAEN,kBAAC,GAAD,CAAYhC,QAAM,EAAC/U,KAAK,KAAKgV,IAAMrV,EAAMqX,qBAIrD,yBAAKhW,UAAWF,EAAQyV,cACpB,yCACInV,GAAIzB,EAAMyB,GACVJ,UAAW+H,IAAWjI,EAAQmW,UAAWH,KACzClN,aAAa,MACbe,YAAahL,EAAMgL,aACfsI,IAER,kBAAC,GAAD,CACI0B,MAAOhV,EAAMgV,MACbrL,MAAO,CAAEtF,YAAa,KAErBrE,EAAMgV,MAAN,uBAAoBhV,EAAM2W,YAA1B,uBAA+C3W,EAAM2W,gBCzFpEhX,GAAYC,aAAW,SAAC8D,GAAD,MAAY,CACrCkI,MAAO,CACH,2BAA4B,CAC1BxL,MAAO,QACPoL,QAAS,wBAGf+L,aAAc,CACVnT,UAAW,GACXR,QAAS,QAEb4T,OAAQ,CACJ5T,QAAS,QACTY,aAAc,EACdpE,MAAO,WA2IAqX,OAvIf,SAA2BzX,GAIvB,IAAM0X,EAAqB,WACvB,GAAI1X,EAAM0H,cAAc/F,QAAU,EAChC,MAAO,CACLgW,gBAAiB3X,EAAM4X,uBAI3B,IAAMC,EAAkBC,KAAKC,MAC3B/X,EAAM4X,sBAAwB5X,EAAM0H,cAAc/F,QAIpD,MAAO,CAAEgW,gBAAiBE,EAAiBG,oBADlB,UAAMH,EAAN,WAfC,EAoBmBH,IAAzCC,EApBsB,EAoBtBA,gBAAiBK,EApBK,EAoBLA,oBApBK,EAuBA/V,mBAAS,IAvBT,mBAuBvBgW,EAvBuB,KAuBdC,EAvBc,OAwBUjW,oBAAS,GAxBnB,mBAwBvBkW,EAxBuB,KAwBTC,EAxBS,OAyBQnW,oBAAS,GAzBjB,mBAyBvBoW,EAzBuB,KAyBVC,EAzBU,KA4BxBnX,EAAUxB,KAuCV4Y,EAAa,aAUnB,OAEQ,kBAAC5M,GAAD,CACItK,UAAWF,EAAQyK,MACnBG,KAAM/L,EAAMwY,UACZxM,QAASuM,EACT1M,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAAC,GAAD,CAAmBxC,QAASiP,IAC5B,kBAAC,GAAD,CAAkBE,QAAQ,KAAK9D,OAAO,OAAO+D,cAAY,GAAzD,yBAGA,kBAAC,GAAD,CAAkBD,QAAQ,QAAQ9O,MAAO,CAAEvF,UAAW,IAAMsU,cAAY,GAAxE,oGAGA,yBAAK/O,MAAO,CAAEvF,UAAW,SACrB,kBAAC,GAAD,CACI4G,YAAY,yBACZ2L,WAAU,+BACRqB,GAA4CL,GAE9C3C,MAAOmD,EACPtP,SAtEQ,SAAC5B,GAAO,IACxBxD,EAAUwD,EAAEC,OAAZzD,MACAkU,EAAoBD,IAApBC,gBACR,IAAKlU,GAASA,EAAMkV,MAAM,YAAa,CACnC,IAQIR,GAAe,GARLnY,EAAM0H,cAAc/F,OAAS,EAAI3B,EAAM0H,cAAckR,QAC/D,SAACC,EAAKtZ,GAAN,OAAesZ,EAAMhD,SAASpS,EAAO,MACjC,GAEFA,GAMM,GAJMkU,EAAkBlU,EAKlB,IACd0U,GAAe,GAKjBG,EADY,KAAV7U,GAQJyU,EAAWzU,GACX2U,EAAgBD,KA0CJ1U,MAAOwU,EACPZ,kBAAmBrX,EAAMqX,qBAGjC,yBAAKhW,UAAWF,EAAQoW,cACpB,kBAAC,GAAD,CACIkB,QAAQ,YACR9O,MAAO,CACHpF,UAAW,OACXuU,YAAa,GACb/B,OAAO,aAAD,OAAelD,GAAQzO,QAAQ8J,YACrChP,gBAAiB,UACjBD,MAAO4T,GAAQzO,QAAQqK,WAE3BnG,QAASiP,EACTlX,UAAWF,EAAQqW,QAVvB,UAcA,kBAAC,GAAD,CACIiB,QAAQ,YACRxY,MAAM,UACNoB,UAAWF,EAAQqW,OACnBvP,UAAYoQ,GAAeF,EAC3B7O,QApDG,cA+CP,Y,4DC5Id3J,GAAYC,aAAW,SAAC8D,GAAD,MAAY,CACrCqV,aAAc,CACZlV,SAAU,WACVG,KAAM,GACNJ,QAAS,OACTiT,cAAe,MACflS,WAAY,SACZN,WAAY,OACZpE,MAAO,UACPE,WAAY0T,GAAQhC,WAAWG,iBAC/B,0BAA2B,CACzB3N,WAAY,MACZlE,WAAY0T,GAAQhC,WAAWG,kBAEjC,0FAA2F,CACzFyE,aAAc,mBAEhB,4BAA6B,CAC3BnS,WAAY,gBAGhB0U,eAAgB,CACdnV,SAAU,WACVG,MAAO,GACPiV,WAAY,UAEd9D,WAAY,CACV/I,QAAS,QAEX8M,gBAAiB,CACf9M,QAAS,KAEXjE,SAAU,CACR7H,OAAQ,OACRsD,QAAS,OACT4H,QAAS,aACT3G,OAAQ,UACR,UAAW,CACTP,WAAY,UACZ,qBAAsB,CACpB8H,QAAS,KAIf+M,sBAAuB,CACrBvV,QAAS,OACTe,WAAY,SACZrE,OAAQ,OACR8Y,aAAc,QAEhBC,QAAS,CACPzV,QAAS,OACT0V,KAAM,EACNhZ,OAAQ,OACRqE,WAAY,UAEd4U,mBAAoB,CAClBpH,WAAY0B,GAAQhC,WAAWQ,gBAC/B9R,SAAU,OACVJ,WAAY0T,GAAQhC,WAAWI,mBAC/B6E,aAAc,MACd1K,QAAS,OACT0M,YAAa,OAEfU,mBAAoB,CAClBtV,UAAW,aAuIFuV,OAnIf,SAA4BzZ,GAexB,IAAI0Z,EAAe1Z,EAAM2Z,aACrBC,EAAoBlE,KAAEmE,MAAM,EAAGC,OAAO9Z,EAAM2Z,cAAgB,GAE7D3Z,EAAM2Z,aAAe3Z,EAAM4X,wBAC1B8B,EAAe1Z,EAAM4X,sBACrBgC,EAAoBlE,KAAEmE,MAAM,EAAGC,OAAO9Z,EAAM4X,uBAAyB,IAGzE,IAEImC,EAAqB,MAEX,KAJAL,GAAgB,KAM1BK,EAAqB,UAGzB,IAAIC,EAAmB,GAEnBha,EAAM0H,cAAc/F,OAAS,IAC7BqY,EAAmB,4BAGvB,IAAMC,EAAiB,WACnB,IAAIP,EAAe1Z,EAAM2Z,aAErB3Z,EAAM2Z,aAAe3Z,EAAM4X,wBAC3B8B,EAAe1Z,EAAM4X,uBAGzB5X,EAAMka,cAAcla,EAAMma,OAAQT,IAGhCU,EAAe,WACjBpa,EAAMqa,mBAAmBC,GACzBC,GAAeD,IAGbE,EAAe,SAACvT,GAClBjH,EAAMka,cAAcla,EAAMma,OAAQlT,EAAEC,OAAOzD,QAGzCwI,EAAc,WAChBsO,GAAc,GACdva,EAAMqa,mBAAkB,IAGtBI,EAAa,WACfF,GAAc,GACdva,EAAMqa,mBAAkB,IAhEG,EAmEKpY,oBAAS,GAnEd,mBAmExBqY,EAnEwB,KAmEZC,EAnEY,KAoEzBpZ,EAAUxB,KACN2T,EArEqB,iBAqEbtT,GAClB,OACI,yBAAKyB,GAAG,UACJ,kBAACiZ,GAAA,EAAD,MACK,gBAAEC,EAAF,EAAEA,WAAF,OACG,uCACItZ,UAAWF,EAAQgH,SACnBC,IAAKpI,EAAMma,OACX1W,MAAOzD,EAAMma,QACT7G,GAEJ,yBAAKjS,UAAWF,EAAQkY,QAAS5X,GAAG,cAAc6H,QAAS2Q,GACtDja,EAAM4a,OADX,cACyBlB,EADzB,IACwCK,EADxC,IAC6DC,GAGzDha,EAAM6a,cACF,yBACIxZ,UAAWF,EAAQ4X,aACnBzP,QAAS8Q,IAGU,IAAfO,EACI,yBAAKlZ,GAAG,sBACJ,kBAAC,KAAD,CAAUlB,SAAS,UAAUoJ,MAAO,CAAC9F,SAAU,WAAYyH,IAAK,SADpE,kBAGI,kBAACwP,GAAA,EAAD,CACIC,mBAAsB,CAACtZ,GAAI,sBAC3BoH,SAAU2R,EACV/W,MAAOiW,EACP3N,KAAMuO,EACNtO,QAASC,EACT+O,OAAQP,EACRpZ,UAAWF,EAAQ6X,eACnBiC,UAAW,CAAE9Z,QAAS,CAClB4C,MAAO5C,EAAQqY,sBAIfI,EAAkBrP,KAAI,SAAA2Q,GAAgB,OAClC,kBAAC/S,EAAA,EAAD,CAAU1E,MAAOyX,EACb9S,IAAK8S,GAEJA,QAOrB,UCxLtCvb,GAAYC,aAAW,iBAAO,CAChC+D,KAAM,CACFvD,MAAO,QAEX+a,YAAa,CACT/a,MAAO,QAEXgb,iBAAkB,CACdnb,MAAO,oBACP2D,QAAS,OACTc,eAAgB,gBAChBnE,SAAU,QAEd4J,UAAW,CACP,UAAW,CACTsM,aAAc,oBACdrD,WAAY,gDAEd,WAAY,CACVqD,aAAc,gCAEhB,iBAAkB,CAChBA,aAAc,4CAGpBhS,YAAa,CACTb,QAAS,OACTc,eAAgB,SAChBC,WAAY,SACZvE,MAAO,OACPE,OAAQ,QAEZsE,UAAW,CACPF,eAAgB,SAChBG,OAAQ,WAEZwW,cAAe,CACX3W,eAAgB,SAChBG,OAAQ,WAEZyW,kBAAmB,CACf1X,QAAS,OACTiT,cAAe,MACfxS,WAAY,OACZ,+BAAgC,CAC9BoS,aAAc,SAGpBtO,SAAU,CACN7H,OAAQ,OACRsD,QAAS,OACT4H,QAAS,oBACT3G,OAAQ,UACR,UAAW,CACTP,WAAY,YAGlB+U,QAAS,CACLzV,QAAS,OACT0V,KAAM,EACNhZ,OAAQ,OACRqE,WAAY,UAEhB4W,eAAgB,CACZ,4BAA6B,CAC3BjX,WAAY,gBAGlBkX,uBAAwB,CACpB,oBAAqB,CACnBvC,WAAY,eA8PPwC,OAzPf,SAA6Bzb,GAAO,IACxB0b,EAA+C1b,EAA/C0b,YAAaC,EAAkC3b,EAAlC2b,cAAeC,EAAmB5b,EAAnB4b,eADJ,EAEA3Z,oBAAS,GAFT,mBAEzB4Z,EAFyB,KAEfC,EAFe,OAGU7Z,oBAAS,GAHnB,mBAGzB8Z,EAHyB,KAGVC,EAHU,OAI0B/Z,oBAAS,GAJnC,mBAIzBga,EAJyB,KAIFC,EAJE,OAKsBja,mBAASjC,EAAMma,QALrC,mBAKzBgC,EALyB,KAKJC,EALI,KAO1Bjb,EAAUxB,KAeZkY,EAAkB+D,EAElB5b,EAAM0H,cAAc/F,OAAS,IAC7BkW,EAAkBC,KAAKC,MAAM6D,EAAiB5b,EAAM0H,cAAc/F,SAGtE,IAAM0a,EAA2C,IAA3BvC,OAAO8B,GAEvBU,EAAgBtc,EAAMuc,QAAQxX,QAAO,SAAC6V,EAAQ9S,GAChD,GAAGA,EAAQ,EAAG,CACV,IAAM0U,EAAYxc,EAAMuc,QAAQzU,EAAQ,GACxC,GAAI9H,EAAM6X,gBAAkB2E,EAAUC,UAClC,OAAO,EAGf,OAAO,KAGLhC,EAAa,WACfza,EAAM0c,eACNf,GAAc,GACdG,GAAY,IAgBVa,EAAmB,SAACxC,EAAQlC,GAC9BjY,EAAM6I,SAASsR,EAAQlC,GACvBmE,EAAuBjC,GACvByC,KAGEvC,EAAoB,SAAAwC,GACtBb,EAAiBa,IAGfD,EAAc,WAChB5c,EAAM8c,gBACNhB,GAAY,GAGRH,IADAQ,IAYFY,EAAyB,WAC3Bb,GAAyB,IAG7B,OACI,yBAAK7a,UAAWF,EAAQwC,MACpB,kBAAC,GAAD,CACI6U,UAAWyD,EACX1D,WAAYwE,EACZzT,QAASyT,EACTnF,sBAAuBgE,EACvBlU,cAAe1H,EAAM0H,cACrBsV,OAAQhd,EAAMuc,QACdI,iBAAkBA,EAClBtF,kBAAmBrX,EAAMqX,oBAE7B,yBAAK1N,MAAO,CAAC/F,QAAS,SAClB,yBAAKvC,UAAWF,EAAQsD,aACpB,kBAAC,GAAD,CACIpD,UAAWrB,EAAMqX,mBAAsD,UAAjCrX,EAAMqX,kBAAkB7B,KAAmBrU,EAAQka,cAAgBla,EAAQyD,UACjHvE,KAAK,KACL+U,OAAQsG,EACRpS,QAASmR,EACTpF,IAAKrV,EAAMqX,kBACX/B,SAAUtV,EAAMid,eAAeC,KAC/BvT,MAAO,CAACwI,WAAY,qBAG5B,kBAACgL,GAAA,EAAD,CAAa9b,UAAWF,EAAQga,aAC5B,kBAACiC,EAAA,EAAD,CACIC,MACIhB,EAAa,8FAET,GAERiB,UAAU,OAEV,kBAACxC,GAAA,EAAD,CACIrX,MAAOzD,EAAMiY,QACblM,KAAM8P,EACN0B,KAAK,cACLC,cAAY,EACZnT,WAAS,EACT2Q,OAAQP,EACRzO,QAAS,SAAC/E,GAAD,OAnFb,SAACA,GACjB,IAAIwW,GAAc,EACdxW,GACoB,uBAAhBA,EAAEC,OAAOzF,KACTgc,GAAc,GAIjBA,GAAgB1B,GACjBa,IA0EgC3Q,CAAYhF,IAC5B5F,UAAW+H,IAAWjI,EAAQoa,eAAT,0BACbpa,EAAQqa,wBAA4Ba,IAE5CpU,SAAUoU,EACVnS,MACI,kBAACwT,GAAA,EAAD,CACIvc,QAAS,CACLgJ,UAAWhJ,EAAQgJ,WAEvBoT,KAAK,cACL9b,GAAG,gBAGXkc,YAAa,WACT,GAAGtB,EACC,OACI,yBAAKhb,UAAWF,EAAQia,kBACpB,0GAMZ,IAAKpb,EAAMma,SAAana,EAAMiY,QAC1B,OACI,yBAAK5W,UAAWF,EAAQia,kBACpB,6BAvIpB,kBA2IQ,IAAM3X,EAAQzD,EAAMiY,SAAW,EAC3B8B,EAAqB,MAEX,IAAVtW,IACAsW,EAAqB,WAEzB,IAAI6D,EAAena,EAAQ,EAAR,UAAeA,EAAf,YAAwBsW,GAAuB,GAC5D8D,EAAQ7d,EAAM0H,cAAckR,QAAO,SAACC,EAAKtZ,GAAN,OAAesZ,EAAMhD,SAASpS,EAAO,MAAK,GAC7Eqa,EAAYlC,GAAkBiC,EAAQ,EAAIA,EAAQpa,GACpDsa,GAAc,EAEfD,EAAY,IACXC,GAAc,GAEfF,EAAQ,IAGCD,EAFJE,GAAa,EAC8B,IAAvChE,OAAO9Z,EAAM0H,cAAc/F,QACf,UAAMkc,EAAN,YAAe9D,GAGf,UAAMtW,EAAN,YAAesW,EAAf,6BAGJ,UAAMtW,EAAN,YAAesW,EAAf,4BAIpB,IAIIiE,EAJEC,EAAYje,EAAMuc,QAAQ/R,MAC5B,SAAAoQ,GAAM,OAAIA,EAAOnX,QAAUzD,EAAMma,UAcrC,OARI6D,EADkB,IAAlBlE,OAAOrW,GACI,cAEJzD,EAAMma,OAIL,UAAM8D,EAAUrT,MAAhB,YAAyBgT,GAHtBA,EAMX,yBAAKjU,MAAO,CAAE/F,QAAS,OAAQc,eAAgB,kBAC3C,yBAAKiF,MAAO,CAAE1J,MAAO8d,EAAclK,GAAQzO,QAAQ4L,KAAO,KACrDgN,MAOb1B,EAAc/R,KAAI,SAAAqQ,GAAM,OACpB,kBAAC,GAAD,CACIA,OAAQA,EAAOhQ,MACfuP,OAAQS,EAAOnX,MACfkW,aAAciB,EAAO6B,UACrByB,cAAele,EAAMke,cACrBtG,sBAAuBC,EACvBqC,cAAeyC,EACftC,kBAAmBA,EACnBjS,IAAKwS,EAAOhQ,MACZyM,kBAAmBrX,EAAMqX,kBACzB4F,eAAgBjd,EAAMid,eACtBvV,cAAe1H,EAAM0H,eAEpBkT,EAAOhQ,UAInB5K,EAAMme,qBACH,yBAAK9c,UAAWF,EAAQgH,UACpB,yBACI9G,UAAWF,EAAQkY,QACnB/P,QAzJN,WAC1B4S,GAAyB,KAsJG,kC,0CC3T9Bvc,GAAYC,aAAW,iBAAO,CAChCL,KAAM,CACFqE,QAAS,OACTe,WAAY,UAEhByZ,SAAU,CACN7d,SAAU,OACVJ,WAAY,SACZke,EAAG,CACDle,WAAY,WAGlBme,OAAQ,CACJ/d,SAAU,OACVJ,WAAY,UAEhB2F,2BAA4B,CACxBP,YAAa,EACbhF,SAAU,GACVN,MAAO,UACPE,WAAY,IACZ4F,cAAe,QAIjBwY,GAAQ,SAACve,GAAW,IACZwe,EADW,iBACIxe,GACnBmB,EAAUxB,KAChB,OACI,wBAAS6e,EACL,yBAAKnd,UAAWF,EAAQ5B,MACpB,kBAAC,EAAD,CAAYc,KAAM,GAAId,KAAMS,EAAMye,UAClC,0BAAMpd,UAAWF,EAAQ2E,4BACrB,yBAAKzE,UAAWF,EAAQid,UAAWpe,EAAMye,QAAQlB,MACjD,yBAAKlc,UAAWF,EAAQmd,QAAxB,WACSte,EAAMye,QAAQC,eAuB5BC,OAhBf,SAAmC3e,GAAQ,IAC/B4e,EAAuG5e,EAAvG4e,eAAgBC,EAAuF7e,EAAvF6e,YAAaC,EAA0E9e,EAA1E8e,kBAAmBC,EAAuD/e,EAAvD+e,mBAAoBC,EAAmChf,EAAnCgf,aAAcC,EAAqBjf,EAArBif,iBAC1F,OACI,kBAACA,EAAD,CACIL,eAAgBA,EAChBC,YAAaA,EACb7D,OAAQ8D,EACR9S,QAAS+S,EACTG,eAAgBX,GAChBS,aAAcA,KCNXG,OA5Cf,SAAsBnf,GAclB,IAAMof,EAAgBC,KAAoB,CACtCC,iBAAkB,YAClBC,eAAgB,IAChBC,mBAAmB,IAGfC,EAAuBL,EAAvBK,mBAER,OACI,oCACI,kBAAC,KAAD,CACIC,YAAa1f,EAAM0f,YACnB7W,SAAU7I,EAAM6I,SAChB8W,QAAS,CAACP,GACVtV,IAAK9J,EAAM4f,UACX1U,OAAQlL,EAAMkL,OACd9E,QAASpG,EAAMoG,QACf4E,YAAahL,EAAMgL,cAEvB,kBAAC,GAAD,CACI4T,eAAgB5e,EAAM4e,eACtBC,YAAa7e,EAAM6e,YACnBI,iBAAkBQ,EAClBX,kBAAmB9e,EAAM8e,kBACzBC,mBAAoB/e,EAAM+e,mBAC1BC,aAAchf,EAAMgf,iBCnC9Brf,GAAYC,aAAW,SAAC8D,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,OACTxD,MAAO,QAEXqE,YAAa,CACTb,QAAS,OACTc,eAAgB,SAChBC,WAAY,SACZvE,MAAO,OACPE,OAAQ,QAEZsE,UAAW,CACPrE,SAAU,OACVsE,OAAQ,WAEZC,kBAAmB,CACf7E,MAAO,UACP8E,OAAQ,gBAEZsE,gBAAiB,CACbpJ,MAAOyD,EAAM0B,QAAQmH,UAAUjH,KAC/BP,OAAQ,gBAEZ8a,SAAU,CACNzb,UAAW,EACXhE,MAAO,OACPyW,cAAe,SACfiJ,cAAe,MACfvf,SAAU,OACVwf,SAAU,UAEdC,YAAa,CACT/f,MAAO,UACPH,OAAQ,EACRS,SAAU,UACV6D,UAAW,EACXkQ,UAAW,OACXnU,WAAY,IACZkU,WAAY,MAEhB4L,gBAAiB,CACb7f,MAAO,YAkGA8f,OA1Ff,SAAsBlgB,GAAO,MAEaiC,mBAAS,IAFtB,mBAElB4c,EAFkB,KAGjBsB,GAHiB,KAG4BngB,EAA7CmgB,oBAAoBC,EAAyBpgB,EAAzBogB,qBAHH,EAIGne,qBAJH,mBAIlBoe,EAJkB,KAIVC,EAJU,KAKnBnf,EAAUxB,KAEVyG,EAAU,WACZga,GAAqB,GACrBC,EAAO7W,QACPxJ,EAAMoG,WAsCV,OACI,yBAAK/E,UAAWF,EAAQwC,MACpB,yBAAKtC,UAAWF,EAAQsD,aACpB,yBAAKpD,UAAW+H,IACZjI,EAAQyD,UACRub,EAAqBhf,EAAQkI,gBAAkBlI,EAAQ2D,mBAEvDwE,QAASlD,GAET,0BAAMqD,KAAK,MAAMC,aAAW,QAA5B,kBAKR,yBAAKrI,UAAWF,EAAQ0e,UACpB,yBACIvW,QAASlD,EACT/E,UAAW+H,IAAWjI,EAAQ8e,gBAnEnC,gBAqEK,kBAAC,GAAD,CACIP,YAAa1f,EAAM0f,YACnB7W,SAxDH,SAAC6W,GACd1f,EAAMugB,cAAcb,IAwDJE,UAAW,SAAC3Y,GACRqZ,EAAUrZ,IAEdiE,OAxDA,WAEblL,EAAMwgB,QACLJ,GAAqB,GAIrBA,GAAqB,IAkDTha,QAASA,EACT4E,YAAY,yGACZ4T,eAhDG,aAiDHI,aArCC,aAsCDH,YAAaA,EACbC,kBA/CM,aAgDNC,mBA5CO,gBA+Cd/e,EAAMgV,OACH,yBAAK3T,UAAWF,EAAQ6e,kBAAcS,MCzIpDC,GAAa,CACfC,MAAO,CACHxgB,WAAYgT,GAAQtB,WAAWE,mBAEnC6O,cAAe,CACXzgB,WAAYgT,GAAQtB,WAAWI,oBAEnC4O,UAAW,CACP1gB,WAAYgT,GAAQtB,WAAWK,gBAEnC4O,YAAa,CACT3gB,WAAYgT,GAAQtB,WAAWG,mBAIjCrS,GAAYC,YAAW,CACzB+D,KAAM,kBAOC,CACHwO,WARE,EACFA,WAQA5R,SATE,EAEFA,SAQAJ,WAVE,EAGFA,WAQAgU,UAXE,EAIFA,UAQAE,WAZE,EAKFA,WAQApU,MAbE,EAMFA,UAWF8gB,GAAO,SAAC,GAUP,IATH/e,EASE,EATFA,SACWgf,EAQT,EARF3f,UACAoX,EAOE,EAPFA,QACAtG,EAME,EANFA,WACAlS,EAKE,EALFA,MACAghB,EAIE,EAJFA,OACAhZ,EAGE,EAHFA,SACA0B,EAEE,EAFFA,MACeuX,EACb,EADF,eAEMC,EAAYlZ,EAAW,QAAUhI,EACjCmhB,EAAiBV,GAAWjI,GAC1BlY,EAAgD6gB,EAAhD7gB,SAAUJ,EAAsCihB,EAAtCjhB,WAAYgU,EAA0BiN,EAA1BjN,UAAWE,EAAe+M,EAAf/M,WACnCgN,EAAelO,GAAQ/N,QAAQ+b,GAC/BG,EAAYC,mBACd,iBAAO,CACHpP,aACA5R,WACAJ,aACAgU,YACAE,aACApU,MAAOohB,KAEX,CAAClP,EAAY5R,EAAU4T,EAAWhU,EAAYkU,EAAYgN,IAExDlgB,EAAUxB,GAAU2hB,GACpBjgB,EAAS,UAAMF,EAAQwC,KAAd,YAAsBqd,GAErC,OAAGC,EAEK,0BAAM5f,UAAWA,EAAWmgB,cAAaN,EAAYvX,MAAOA,GACvD3H,GAKT,yBAAKX,UAAWA,EAAWmgB,cAAaN,EAAYvX,MAAOA,GACtD3H,IAiBb+e,GAAKjM,aAAe,CAChB2D,QAAS,QACTpX,UAAW,GACX4f,QAAQ,EACRhZ,UAAU,EACV,cAAe,GACf0B,MAAO,IAGX,IAAM8X,GAAe3f,IAAM4f,KAAKX,IAChCU,GAAaE,YAAc,OAEZF,UCxGTG,GAAmB,CACrB,CACIvE,MAAO,iCACPwE,KAAM,2KAEV,CACIxE,MAAO,gBACPwE,KAAM,s2BAEV,CACIxE,MAAO,4BACPwE,KAAM,+PAEV,CACIxE,MAAO,gBACPwE,KAAM,8iC,oDCJRliB,GAAYC,aAAW,SAAC8D,GAAD,MAAY,CACrCC,KAAM,CACFW,WAAY6O,GAAQ/N,QAAQwH,MAC5BpI,aAAc,GAElBsd,iBAAkB,CACdje,SAAU,WACVD,QAAS,OACTiT,cAAe,MACfnS,eAAgB,gBAChB8G,QAAS,WACT3G,OAAQ,UACRmS,QAAS,EACTD,OAAQ,OACR,UAAW,CACPzS,WAAY6O,GAAQ/N,QAAQyH,QAGpCkV,aAAc,CACVle,SAAU,WACVyH,IAAK,MACLrH,MAAO,EACPsH,UAAW,oBAEfyW,IAAK,CACDpe,QAAS,OACTqe,oBAAqB,YAErB,eAAgB,IAIpBC,YAAa,CACT1W,QAAS,GAEb2W,YAAa,CACTte,SAAU,WACVD,QAAS,OACTe,WAAY,SACZD,eAAgB,SAChBpE,OAAQ,GACRF,MAAO,IAEXgiB,SAAU,CACNjiB,WAAYgT,GAAQtB,WAAWG,iBAC/B/R,MAAOkT,GAAQ/N,QAAQuH,MAEvB0V,eAAgB,QAChBve,OAAQ,EACR,UAAW,CACTwe,QAAS,KACThiB,OAAQ,GACRF,MAAO,GACPyD,SAAU,WACVyH,IAAK,MACLrH,MAAO,OACPD,KAAM,OACNlE,OAAQ,OACRyL,UAAW,mBACXjH,WAAY,UACZE,aAAc,MACdV,QAAS,IAGfye,eAAgB,CACZhd,YAAa,GACbid,WAAY,GAShBC,WAAY,CACRlX,UAAW,uBA+DJmX,OA3Df,SAA8B1iB,GAAQ,IAC1BgJ,EAA4ChJ,EAA5CgJ,OAAQ2Z,EAAoC3iB,EAApC2iB,cAAeC,EAAqB5iB,EAArB4iB,iBADE,EAED3gB,mBAAS+G,GAFR,mBAE1B6Z,EAF0B,KAEhBC,EAFgB,KAI3B3hB,EAAUxB,KAKhB,OACI,yBAAK0B,UAAWF,EAAQwC,MACpB,yBACItC,UAAWF,EAAQ2gB,iBACnBrY,KAAK,SACLkB,SAAU,EACVoY,WAAYH,EACZtZ,QAASqZ,GAET,kBAAC,GAAD,CAAMlK,QAAQ,eD9GO,oHCiHrB,kBAACuK,EAAA,EAAD,CACI3hB,UAAWF,EAAQ4gB,aACnBzY,QAjBU,WACtBwZ,GAAaD,IAiBDI,gBAAeJ,EACfnZ,aAAW,aAEX,kBAAC,KAAD,CACIrI,UACIwhB,EAAW1hB,EAAQshB,WAAa,OAKhD,kBAACS,GAAA,EAAD,CAAUC,GAAIN,EAAUO,QAAQ,OAAOC,eAAa,GAC5C,yBAAKhiB,UAAWF,EAAQ+gB,aACnBN,GAAiBrX,KAAI,SAACyX,EAAKla,GAAN,OAClB,yBAAKzG,UAAWF,EAAQ6gB,IAAK5Z,IAAKN,GAC9B,yBACIzG,UAAS,UAAKF,EAAQghB,YAAb,YAA4Bra,EAAQ,IAAM8Z,GAAiBjgB,QAAUR,EAAQihB,WAErFta,EAAQ,IAAM8Z,GAAiBjgB,OAAWmG,EAAQ,EAE3C,kBAAC,KAAD,CAAUwb,KAAK,OAAO3Z,MAAO,CAAC1J,MAAO,cAIjD,yBAAKoB,UAAWF,EAAQohB,gBACpB,kBAAC,GAAD,CAAM9J,QAAQ,eAAeuJ,EAAI3E,OACjC,kBAAC,GAAD,CAAM5E,QAAQ,SAASuJ,EAAIH,e,+WC3GlD0B,GAAS,CACpB,CACEhG,KAAM,SACNoE,YAAa,UAEf,CACEpE,KAAM,aACNoE,YAAa,cAEf,CACEpE,KAAM,UACNoE,YAAa,iBAEf,CACEpE,KAAM,gBACNoE,YAAa,iBAEf,CACEpE,KAAM,eACNoE,YAAa,gBAEf,CACEpE,KAAM,aACNoE,YAAa,cAEf,CACEpE,KAAM,aACNoE,YAAa,cAEf,CACEpE,KAAM,YACNoE,YAAa,aAEf,CACEpE,KAAM,WACNoE,YAAa,YAEf,CACEpE,KAAM,aACNoE,YAAa,cAEf,CACEpE,KAAM,aACNoE,YAAa,cAEf,CACEpE,KAAM,YACNoE,YAAa,aAEf,CACEpE,KAAM,YACNoE,YAAa,aAEf,CACEpE,KAAM,sBACNoE,YAAa,uBAEf,CACEpE,KAAM,iBACNoE,YAAa,kBAEf,CACEpE,KAAM,WACNoE,YAAa,YAEf,CACEpE,KAAM,aACNoE,YAAa,eAIJ6B,GAAwB,SAACC,GAAD,OAAeF,GAAO/Y,MAAK,SAAAkZ,GAAK,OAAIA,EAAMnG,OAASkG,MAE3EE,GAAmB,SAACD,GAC/B,OAAQA,EAAMnG,MACZ,IAAK,aACH,OAAOqG,KACT,IAAK,UACH,OAAOC,KACT,IAAK,gBACH,OAAOC,KACT,IAAK,eACH,OAAOC,KACT,IAAK,aACH,OAAOC,KACT,IAAK,aACH,OAAOC,KACT,IAAK,YACH,OAAOC,KACT,IAAK,WACH,OAAOC,KACT,IAAK,aACH,OAAOC,KACT,IAAK,aACH,OAAOC,KACT,IAAK,YACH,OAAOC,KACT,IAAK,YACH,OAAOC,KACT,IAAK,sBACH,OAAOC,KACT,IAAK,iBACH,OAAOC,KACT,IAAK,WACH,OAAOC,KACT,IAAK,aACH,OAAOC,KACT,IAAK,SACH,OAAOC,KACT,QACE,OAAO,OC3IPjlB,GAAYC,aAAW,iBAAO,CAChCilB,oBAAqB,CACjBvkB,OAAQ,GACRkL,QAAS,GACT3H,SAAU,WACVgB,OAAQ,WAEZigB,mBAAoB,CAChB1kB,MAAO,GACPE,OAAQ,IAEZykB,oBAAqB,CACjB9kB,MAAO,UACPM,SAAU,EACVJ,WAAY,IACZmU,UAAW,SACXlQ,UAAW,GACX4gB,SAAU,aACV5kB,MAAO,QAsBA6kB,OAnBf,SAAoBjlB,GAChB,IAAMmB,EAAUxB,KAChB,OACI,yBACI0B,UAAWF,EAAQ0jB,oBACnBvb,QAAStJ,EAAMklB,UAEf,kBAAC,OAAD,CACI7jB,UAAWF,EAAQ2jB,mBACnB/O,IAAG,gBAAW/V,EAAM0jB,MAAMnG,MAC1Bhc,IAAKoiB,GAAiB3jB,EAAM0jB,SAEhC,yBAAKriB,UAAWF,EAAQ4jB,qBACnB/kB,EAAM0jB,MAAM/B,eCnCvBhiB,GAAYC,aAAW,iBAAO,CAChCulB,uBAAwB,CACpB/kB,MAAO,IACPE,OAAQ,IACRkL,QAAS,IAEb4Z,oBAAqB,CACjBxhB,QAAS,OACT8B,SAAU,QAEd2f,qBAAsB,CAClBjlB,MAAO,GACPE,OAAQ,GACRuD,SAAU,WACVyH,IAAK,EACLtH,KAAM,OAyBCshB,OArBf,SAAwBtlB,GACpB,IAAMmB,EAAUxB,KAEhB,OACI,yBAAK0B,UAAWF,EAAQgkB,wBACpB,yBAAK9jB,UAAWF,EAAQikB,qBAEhB7B,GAAOhZ,KAAI,SAACmZ,GAAD,OACP,kBAAC,GAAD,CACItb,IAAKsb,EAAMnG,KACXmG,MAAOA,EACPrb,WAAUrI,EAAMulB,eAAgBvlB,EAAMulB,cAAchI,OAASmG,EAAMnG,KACnE2H,SAAU,WAAQllB,EAAMwlB,eAAe9B,YClC7D+B,GAA2B,WAQ/B,IARsD,IAAtB/F,EAAqB,uDAAP,GACxCgG,EAASC,uBAAajG,EAAYkG,qBAAqBF,OAEvDG,EAAeH,EAAOnb,KAC1B,SAACub,GAAD,OAAaA,EAAMzgB,KAAK0gB,OAAmBD,EAAMzgB,KAAf,QAGhC2gB,EAAU,GACLC,EAAI,EAAGA,EAAIJ,EAAalkB,OAAQskB,IAAK,CAC5C,IAAMH,EAAQD,EAAaI,GAGvBA,IAAMJ,EAAalkB,OAAS,EAC9BqkB,GAAWF,EAGSE,GAAN,OAAVF,EAA2BA,EACfA,EAAQ,KAG5B,OAAOE,GAGHE,GAAoB,SAACxG,GAAyC,IAA5ByG,EAA2B,uDAAP,GACtDH,EAAUP,GAAyB/F,GAOvC,OANAyG,EAAkBC,SAAQ,SAAC3H,GACzBuH,EAAUA,EAAQK,QAChB,IAAIC,OAAO7H,EAAQlB,KAAM,KADjB,aAEFkB,EAAQhd,GAFN,WAKLukB,GAGHO,GAAuB,SAACC,EAAkB9f,GAE9C,OAAO8f,EAAiBjc,KAAI,SAAC9I,GAC3B,IAAMglB,EAAW/f,EAAU8D,MAAK,SAACkc,GAAD,OAASA,EAAIjlB,KAAOA,KACpD,MAAO,CACLA,KACA8b,KAAMkJ,EAASlJ,MAAQ,QCXvBoJ,GAAahT,YAAW,CAC1BhQ,KAAM,CACFW,WAAY,WAEhBsiB,UAAW,CACT1mB,gBAAiB,YALJyT,CAOhBkT,KAEGC,GAAYnT,aAAW,iBAAO,CAChChQ,KAAM,CACFuQ,cAAe,OACfjU,MAAO,UAEPE,WAAY,OACZ4F,cAAe,OACf,UAAW,CACXiR,QAAS,YARCrD,EAWd,SAAC3T,GAAD,OAAW,kBAAC+mB,EAAA,EAAD,eAAKC,eAAa,GAAKhnB,OAEhCL,GAAYC,aAAW,SAAC8D,GAAD,MAAY,CACrCujB,eAAgB,CACZlQ,OAAQ,qBACRzS,WAAY,UACZE,aAAc,EACdsS,aAAc,IAElBoQ,eAAgB,CACZrjB,SAAU,WACVzD,MAAO,QAEX+mB,KAAM,CACF3b,QAAS,IAEb4b,gBAAiB,CACbvjB,SAAU,WACViT,aAAc,GACdzS,WAAY,EACZyU,YAAa,GAEjBuO,WAAY,CACRpnB,MAAO,UACP,UAAW,CACPC,gBAAiB,uBAErB,UAAW,CACP8W,QAAS,SAGjBQ,OAAQ,CACJvX,MAAO,UACPuE,aAAc,EACd8iB,SAAU,IACVpT,cAAe,QAEnBqT,UAAW,CACPljB,WAAY,GACZyU,YAAa,IAEjB0O,cAAe,CACXpnB,MAAO,GACPE,OAAQ,QAIVmnB,GAAe,CACjB,CACIhL,UAAW,GACX7R,MAAO,eACPnH,MAAO,SAEX,CACIgZ,UAAW,GACX7R,MAAO,eACPnH,MAAO,UAEX,CACIgZ,UAAW,GACX7R,MAAO,eACPnH,MAAO,SAEX,CACIgZ,UAAW,GACX7R,MAAO,eACPnH,MAAO,QAEX,CACIgZ,UAAW,GACX7R,MAAO,eACPnH,MAAO,UAIf,SAASikB,GAAM1nB,GACX,OAAO,kBAAC,IAAD,eAAU2nB,UAAW,EAAGlP,QAAQ,UAAazY,IAiazC4nB,OA9Zf,SAA0B5nB,GACtB,IAAMmB,EAAUxB,KADa,EAEOsC,mBAAS,GAFhB,mBAEtB4lB,EAFsB,KAEVC,EAFU,OAKa7lB,mBAAS,MALtB,mBAKtBsjB,EALsB,KAKPwC,EALO,OAMa9lB,mBAAS,IANtB,mBAMtByF,EANsB,KAMPsgB,EANO,OAOC/lB,mBAAS,IAPV,mBAOtBgW,EAPsB,KAObC,EAPa,OAQDjW,mBAAS,IARR,mBAQtBkY,EARsB,KAQd8N,EARc,OASiBhmB,oBAAS,GAT1B,mBAStBqE,EATsB,KASL4hB,EATK,OAUSjmB,oBAAS,GAVlB,mBAUtByZ,EAVsB,KAUTyM,EAVS,OAWuBlmB,oBAAS,GAXhC,mBAWtBke,EAXsB,KAWFiI,EAXE,OAcenmB,oBAAS,GAdxB,mBActBomB,EAdsB,KAcNC,EAdM,OAeSrmB,mBAAS,MAflB,mBAetBsmB,EAfsB,cAgBStmB,mBAASumB,cAAYC,gBAhB9B,qBAgBtB/I,GAhBsB,MAgBTgJ,GAhBS,SAiBWzmB,mBAAS,MAjBpB,qBAiBtB0mB,GAjBsB,MAiBRC,GAjBQ,SAkB2B3mB,oBAAS,GAlBpC,qBAkBtB4mB,GAlBsB,MAkBAC,GAlBA,SAmBqB7mB,oBAAS,GAnB9B,qBAmBtB8mB,GAnBsB,MAmBHC,GAnBG,SAqBmB/mB,mBAAS,IArB5B,qBAqBtBukB,GArBsB,MAqBJyC,GArBI,SAsBmBhnB,oBAAS,GAtB5B,qBAsBtBinB,GAtBsB,gBAuBGjnB,mBAAS,OAvBZ,qBAuBtBknB,GAvBsB,MAuBZC,GAvBY,SA0BSnnB,oBAAS,GA1BlB,qBA0BtBonB,GA1BsB,MA0BTC,GA1BS,MA4BvBC,GAAqB,SAACte,EAAOue,GAChB,cAAXA,GAIJF,IAAe,IAjCU,GAqCQxnB,IAAM8E,WAAW/E,GAA9CK,GArCqB,GAqCrBA,MAAOO,GArCc,GAqCdA,kBAyFTgnB,GAAsB/J,GAAYkG,oBAAoBpF,UACtDkJ,GAAe,CACjB,CACI,GAAM,2BACN,IAAO,2BACP,KAAS,gBACT,SAAY,gBACZ,QAAW,CACP,UAAa,SACb,SAAY,SACZ,SAAY,gBACZ,cAAiB,UACjB,OAAU,UAEd,KAAQ,CACJ,cAiCNC,GA5B0B,WAC5B,IAAIA,GAAqB,EAKnBlmB,EADSkiB,uBAAajG,GAAYkG,qBAAqBF,OACxC,GAAGrgB,KAAK0gB,OAEvBvF,EAAUd,GAAYkG,oBAAoBpF,UAiBhD,OAfI0I,GACAS,GAAqB,EACdjiB,EAAc/F,OAAS,GAAM6e,GAAqB,KAAV/c,IAC3C8kB,IACgD,IAA3BzO,OAlHV,KAmHP6P,GAAqB,EAEAtB,GACjB3gB,EAAc/F,OAASsW,GAtHpB,MAuHH0R,GAAqB,KAM9BA,EAGgBC,GAsBrB7d,GAAO8d,QAAQV,IAEfW,GAA8B,WAChCd,IAAsBD,KAoDpBgB,GAAY,WACd/B,EAAiB,IACjB9P,EAAW,IACX+P,EAAU,IACVF,EAAiB,MACjBG,GAAmB,GACnBC,GAAe,GACfC,GAAsB,GACtBM,GAAeF,cAAYC,gBAG/B,OACI,yBAAKpnB,UAAWF,EAAQ8lB,gBACpB,yBAAKtd,MAAO,CAACoW,SAAU,SAAU3f,MAAO,qBACpC,kBAACumB,GAAD,CACIqD,UAAQ,EACRvR,QAAQ,YACRhV,MAAOokB,EACPhf,SA1MQ,SAACoC,EAAOgf,GAC5BnC,EAAcmC,KA0MF,kBAACnD,GAAD,CAAWE,eAAa,EAACpc,MNhZb,gCMmZpB,0BAAMsf,SAjEO,SAACjjB,GAClBA,EAAEkjB,iBAEF,IAAMhE,EAAoBI,GAAqBC,GAAkBkD,IAE3DU,EAAUlE,GAAkBxG,GAAayG,GAKzCkE,EAAc,CAChBC,GAAI5iB,EACJ6iB,aAAczQ,OAAO7B,GACrBmS,WAGA7E,IACA8E,EAAY9G,OAAS,CAACgC,EAAchI,OAIxCra,IAAMC,KAAK,uCAAwCknB,EAAc,CAC7DvjB,QAAS,CACL,eAAgB,mBAChB,8BAA+B,IAC/B,cAAiB5E,MAEtBkB,MAAK,SAACC,GACDA,EAAIC,KAAKA,OACTymB,KAEAtnB,GAAkBY,EAAIC,KAAKA,KAAKd,iBAEhC8mB,IAAe,GAGfkB,YAAW,WACP5nB,OAAOC,SAAS4nB,WACjB,UA2BuBppB,UAAWF,EAAQ+lB,gBAC7C,yBAAK7lB,UAAWF,EAAQgmB,MACpB,yBACI9lB,UAAW+H,IACP,MACA,uBACAjI,EAAQimB,kBAGZ,kBAAC,GAAD,CACIjhB,YArMK,SAACuB,GAC1BsgB,EAAiBtgB,IAqMGtB,QAlMC,aAmMDC,aAAcqB,EACdpB,gBAAiBA,EACjBC,kBAAmB,SAACsW,GAAD,OAAYqL,EAAmBrL,OAKlD,yBAAKxb,UAAW+H,IACZ,MACA,uBACAjI,EAAQimB,kBAER,kBAAC,GAAD,CACInP,QAASA,EACTkC,OAAQA,EACRtR,SAlMA,SAACsR,EAAQlC,GACrCgQ,EAAU9N,GACVjC,EAAWD,GACXqQ,GAAkB,IAgMU/L,QAASkL,GACT/f,cAAeA,EACfkU,eAjQT,IAkQS8O,eAhQT,CACnBC,OAAO,EACPlnB,MAAO,IA+PqBuR,MAAOuT,EACPpK,qBAxQJ,EAyQID,eA3QV,EA4QUxB,aAlNX,WACjB1c,EAAM4qB,iBAAiB,IAkNK9N,cA/MV,WAClB9c,EAAM4qB,iBAAiB,IA+MK3N,eAjQT,CACnB4N,YAAa,WACbC,eAAgB,SAChBC,sBAAuB,YA+PK1T,kBA5PN,CACtB7B,KAAM,QACN/R,MAAO,CACHqS,QAAS,QACTrU,GAAI,UAyPoBia,YAAaA,EACbC,cAAe,SAACkB,GAAD,OAAYsL,EAAetL,OAK1D,yBAAKxb,UAAW+H,IACJ,MACA,uBACAjI,EAAQimB,kBAEhB,kBAAC,GAAD,CACI7G,cApNF,SAACyK,GACnBtC,GAAesC,GACfpC,GAAgB,OAmNIlJ,YAAaA,GACb1K,MAAO2T,GACPsC,eA1OD,CACnBN,OAAO,EACPlnB,MAAO,IAyOa+c,QAASiJ,GACTC,aAAcA,GACd1K,aAjNH,SAAChf,GAClBwmB,GAAiB0E,KAAKlrB,EAAMyB,IAC5BwnB,GAAoBzC,KAgNApgB,QAtNQ,WAC5B0iB,IAAwB,IAsNJ3I,mBAAoBA,EACpBC,qBAAsB,SAACvD,GAAD,OAAYuL,EAAsBvL,QAKhEgM,IACI,yBAAKxnB,UAAWF,EAAQgmB,MACpB,kBAAC,GAAD,CACIne,OAAQ+f,GACRpG,cAAemH,GACflH,iBA7IgB,SAAC3X,GACxB,IAAdA,EAAM7C,KACL0hB,SAgJI,yBAAKzoB,UAAU,yCAAyCsI,MAAO,CAAC/F,QAAS,OAAQ4H,QAAS,KACtF,yBAAK7B,MAAO,CAAC/F,QAAS,OAAQc,eAAgB,aAGlC,kBAAC0Y,EAAA,EAAD,CAASC,MAAM,iBAAYC,UAAU,OACjC,kBAAC0F,EAAA,EAAD,CACI3hB,UAAWF,EAAQkmB,WACnB3d,aAAW,iBACXJ,QAxKZ,SAAC2B,GACrBme,GAAYne,EAAMkgB,iBA0KkB5F,EACI,yBACIlkB,UAAWF,EAAQqmB,cACnBzR,IAAI,SACJsH,MA3RxCkI,EACOA,EAAc5D,YAElB,iBAyRqCpgB,IArSnB,WACzB,GAAIgkB,EACA,OAAO5B,GAAiB4B,GAAe,GAmSM6F,KAEb,kBAAC,IAAD,SAOxB,yBAAK/pB,UAAWF,EAAQomB,WACpB,kBAAChT,EAAA,EAAD,CACIkE,QAAQ,YACRxY,MAAM,UACNoB,UAAWF,EAAQqW,OACnBhC,KAAK,SACLvN,SAAU0hB,IzB5dd,SAACzf,GACvB,GAAqB,kBAAVA,EACX,MAAM,IAAImhB,UAAU,qBAGrB,OAAOnhB,EAAMtB,cAAcyd,QAAQ,iBAAiB,SAAAiF,GAAC,OAAIA,EAAEzqB,iByB8dhC0qB,CAAS,uCAEb,kBAACC,EAAA,EAAD,CAAUzf,KAAMsd,GAAaoC,iBAAkB,IAAMzf,QAASud,IAC1D,kBAAC,GAAD,CAAOvd,QAASud,GAAoBmC,SAAS,WAA7C,uDAMZ,kBAACC,EAAA,EAAD,CACI5f,KAAMA,GACNod,SAAUA,GACVnd,QA9MI,WAChBod,GAAY,OA8MAwC,aAAc,CACVC,SAAU,SACVC,WAAY,WAGhB,kBAAC,GAAD,CACItG,eAAgB,SAAC9B,GAAD,OArON,SAACA,GAC3B,GAAG6B,GACIA,EAAchI,OAASmG,EAAMnG,KAG5B,OAFAwK,EAAiB,WACjBqB,GAAY,MAIpBrB,EAAiBrE,GACjB0F,GAAY,MA4N+B2C,CAAsBrI,IACjD6B,cAAeA,Q,oBChhBjC5lB,GAAYC,aAAW,SAAC8D,GAAD,MAAY,CACrCsoB,kBAAmB,CACfjV,OAAQ,qBACRzS,WAAY,UACZE,aAAc,EACdsS,aAAc,IAElBmV,iBAAkB,CACdroB,QAAS,OACTe,WAAY,SACZD,eAAgB,gBAChB8G,QAAS,aAEb0gB,gBAAiB,CACbtoB,QAAS,OACTiT,cAAe,MACftW,SAAU,GACVN,MAAO,UACP0E,WAAY,UAEhBwnB,iBAAkB,CACd5mB,YAAa,IAEjB6mB,oBAAqB,CACjBnsB,MAAO,UACPM,SAAU,GACVJ,WAAY,KAEhBksB,eAAgB,CACZpsB,MAAO,UACPM,SAAU,QAIZomB,GAAahT,YAAW,CAC1BhQ,KAAM,CACFW,WAAY,WAEhBsiB,UAAW,CACT1mB,gBAAiB,YALJyT,CAOhBkT,KAEGC,GAAYnT,aAAW,iBAAO,CAChChQ,KAAM,CACFuQ,cAAe,OACfjU,MAAO,UAEPE,WAAY,OACZ4F,cAAe,OACf,UAAW,CACXiR,QAAS,YARCrD,EAWd,SAAC3T,GAAD,OAAW,kBAAC+mB,EAAA,EAAD,eAAKC,eAAa,GAAKhnB,OAgFvBssB,OA9Ef,SAAkBtsB,GACd,IAAMmB,EAAUxB,KAGR2C,EAAkBR,IAAM8E,WAAW/E,GAAnCS,cACAE,EAAoBV,IAAM8E,WAAW/E,GAArCW,gBAEAqlB,EAA+B7nB,EAA/B6nB,WAAY0E,EAAmBvsB,EAAnBusB,eACdlV,EAAoB,CACtB7B,KAAM,QACN/R,MAAO,CACHqS,QAAS,QACTrU,GAAI,UAQZ,OACI,yBAAKJ,UAAWF,EAAQ6qB,mBACpB,kBAAC,GAAD,CAAYvoB,MAAOokB,EACfpP,QAAQ,YACR5P,SARS,SAACoC,EAAOgf,GACzBsC,EAAetC,KAUkB,kBAAC,GAAD,CAAWxmB,MAAO,EAAGmH,MAAM,uDAG/B,kBAAC,GAAD,CAAWnH,MAAO,EAAGmH,MAAM,0CAIjC,IAAfid,GACI,yBAAKxmB,UAAWF,EAAQ8qB,kBACpB,yBAAK5qB,UAAWF,EAAQ+qB,iBACnB5pB,EACD,kBAAC,GAAD,CACIqH,MAAO,CAACpJ,SAAU,GAAI4R,WAAY,kBAClCiD,QAAM,EACNC,IAAKgC,MAMN,IAAfwQ,GACI,yBAAKxmB,UAAWF,EAAQ8qB,kBACpB,yBAAK5qB,UAAWF,EAAQ+qB,iBACpB,6BACK1pB,GAEL,kBAAC,GAAD,CACImH,MAAO,CAAEpJ,SAAU,GAAI4R,WAAY,kBACnCiD,QAAM,EACNC,IAAKgC,KAGb,yBAAKhW,UAAWF,EAAQgrB,kBACpB,yBAAK9qB,UAAWF,EAAQirB,qBAAxB,mBAGA,yBAAK/qB,UAAWF,EAAQkrB,gBAAxB,sDAC2B,IACtBG,OACAC,IAAI,EAAG,UACPC,QAAQ,SACRC,OAAO,eCpI3BC,GAAS,SAACC,EAAMC,GACzBD,EAAKjU,QAAO,SAACmU,EAAS3kB,GAAV,OAAoB2kB,GAAWA,EAAQ3kB,GAAQ2kB,EAAQ3kB,GAAO,OAAO0kB,I,wCCY/EE,GAAWptB,YAAW,CACxBqtB,sBAAuB,CACnBC,SAAU,WACVtpB,QAAS,OACTe,WAAY,YAEhBwoB,mBAAoB,CAChBtoB,OAAQ,UACR5E,MAAO,WAEXmtB,eAAgB,CACZjtB,WAAY,IACZktB,WAAY,UAGhBC,aAAc,CACVntB,WAAY,IACZktB,WAAY,UAGhBE,oBAAqB,CACjBntB,MAAO,GACPE,OAAQ,GACRR,OAAQ,QACRutB,WAAY,UAEhBG,2BAA4B,CACxBvtB,MAAO,OACP4E,OAAQ,WAEZ4oB,kBAAmB,CACf7pB,QAAS,OACTe,WAAY,SACZkS,cAAe,MACf/W,OAAQ,SACR0L,QAAS,GACTvL,MAAO,WAEXytB,qBAAsB,CAClB7pB,SAAU,WACVgB,OAAQ,UACR5E,MAAO,WAEX0tB,iBAAmB,CACf9pB,SAAU,WACVzD,MAAO,IACPkL,IAAK,GACLtH,MAAO,GACPF,OAAQ,GACRU,aAAc,EACdjE,SAAU,GACVJ,WAAY,IACZF,MAAO,sBACPC,gBAAiB,QACjBkT,WAAY,uGACZwa,UAAW,aACXC,wBAAyB,mBACzBtpB,UAAW,mEACXJ,UAAW,UAIb2pB,GAAwB,SAAC,GAAc,IAAZvuB,EAAW,EAAXA,KAIvB4B,EAAU6rB,KAChB,OACE,uBAEE3rB,UACE9B,EAAKoB,UACDyI,IAAWjI,EAAQgsB,mBAAoBhsB,EAAQisB,eAAgBjsB,EAAQ4sB,kBACvE3kB,IAAWjI,EAAQgsB,mBAAqBhsB,EAAQisB,gBAEtDzjB,MAAO,CAAEmN,aAAc,IAEtBvX,EAAKoB,UAAY,mBAAqBrB,EAAmBC,KAK5DyuB,GAAoB,SAAC,GAAc,IAAZzuB,EAAW,EAAXA,KAInB4B,EAAU6rB,KAChB,OACI,uBAEE3rB,UACE9B,EAAKoB,UAAY,mBAAqBQ,EAAQqsB,2BAEhD7jB,MAAO,CAAEmN,aAAc,IAEtBvX,EAAKoB,UAAY,mBAAqBrB,EAAmBC,KAuHrD0uB,OAlHf,SAAuBjuB,GACnB,IAAMmB,EAAU6rB,KA6BVkB,EAAoB,SAACluB,GACvB,IAIMmuB,EAAcC,MAAMC,KAAKruB,EAAMsuB,OAErC,OADAH,EAAYI,QAER,yBAAKltB,UAAWF,EAAQusB,qBAAsB/jB,MAAO,CAAC/F,QAAS,SAC3D,kBAAC,GAAD,CACIrE,KAAMS,EAAMsuB,MAAM,GAClBE,MAAI,IAHZ,uBAMiBxuB,EAAMsuB,MAAM3sB,OAAS,EANtC,4BAQQ3B,EAAM2a,YACF,yBAAKtZ,UAAWF,EAAQwsB,kBACpB,kBAACc,GAAA,EAAD,KAEQN,EAAY5jB,KAAI,SAAChL,GAAD,OACZ,kBAACmvB,GAAA,EAAD,CACIlX,QAAM,EACNpP,IAAK7I,EAAKkC,GACV6H,QAAS,SAAC/J,GArB1CovB,QAAQC,IAAI,mBAuBoB,kBAACC,GAAA,EAAD,KACI,kBAAC,EAAD,CAAYxuB,KAAM,GAAId,KAAMA,KAEhC,kBAACuvB,GAAA,EAAD,CAAcxiB,QAAShN,EAAmBC,aAYlF,OACI,yBAAK8B,UAAWF,EAAQ8rB,uBACpB,kBAAC,GAAD,CACI1tB,KAAMS,EAAMquB,OAtEP,WACb,IAAM3K,EAAQ1jB,EAAMujB,QAAUvjB,EAAMujB,OAAO5hB,OAAS,EAC9C6hB,GAAsBxjB,EAAMujB,OAAO,IACnC,KACN,OAAIG,EAEI,0BAAMriB,UAAWF,EAAQ4tB,gBAAzB,4DACsC,IAClC,yBAAK1tB,UAAWF,EAAQosB,oBACpBxX,IAAK2N,EAAM/B,YACXtE,MAAOqG,EAAM/B,YACbpgB,IAAKoiB,GAAiBD,GAAO,KAEhCA,EAAM/B,YAPX,YAaA,0BAAMtgB,UAAWF,EAAQ4tB,eAAgBplB,MAAO,CAAE/F,QAAS,WAAYkT,aAAc,IAArF,uCAsDHkY,GACAhvB,EAAMsqB,GAAG3oB,OAAS,EACf,0BAAMN,UAAWF,EAAQmsB,aAAc3jB,MAAO,CAAE/F,QAAS,SACrD,kBAAC8W,GAAA,EAAD,KACI,kBAACwT,EAAD,CACII,MAAOtuB,EAAMsqB,OAKG,IAA5BxQ,OAAO9Z,EAAMsqB,GAAG3oB,QAChB,0BAAMN,UAAWF,EAAQmsB,aAAc3jB,MAAO,CAAC/F,QAAS,SACpD,kBAAC,GAAD,CACIrE,KAAMS,EAAMsqB,GAAG,MAMvB,0BAAMjpB,UAAWF,EAAQmsB,aAAc3jB,MAAO,CAAC/F,QAAS,SACpD,kBAAC,GAAD,CACIrE,KAAMS,EAAMsqB,GAAG,KAInB,0BAAMjpB,UAAU,kBAAhB,eACA,kBAAC,GAAD,CACI9B,KAAMS,EAAMsqB,GAAG,QAY1B2E,GAAY,SAACjvB,GACtB,IAAMmB,EAAU6rB,KAChB,OACI,yBAAK3rB,UAAWF,EAAQssB,mBACpB,6BAAMztB,EAAMyD,OACZ,kBAAC,GAAD,CACIkG,MAAO,CAAEpJ,SAAU,GAAI4R,WAAY,kBACnCiD,QAAM,EACNC,IAAKrV,EAAMqX,sB,+BCzNrB6X,GAAavb,YAAW,CAC1BhQ,KAAM,CACFW,WAAY,UACZyS,OAAQ,sBACR6W,UAAW,aACXppB,aAAc,EACdD,UAAW,OACXwb,SAAU,YAPCpM,CAShBwb,MAEGxvB,GAAYC,aAAW,SAAC8D,GAAD,MAAY,CACrC0rB,KAAM,CAGFtY,aAAc,QAElBuY,iBAAkB,CACdzrB,QAAS,OACT4H,QAAS,GACT3H,SAAU,YAEdyrB,gBAAiB,CACb1rB,QAAS,eACTkc,cAAe,MACf1G,aAAc,GACd/U,WAAY,IAEhBkrB,kBAAmB,CACf3rB,QAAS,eACTC,SAAU,WACVyH,IAAK,EACLrH,MAAO,EACPhE,MAAO,OACPM,SAAU,GACVJ,WAAY,KAEhBstB,kBAAmB,CACf7pB,QAAS,OACTe,WAAY,SACZkS,cAAe,MACf/W,OAAQ,SACR0L,QAAS,GACTvL,MAAO,WAEXuvB,iBAAkB,CACdvvB,MAAO,mBAGXwvB,kBAAmB,CACfxvB,MAAO,UACPuL,QAAS,cACT6hB,WAAY,WACZltB,WAAY,KAGhBuvB,iBAAkB,CACdlkB,QAAS,aACT5H,QAAS,OACTc,eAAgB,cAEpB2iB,WAAY,CACRpnB,MAAO,UACP,UAAW,CACT+W,QAAS,SAGf2Y,UAAW,CACP1vB,MAAO,WAEX2vB,QAAS,CACL3vB,MAAO,WAEX4vB,YAAa,CACT/W,YAAa,GAEjBgX,WAAY,CACR7vB,MAAO,OAEXutB,2BAA4B,CACxBvtB,MAAO,OACP4E,OAAQ,WAEZ6oB,qBAAsB,CAClB7pB,SAAU,WACVgB,OAAQ,UACR5E,MAAO,WAEX0tB,iBAAmB,CACf9pB,SAAU,WACVzD,MAAO,IACPkL,IAAK,GACLtH,MAAO,GACPF,OAAQ,GACRU,aAAc,EACdjE,SAAU,GACVJ,WAAY,IACZF,MAAO,sBACPC,gBAAiB,QACjBkT,WAAY,uGACZwa,UAAW,aACXC,wBAAyB,mBACzBtpB,UAAW,mEACXJ,UAAW,YAkBbkT,GAAoB,CACtB7B,KAAM,QACN/R,MAAO,CACHqS,QAAS,QACTrU,GAAI,UAsIGsuB,OAlIf,SAAkB/vB,GACd,IAAMmB,EAAUxB,KACRyvB,EAAQpvB,EAARovB,KAEFY,EAAWpD,GAAO,CAAC,OAAQ,QAASwC,IAAS,cAJ9B,EAKWntB,mBAASmtB,EAAKa,OALzB,mBAKdC,EALc,KAKJC,EALI,KAMbjuB,EAAUJ,IAAM8E,WAAW/E,GAA3BK,MAgBFgsB,EAAoB,SAACluB,GAAW,IAC3B2a,EAAoC3a,EAApC2a,WAAY2T,EAAwBtuB,EAAxBsuB,MACbH,GADqCnuB,EAAjBowB,cACNhC,MAAMC,KAAKC,IACzBntB,EAAUxB,KAMhB,OACI,yBAAK0B,UAAWF,EAAQusB,sBACnB0B,EAAKiB,MAAM1uB,OAAS,GAAKytB,EAAKiB,MAAM1uB,OAEjCgZ,GACI,yBAAKtZ,UAAWF,EAAQwsB,kBACpB,kBAACc,GAAA,EAAD,KACKN,EAAY5jB,KAAI,SAAChL,GAAD,OACb,kBAACmvB,GAAA,EAAD,CACIlX,QAAM,EACNpP,IAAK7I,EAAKkC,GACV6H,QAAS,cAET,kBAACulB,GAAA,EAAD,KACI,kBAAC,EAAD,CAAYxuB,KAAM,GAAId,KAAMA,KAEhC,kBAACuvB,GAAA,EAAD,CAAcxiB,QAAShN,EAAmBC,aAW9E,OACI,kBAAC2vB,GAAD,CAAY9mB,IAAKgnB,EAAK3tB,GAAIJ,UAAWF,EAAQiuB,MACzC,yBAAK/tB,UAAWF,EAAQkuB,kBAlFf,SAACD,GAElB,OADiBxC,GAAO,CAAC,OAAQ,QAASwC,IAAS,eAE/C,IAAK,cACL,QACI,OACA,yBAAKzlB,MAAO,CAACvJ,MAAO,GAAIE,OAAQ,KAC5B,kBAAC,EAAD,CAAYD,KAAM,GAAId,KAAM6vB,EAAKf,SA4EhCiC,CAAalB,GACd,yBAAK/tB,UAAWF,EAAQmuB,iBAEH,gBAAbU,EACI,kBAAC,GAAD,CACI1F,GAAI8E,EAAK9E,GACT+D,KAAMe,EAAKf,KACX9K,OAAQ6L,EAAK7L,OACbgN,UAAWnB,EAAKmB,YAIpB,qDAGR,0BAAMlvB,UAAWF,EAAQquB,iBAAkB7lB,MAAO,CAAE/F,QAAS,OAAQe,WAAY,WC/N3E,SAAC6rB,GACvB,IAAMC,EAAOjE,KAAOgE,GAEpB,OAAI1Y,KAAK4Y,IAAIlE,OAASmE,KAAKF,IAAS,IACzB,WAGJA,EAAKG,UDyNSC,CAAWzB,EAAK0B,cAGxB1B,EAAK7E,aAAe,GACjB,yBAAKlpB,UAAWF,EAAQouB,mBACxB,kBAAC,GAAD,CACIlY,kBAAmBA,GACnB5T,MAAQ2rB,EAAK7E,aAAe6E,EAAK9E,GAAG3oB,WAKhD,yBAAKN,UAAWF,EAAQsuB,mB7BrMG,SAACpqB,EAAM0rB,GAC1C,IAAIC,EAAe3rB,EA0DnB,OAxDA2rB,EAAeC,IAAmBD,EAAc,WAAW,SAACrY,EAAOsN,GAAR,OACvD,0BAAM7d,IAAKuQ,EAAQsN,EAAG5kB,UAAU,qBAAhC,IACEsX,MAINqY,EAAeC,IAAmBD,EAAc,YAAY,SAACrY,EAAOsN,GAAR,OACxD,kBAAC,IAAD,CAAO7d,IAAKuQ,EAAQsN,EAAGiL,MAAK,WAAMvY,EAAN,KAAgBtY,KAAM,QAGlD0wB,GACIA,EAAYpvB,OAAS,IACrBqvB,EAAeC,IACfD,EACA3xB,GACA,SAACsZ,EAAOsN,GAoCA,OAnCwB8K,EAAYhsB,QAAO,SAAC0hB,GAAD,OAAcA,EAAShlB,KAAOkX,KAAOpO,KAAI,SAACkc,GAwBrF,OACI,0BAAMre,IAAKuQ,EAAQsN,GACf,2BACKQ,EAAS9lB,UACJ,mBACArB,EAAmBmnB,YAW9CuK,E6B2IMG,CACG/B,EAAKhF,QACLgF,EAAK2B,cAIb,yBAAK1vB,UAAWF,EAAQuuB,kBACpB,yBAAK/lB,MAAO,CAAE/F,QAAS,OAAQc,eAAgB,gBAAiBtE,MAAO,SACnE,yBAAKuJ,MAAO,CAAE/F,QAAS,SACnB,yBAAK+F,MAAO,CAAE/F,QAAS,OAAQe,WAAY,WACvC,kBAACqe,EAAA,EAAD,CACI1Z,QA9FH,WAErBpG,IAAMD,IAAN,+CAAkDmsB,EAAK3tB,GAAvD,SAAkE,CAC9DqF,QAAS,CACL,eAAgB,mBAChB,8BAA+B,IAC/B,cAAiB5E,KAEtBkB,MAAK,SAACC,GAEL8sB,GAAaD,OAqFO7uB,UACI6uB,EACE9mB,IAAWjI,EAAQkmB,WAAYlmB,EAAQyuB,SACvCzuB,EAAQkmB,WAEd+J,UAAU,OACV1nB,aAAW,aAEX,kBAAC,KAAD,OAGA0lB,EAAKiB,MAAM1uB,OAAS,GAChB,kBAAC+Y,GAAA,EAAD,KACI,kBAACwT,EAAD,CACII,MAAOc,EAAKiB,eE7NzCgB,OAvCf,WAAiB,IAAD,EACoBpvB,mBAAS,IAD7B,mBACLqvB,EADK,KACKC,EADL,OAEUzvB,IAAM8E,WAAW/E,GAA/BK,EAFI,EAEJA,MAAOE,EAFH,EAEGA,GA0Bf,OAxBAM,qBAAU,WACNQ,IAAM,uCAAwC,CAC1CsuB,OAAQ,MACR1qB,QAAS,CACL,eAAgB,mBAChB,8BAA+B,IAC/B,cAAiB5E,KAEtBkB,MAAK,SAACC,GACL,IAAMC,EAAOD,EAAIC,KAAKA,KAAKiH,KAAI,SAAA6kB,GAAI,sBAC5BA,EAD4B,CAE/Ba,MAAOb,EAAKiB,MAAMoB,MAAK,SAAClyB,GAChB,OAAGA,EAAKkC,KAAOW,UAQ3BmvB,EAAYjuB,QAEjB,CAAClB,EAAIF,IAGJ,6BAEQovB,EAAS/mB,KAAI,SAACmnB,GAAD,OACT,kBAAC,GAAD,CAAUtpB,IAAKspB,EAAKjwB,GAAI2tB,KAAMsC,S,yCCsBnC/d,mBAtDA,CACbge,cAAe,CACb9tB,SAAU,QACVyH,IAAK,EACLrH,MAAO,EACPD,KAAM,EACN4tB,OAAQ,EACR9tB,OAAQ,MAEVC,MAAO,CACLO,WAAY,OACZC,UAAW,kCACXwb,SAAU,SACVjc,OAAQ,OAyCG6P,EArCf,SAAuB3T,GAAQ,IACpBmB,EAAyDnB,EAAzDmB,QAAS4K,EAAgD/L,EAAhD+L,KAAMC,EAA0ChM,EAA1CgM,QAASmd,EAAiCnpB,EAAjCmpB,SAAUnnB,EAAuBhC,EAAvBgC,SAAUsb,EAAatd,EAAbsd,UAcnD,OACI,oCACKvR,GACG,yBAAK1K,UAAWF,EAAQwwB,cAAeroB,QAAS0C,IAEpD,kBAAC6lB,GAAA,EAAD,CACI9lB,KAAMA,EACNod,SAAUA,EACVxf,MAAO,CAAE7F,OAAQ,MACjBwZ,UAAWA,GAAwB,SACnClK,YAAU,IAET,gBAAG0e,EAAH,EAAGA,gBAAH,OACG,kBAACC,GAAA,EAAD,iBAAUD,EAAV,CAA2B1O,QAAS,MACpC,yBAAK/hB,UAAWF,EAAQ4C,OAAQ/B,WCxC9CrC,GAAYC,aAAW,SAAC8D,GAAD,MAAY,CACrCsuB,iBAAkB,CACdnuB,SAAU,WACVS,WAAY,UACZyS,OAAQ,sBACRvS,aAAc,EACdgH,QAAS,GACTsL,aAAc,GACdlT,QAAS,OACTe,WAAY,SACZD,eAAgB,gBAChBgB,SAAU,QAEdusB,oBAAqB,CACjBruB,QAAS,OACTiT,cAAe,MACfnS,eAAgB,gBAChBkB,SAAU,GAEdssB,yBAA0B,CACtB/xB,WAAY,IAEZF,MAAO,UACP2F,SAAU,GAEdusB,SAAU,CACNtuB,SAAU,WACVI,MAAO,EACPhE,MAAO,WAEXmyB,sBAAuB,CACnBvuB,SAAU,WACV4S,aAAc,oBACd4b,cAAe,EACf7P,WAAY,GAEhB8P,mBAAoB,CAChBryB,MAAO,UAEPmZ,aAAc,GACd2G,SAAU,SACVwS,aAAc,WACdlF,WAAY,UAEhBmF,sBAAuB,CACnB5uB,QAAS,OACTC,SAAU,WACVI,MAAO,GAEXwuB,2BAA4B,CACxBxyB,MAAO,UAEPE,WAAY,SAIduT,GAAeC,YAAW,CAC5BhQ,KAAM,CACFuQ,cAAe,OAEfwe,UAAW,GACXlnB,QAAS,UACT4N,aAAc,GACdvV,SAAU,WACV,UAAW,CACPmT,QAAS,SAGjBpM,MAAO,CACH3K,MAAO,UACPM,SAAU,GACVmE,eAAgB,QAChBvE,WAAY,YAhBCwT,CAkBlBY,KA4KYoe,OAzKf,WACI,IAAMxxB,EAAUxB,KADI,EAEyBsC,mBAAS,IAFlC,mBAEb2wB,EAFa,KAEIC,EAFJ,OAGM5wB,mBAAS,GAHf,mBAGbwB,EAHa,KAGNqvB,EAHM,OAIY7wB,mBAAS,MAJrB,mBAIbknB,EAJa,KAIHC,EAJG,KAKZlnB,EAAUJ,IAAM8E,WAAW/E,GAA3BK,MAERQ,qBAAU,WACNQ,IAAMD,IAAI,+CAAgD,CACtD6D,QAAS,CACL,eAAgB,mBAChB,8BAA+B,IAC/B,cAAiB5E,KAEtBkB,MAAK,SAACC,GACLwvB,EAAkBxvB,EAAIC,KAAKA,KAAKyvB,uBAEtC,CAAC7wB,IAEH,IAyCI8wB,EArCEC,EAAsB,SAAChsB,EAAGisB,GAgB5BJ,EAASI,GACT9J,EAAY,OAuBd4J,EADY,IAAVvvB,EACY,WAGG,IAAVA,EACO,SAIA,mBAGhB,IAAM0vB,EAAoC,IAA1BP,EAAejxB,OAEzByxB,EAAa,SAACpzB,GAAD,OACjB,yBAAKqB,UAAWF,EAAQqxB,uBACtB,yBACEnxB,UAAWF,EAAQsxB,2BACnB9oB,MAAO,CAAEmP,YAAa,KAErB9Y,EAAMyD,SAMb,OACI,yBAAKpC,UAAWF,EAAQ6wB,kBACpB,yBAAK3wB,UAAWF,EAAQ8wB,qBACpB,yBAAK5wB,UAAWF,EAAQ+wB,0BAAxB,yDAGA,kBAAC,GAAD,CACIxoB,aAAW,UACX2pB,YAAWlK,EAAW,OAAS,KAC/BmK,gBAAc,OACdhqB,QA/EU,SAAC2B,GACvBme,EAAYD,EAAW,KAAOle,EAAMkgB,iBAgFvB6H,EACD,kBAAC,KAAD,CAAU3xB,UAAWF,EAAQgxB,YAEjC,kBAAC,GAAD,CACI1wB,GAAG,OACH0nB,SAAUA,EACVpd,KAAO8d,QAAQV,GACfnd,QAhEI,WAChBod,EAAY,OAgEAmK,WAAY,CACR5pB,MAAO,CACHvJ,MAAO,OAIf,kBAAC+H,EAAA,EAAD,CACIC,IAAK,EAELkB,QAAS,SAACrC,GAAD,OAAOgsB,EAAoBhsB,EAAG,KAH3C,YAOA,kBAACkB,EAAA,EAAD,CACIC,IAAK,EAELkB,QAAS,SAACrC,GAAD,OAAOgsB,EAAoBhsB,EAAG,KAH3C,UAOA,kBAACkB,EAAA,EAAD,CACIC,IAAK,EAELkB,QAAS,SAACrC,GAAD,OAAOgsB,EAAoBhsB,EAAG,KAH3C,sBASR,yBAAK5F,UAAU,YAAYsI,MAAO,CAACvF,UAAW,SAC5C+uB,EAeM,yBAAK9xB,UAAU,4CACX,yBAAKA,UAAU,mDACX,0BAAMoI,KAAK,MAAMC,aAAW,iBAA5B,iBAIJ,yBAAKrI,UAAU,mDAAf,0BA1GU,WAE1B,IAAImyB,EAASZ,EAAea,MAAK,SAAC5sB,EAAGwX,GAAJ,OAAUxX,EAAE2B,MAAQ6V,EAAE7V,SAEvD,OADAgrB,EAASA,EAAO7xB,OAAS,EAAI6xB,EAAO5yB,MAAM,EAAG,GAAK4yB,EAoF1CE,GAAwBnpB,KAAI,SAACopB,GAAD,OACxB,yBAAKvrB,IAAKurB,EAASp0B,KAAKkC,GAAIJ,UAAW+H,IACnC,MACA,wBACAjI,EAAQixB,wBACR,yBAAK/wB,UAAWF,EAAQmxB,mBAAoB3oB,MAAO,CAAC9E,OAAQ,WACxDyE,QAAS,kBAAoBqqB,EAASp0B,UAhG1Dq0B,MAAM,gBAiGet0B,EAAmBq0B,EAASp0B,OAEjC,kBAAC6zB,EAAD,CAAY3vB,MAAOkwB,EAASnrB,eCtO9C7I,GAAYC,aAAW,SAAC8D,GAAD,MAAY,CACrCsuB,iBAAkB,CACdnuB,SAAU,WACVS,WAAY,UACZyS,OAAQ,sBACRvS,aAAc,EACdgH,QAAS,GACTsL,aAAc,GACdlT,QAAS,OACTe,WAAY,SACZD,eAAgB,gBAChBgB,SAAU,QAEdusB,oBAAqB,CACjBruB,QAAS,OACTiT,cAAe,MACfnS,eAAgB,gBAChBkB,SAAU,GAEdssB,yBAA0B,CACtB/xB,WAAY,IAEZF,MAAO,UACP2F,SAAU,GAEdwsB,sBAAuB,CACnBvuB,SAAU,WACV4S,aAAc,oBACd4b,cAAe,EACf7P,WAAY,GAEhB8P,mBAAoB,CAChBryB,MAAO,UAEPmZ,aAAc,GACd2G,SAAU,SACVwS,aAAc,WACdlF,WAAY,UAEhBmF,sBAAuB,CACnB5uB,QAAS,OACTC,SAAU,WACVI,MAAO,GAEXwuB,2BAA4B,CACxBxyB,MAAO,UACPM,SAAU,GACVJ,WAAY,KAEhB0zB,iBAAkB,CACdjwB,QAAS,OACT8B,SAAU,QAEdouB,eAAgB,CACZ1zB,MAAO,GACPE,OAAQ,GACRwY,YAAa,OA2ENib,OAvEf,WAAsB,IACV7xB,EAAUJ,IAAM8E,WAAW/E,GAA3BK,MACFf,EAAUxB,KAFC,EAIiBsC,mBAAS,IAJ1B,mBAIV+xB,EAJU,KAICC,EAJD,KAMjBvxB,qBAAU,WACNQ,IAAMD,IAAI,+CAAgD,CACtD6D,QAAS,CACL,eAAgB,mBAChB,8BAA+B,IAC/B,cAAiB5E,KAEtBkB,MAAK,SAACC,GACL4wB,EAAa5wB,EAAIC,KAAKA,KAAK4wB,iBAEhC,CAAChyB,IAEJ,IAAMiyB,EAAY,SAACn0B,GACf,IAAMo0B,EAAW5Q,GAAsBxjB,EAAMud,MACvC8W,EAAW1Q,GAAiByQ,GAAU,GAC5C,OACE,yBAAK/yB,UAAWF,EAAQ0yB,kBACtB,yBAAKtyB,IAAK8yB,EAAUte,IAAKqe,EAASzS,YAAatgB,UAAWF,EAAQ2yB,iBAClE,yBAAKzyB,UAAWF,EAAQmxB,oBAAqB8B,EAASzS,eAK9D,OACI,yBAAKtgB,UAAWF,EAAQ6wB,kBACpB,yBAAK3wB,UAAWF,EAAQ8wB,qBACpB,yBAAK5wB,UAAWF,EAAQ+wB,0BAAxB,gDAIJ,yBAAK7wB,UAAU,YAAYsI,MAAO,CAACvF,UAAW,SAC1C,6BAES4vB,GAAaA,EAAUryB,OAAS,EAC7BqyB,EAAUzpB,KAAI,SAACmZ,GAAD,OACV,yBAAKtb,IAAKsb,EAAMnG,KAAMlc,UAAW+H,IAC7B,MACA,wBACAjI,EAAQixB,wBACJ,kBAAC+B,EAAD,CAAW5W,KAAMmG,EAAMnG,OACvB,yBAAKlc,UAAW+H,IAAWjI,EAAQqxB,sBAAuBrxB,EAAQsxB,6BAC7D/O,EAAMlb,WAMvB,yBAAKnH,UAAU,4CACX,yBAAKA,UAAU,mDACX,0BAAMoI,KAAK,MAAMC,aAAW,iBAA5B,iBAIJ,yBAAKrI,UAAU,mDAAf,2BCnH1B1B,GAAYC,aAAW,SAAC8D,GAAD,MAAY,CACrC4wB,kBAAmB,CACfzwB,SAAU,QACVyH,IAAK,GACLrH,MAAO,EACPE,UAAW,OACXD,UAAW,0BAmCJqwB,OA/Bf,WACI,IAAMpzB,EAAUxB,KADH,EAEmCsC,mBAAS,GAF5C,mBAENuyB,EAFM,KAEYC,EAFZ,KAKPC,EAAoB,SAAC/pB,GACvB8pB,EAAoB9pB,IAGxB,OACI,kBAACgqB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKvzB,UAAU,2CACX,kBAACwzB,EAAA,EAAD,CAAKniB,GAAI,EAAGF,GAAI,EAAGD,GAAI,EAAG5I,MAAO,CAAC6B,QAAS,QACvC,kBAAC,GAAD,CACIof,iBAAkB8J,IAEtB,kBAAC,GAAD,OAEJ,kBAACG,EAAA,EAAD,CAAKniB,GAAI,EAAGF,GAAI,EAAGD,GAAI,EAAG5I,MAAO,CAAC6B,QAAS,UAAWnK,UAAWF,EAAQmzB,mBACrE,kBAACQ,GAAD,CACIjN,WAAY2M,EACZjI,eAAgBmI,IAEpB,kBAAC,GAAD,MACmB,kBAAC,GAAD,UC3BxBK,OAbf,WACE,OACE,oCAEI,0BAAM1zB,UAAU,gBACZ,iCACI,kBAAC,GAAD,UCCIwoB,QACW,cAA7BjnB,OAAOC,SAASmyB,UAEe,UAA7BpyB,OAAOC,SAASmyB,UAEhBpyB,OAAOC,SAASmyB,SAASrc,MACvB,2D,6CCHAjV,GAAQuxB,KAAe,CAC3B7vB,QAAS,CACPkH,QAAS,CACPhH,KAAM,WAERiH,UAAW,CACTjH,KAAM,WAERD,KAAM,CACJC,KAAM,QAGVtF,MAAO,CACLk1B,eAAgB,CACdC,mBAAmB,GAErBC,cAAe,CACbpO,eAAe,IAGnBqO,UAAW,CACTC,eAAgB,CACd,UAAW,CACT9d,OAAQ,CACN,UAAW,CACTR,QAAS,oBAGb6K,KAAM,CACJ3hB,gBAAiB,aAIvBq1B,cAAe,CACb5xB,KAAM,CACJ,UAAW,CACTqT,QAAS,mBAEXxL,QAAS,IAGbgqB,aAAc,CAEZ7xB,KAAM,CAEJ1D,MAAO,oBAGXw1B,SAAU,CACR9xB,KAAM,CACJpD,SAAU,QAEZ4J,UAAW,CACT,UAAW,CACTsM,aAAc,oBACdrD,WAAY,gDAEd,WAAY,CACVqD,aAAc,gCAEhB,iBAAkB,CAChBA,aAAc,6CAIpBif,UAAW,CACT/xB,KAAM,CACJY,UAAW,OACX,UAAW,CACPyS,QAAS,SAGfjD,iBAAkB,CAChBxP,UAAW,OACXtE,MAAO,OACPqnB,SAAU,GACVpnB,gBAAiB,UACjB,UAAW,CACTD,MAAO,OACPC,gBAAiB,UACjBqE,UAAW,QAEb,UAAW,CACPrE,gBAAiB,YAGvB+T,mBAAoB,CAClB1P,UAAW,OACXtE,MAAO,OACP,UAAW,CACTA,MAAO,UAIbi1B,eAAgB,CACdvxB,KAAM,CACJ1D,MAAO,OACPM,SAAU,GACVJ,WAAY,OAIlB0R,WAAY,CACVC,gBA5GU,IA6GVC,kBA5GY,IA6GZE,mBA5Ga,IA6GbC,eA5GS,IA6GT3R,SAAU,GACVo1B,aAAc,GACdxjB,WAAY,CAAC,gBAAiB,cAAcC,KAAK,QAIrDwjB,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,KAAD,CAAkBpyB,MAAOA,IACrB,kBAACqyB,GAAA,EAAD,MACA,kBAAC,EAAD,KACI,kBAAC,GAAD,SAIZC,SAASC,eAAe,SDNtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhzB,MAAK,SAAAizB,GACJA,EAAaC,gBAEdC,OAAM,SAAAvhB,GACL2Z,QAAQ3Z,MAAMA,EAAMoV,c","file":"static/js/main.2ac362ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/closer_badge.543edc90.png\";","module.exports = __webpack_public_path__ + \"static/media/creativity_badge.51da00a7.png\";","module.exports = __webpack_public_path__ + \"static/media/culture_badge.d4ee91eb.png\";","module.exports = __webpack_public_path__ + \"static/media/detail_master_badge.299614d1.png\";","module.exports = __webpack_public_path__ + \"static/media/goal_smasher_badge.2ccd5746.png\";","module.exports = __webpack_public_path__ + \"static/media/idea_maker_badge.73420e58.png\";","module.exports = __webpack_public_path__ + \"static/media/initiative_badge.25ea3150.png\";","module.exports = __webpack_public_path__ + \"static/media/innovator_badge.f2cad379.png\";","module.exports = __webpack_public_path__ + \"static/media/launcher_badge.ca08a56a.png\";","module.exports = __webpack_public_path__ + \"static/media/leadership_badge.25ff00e8.png\";","module.exports = __webpack_public_path__ + \"static/media/lifesaver_badge.98e7f9ad.png\";","module.exports = __webpack_public_path__ + \"static/media/motivator_badge.19706b25.png\";","module.exports = __webpack_public_path__ + \"static/media/navigator_badge.739e52a5.png\";","module.exports = __webpack_public_path__ + \"static/media/obstacle_badge.18d58301.png\";","module.exports = __webpack_public_path__ + \"static/media/problem_solver_badge.4b93eeb6.png\";","module.exports = __webpack_public_path__ + \"static/media/teamwork_badge.1f291e2c.png\";","module.exports = __webpack_public_path__ + \"static/media/top_earner_badge.3a628322.png\";","import React from 'react';\r\nimport reactStringReplace from 'react-string-replace';\r\nimport { Emoji } from 'emoji-mart';\r\n// import _ from 'lodash';\r\n\r\nexport const CASHOUT_TITLE_TEXT_MAX_LENGTH = 35;\r\nexport const MENTION_REGEX = /@__(.*?)__@/;\r\n\r\nexport const getProfileFullName = (user) => {\r\n    if (user && user.profile) {\r\n        if (user.profile.first_name !== null && user.profile.last_name === null) {\r\n            return `${user.profile.first_name}`;\r\n        }\r\n\r\n        if (user.profile.last_name !== null && user.profile.first_name === null) {\r\n            return `${user.profile.last_name}`;\r\n        }\r\n\r\n        if (user.profile.last_name && user.profile.first_name ) {\r\n            return `${user.profile.first_name} ${user.profile.last_name}`;\r\n        }\r\n\r\n    }\r\n    return '';\r\n};\r\n\r\nexport const getFirstLetterOfName = (user) => {\r\n  if (user && user.profile && user.profile.first_name) {\r\n    return `${user.profile.first_name.slice(0, 1).toUpperCase()}`;\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const titleize = (input) => {\r\n  if (typeof input !== 'string') {\r\n\t\tthrow new TypeError('Expected a string');\r\n\t}\r\n\r\n\treturn input.toLowerCase().replace(/(?:^|\\s|-)\\S/g, x => x.toUpperCase());\r\n}\r\n\r\nexport const getPostFormattedMessage = (text, taggedUsers) => {\r\n    let replacedText = text;\r\n    \r\n    replacedText = reactStringReplace(replacedText, /#(\\w+)/g, (match, i) => (\r\n        <span key={match + i} className=\"feed-card-hashtag\">\r\n        #{match}\r\n        </span>\r\n    ));\r\n\r\n    replacedText = reactStringReplace(replacedText, /:(.*?):/g, (match, i) => (\r\n        <Emoji key={match + i} emoji={`:${match}:`} size={16} />\r\n    ));\r\n  \r\n    if (taggedUsers) {\r\n        if (taggedUsers.length > 0) {\r\n            replacedText = reactStringReplace(\r\n            replacedText,\r\n            MENTION_REGEX,\r\n            (match, i) => {\r\n                const filteredEmployeeArr = taggedUsers.filter((employee) => employee.id === match).map((employee) => {\r\n                // if (onUserClicked) {\r\n                //   return (\r\n                //     <span\r\n                //       key={match + i}\r\n                //       className={\r\n                //         employee.isDeleted\r\n                //           ? 'noEvent deactivated_user'\r\n                //           : 'feed-card-mention'\r\n                //       }\r\n                //       onClick={\r\n                //         !employee.isDeleted\r\n                //           ? () => {\r\n                //               onUserClicked(employee);\r\n                //             }\r\n                //           : null\r\n                //       }\r\n                //     >\r\n                //       {employee.isDeleted\r\n                //         ? 'Deactivated User'\r\n                //         : getProfileFullName(employee)}\r\n                //     </span>\r\n                //   );\r\n                // }\r\n                    return (\r\n                        <span key={match + i}>\r\n                            <b>\r\n                                {employee.isDeleted\r\n                                    ? 'Deactivated User'\r\n                                    : getProfileFullName(employee)\r\n                                }\r\n                            </b>\r\n                        </span>\r\n                    );\r\n                });\r\n                    return filteredEmployeeArr;\r\n                },\r\n            );\r\n        }\r\n    }\r\n    return replacedText;\r\n};","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getFirstLetterOfName } from './text';\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        margin: 10,\r\n    },\r\n\r\n    avatarColor: (props) => ({\r\n    color: props.color,\r\n    backgroundColor: props.backgroundColor,\r\n    fontWeight: '600',\r\n    width: props.size ? props.size : 40,\r\n    height: props.size ? props.size : 40,\r\n    fontSize: props.fontSize,\r\n    }),\r\n\r\n    avatarImage: (props) => ({\r\n    width: props.size ? props.size : 40,\r\n    height: props.size ? props.size : 40,\r\n    }),\r\n})\r\n\r\nconst UserNameAvatar = (props) => {\r\n    const { user, size } = props;\r\n    const firstLetter = user.isDeleted ? 'D' : getFirstLetterOfName(user);\r\n    const colorProp = user.isDeleted ? { bg: '#FFF0A2', color: '#FFE145' } : getColor(user);\r\n    let fontSize = 18;\r\n\r\n    if (size === 30 || size === 32) {\r\n      fontSize = 14;\r\n    } else if (size === 88) {\r\n      fontSize = 36;\r\n    }\r\n\r\n    const styleProps = {\r\n      backgroundColor: colorProp.bg,\r\n      color: colorProp.color,\r\n      size,\r\n      fontSize,\r\n    };\r\n\r\n    const classes = useStyles(styleProps);\r\n  \r\n    return <Avatar className={classes.avatarColor}>{firstLetter}</Avatar>;\r\n};\r\n\r\nexport const ProfilePic = (props) =>  {\r\n    const { user, size } = props;\r\n    const classes = useStyles({ size });\r\n    // if (user &&\r\n    //     user.profile &&\r\n    //     user.profile.image &&\r\n    //     user.profile.image.original.relativeUrl) {\r\n    //         return (\r\n    //             <Avatar src={user.profile.image.original.relativeUrl} className={classes.avatarImage} />\r\n    //         )\r\n    // }\r\n    \r\n    if (user &&\r\n        user.profile &&\r\n        user.profile.avatar) {\r\n            return (\r\n                <Avatar src={user.profile.avatar} className={classes.avatarImage} />\r\n            )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <UserNameAvatar user={user} size={size} />\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport const getColor = (user) => {\r\n    let lastChar = 'p';\r\n    if (user && user.id) {\r\n        lastChar = user.id.substr(user.id.length - 1);\r\n    }\r\n    const charCode = lastChar.charCodeAt(0);\r\n    let bg = '#FFBBA2';\r\n    let color = '#FF7745';\r\n    switch (charCode) {\r\n        case 97:\r\n        case 113:\r\n        case 103:\r\n        case 119:\r\n        case 49:\r\n        case 111:\r\n        bg = '#FFBBA2';\r\n        color = '#FF7745';\r\n        break;\r\n        case 98:\r\n        case 114:\r\n        case 104:\r\n        case 120:\r\n        case 50:\r\n        case 57:\r\n        bg = '#E6D3FD';\r\n        color = '#CDA7FC';\r\n        break;\r\n        case 99:\r\n        case 115:\r\n        case 106:\r\n        case 122:\r\n        case 52:\r\n        case 112:\r\n        bg = '#A6F8AD';\r\n        color = '#4DF15A';\r\n        break;\r\n        case 100:\r\n        case 116:\r\n        case 105:\r\n        case 121:\r\n        case 51:\r\n        case 108:\r\n        bg = '#FFF0A2';\r\n        color = '#FFE145';\r\n        break;\r\n        case 101:\r\n        case 117:\r\n        case 107:\r\n        case 53:\r\n        case 110:\r\n        case 56:\r\n        case 54:\r\n        bg = '#FFA3C7';\r\n        color = '#FF478F';\r\n        break;\r\n        case 102:\r\n        case 118:\r\n        case 48:\r\n        case 109:\r\n        case 55:\r\n        bg = '#A2F5FF';\r\n        color = '#45EBFF';\r\n        break;\r\n        default:\r\n        bg = '#A2F5FF';\r\n        color = '#45EBFF';\r\n        break;\r\n    }\r\n    return {\r\n        bg,\r\n        color,\r\n    };\r\n}","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const StoreContext = React.createContext(null);\r\n\r\nexport default ({children}) => {\r\n    const [token, setToken] = useState('');\r\n    const [me, setMe] = useState('');\r\n    const [points_earned, setPointEarned] = useState();\r\n    const [remaining_point, setRemainingPoint] = useState();\r\n\r\n    useEffect(() => {\r\n        const queryString = window.location.search;\r\n\r\n        const urlParams = new URLSearchParams(queryString);\r\n\r\n        const emailLogin = urlParams.get('email')\r\n\r\n        axios.post(`https://camon.twgroup.vn/api/v1/auth/user?email=${emailLogin}`)\r\n        .then((res) =>{\r\n            setToken(res.data.data.token);\r\n            setMe(res.data.data.user.id);\r\n            setPointEarned(res.data.data.user.points_earned);\r\n            setRemainingPoint(res.data.data.user.remaining_point);\r\n        })\r\n    },[])\r\n\r\n    const store = {\r\n        token,\r\n        me,\r\n        points_earned,\r\n        remaining_point,\r\n        setRemainingPoint\r\n    }\r\n\r\n    return (\r\n        <StoreContext.Provider value={store}>\r\n            {token ? children : null}\r\n        </StoreContext.Provider>\r\n    )\r\n}\r\n","import React, { useState, useEffect} from 'react';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport { getProfileFullName } from '../../assets/Util/text';\r\nimport { ProfilePic } from '../../assets/Util/profilePic';\r\nimport keycode from 'keycode';\r\nimport Downshift from 'downshift';\r\nimport axios from 'axios';\r\nimport { StoreContext } from '../../store/StoreContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        position: 'relative',\r\n        zIndex: 3\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        left: 0,\r\n        right: 0,\r\n        maxHeight: '260px',\r\n        overflowY: 'auto',\r\n        marginTop: 45,\r\n        marginLeft: 48,\r\n        background: '#FFFFFF',\r\n        boxShadow:\r\n          '0px 2px 2px rgba(0, 0, 0, 0.24), 0px 0px 2px rgba(0, 0, 0, 0.12)',\r\n        borderRadius: 2,\r\n    },\r\n    iconWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '50px',\r\n        height: '31px'\r\n    },\r\n    iconStyle: {\r\n        fontSize: '16px',\r\n        cursor: 'pointer'\r\n    },\r\n    // iconActiveStyle: {\r\n    //     color: 'red',\r\n    //     filter: 'grayscale(0)'\r\n    // },\r\n    iconInactiveStyle: {\r\n        color: '#9e9e9e',\r\n        filter: 'grayscale(1)'\r\n    },\r\n    chip: {\r\n        margin: '4px 2px'\r\n    },\r\n    chipAvatar: {\r\n        height: '22px !important',\r\n        width: '22px !important',\r\n        marginLeft: 5,\r\n        // marginTop: 5,\r\n    },\r\n    chipRoot: {\r\n        backgroundColor: '#F6F6F6',\r\n    },\r\n    chipLabel: {\r\n        color: theme.palette.text.main,\r\n        fontWeight: 600,\r\n        fontSize: 12,\r\n        paddingLeft: 8,\r\n    },\r\n    chipDeleteIcon: {\r\n        color: '#E2E2E2',\r\n    },\r\n    inputRoot: {\r\n        flexWrap: 'wrap',\r\n    },\r\n    inputStyle: {\r\n        width: 'auto !important',\r\n        flexGrow: 1,\r\n        // marginTop : 12,\r\n        // marginBottom : 7,\r\n    },\r\n    // underline: {\r\n    //     '&:after': {\r\n    //       borderBottom: `2px solid ${theme.palette.primary.main}`,\r\n    //       transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\r\n    //     },\r\n    //     '&:before': {\r\n    //       borderBottom: '1px solid rgb(224, 224, 224)',\r\n    //     },\r\n    //     // '&:hover:not($disabled):after': {\r\n    //     //   borderBottom: '1px solid rgb(224, 224, 224) !important',\r\n    //     // },\r\n    //     '&:hover:before': {\r\n    //       // '&:hover:not($disabled):before':\r\n    //       borderBottom: '1px solid rgb(224, 224, 224) !important',\r\n    //     },\r\n    // },\r\n    menuSelected: {\r\n        backgroundColor: '#F8F8F8 !important',\r\n    },\r\n    autocomplete_user_fullname: {\r\n        paddingLeft: 8,\r\n        fontSize: 12,\r\n        color: '#2C2C2C',\r\n        fontWeight: 600,\r\n        letterSpacing: 0.2\r\n    },\r\n    autocomplete_user_username_focus: {\r\n        fontSize: 15,\r\n        color: '#e2e2e2'\r\n    },\r\n    autocomplete_user_username: {\r\n        fontSize: 15,\r\n        color: '#e2e2e2'\r\n    }\r\n}))\r\n\r\nfunction DSTypeAhead(props) {\r\n    const { handleUsers, onFocus, selectedItem, userInputIconOn, onUserInputIconOn } = props;\r\n    const [ inputValue, setInputValue ] = useState('');\r\n    //const [ userInputIconOn, setUserInputIconOn ] = useState(false);\r\n\r\n    const [ employees, setEmployees] = useState();\r\n    const { token } = React.useContext(StoreContext);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        async function fetchEmployees() {\r\n            const res = await axios.get('https://camon.twgroup.vn/api/v1/home', {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            setEmployees(res.data.data.employees);\r\n            \r\n        }\r\n        fetchEmployees()\r\n    }, [token])\r\n    \r\n    const renderInput = (inputProps) => {\r\n        const { InputProps, classes, ref, ...other } = inputProps;\r\n        return (\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            InputProps={{\r\n                inputRef: ref,\r\n                classes: {\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputStyle,\r\n                    underline: classes.underline,\r\n                },\r\n                ...InputProps,\r\n                // inputProps: {\r\n                //   className: classes.inputStyle\r\n                // },\r\n            }}\r\n            {...other}\r\n          />\r\n        );\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        if (inputValue && inputValue.length > 3) {\r\n          //this.debounceGetHomeInfo(); lodash\r\n        }\r\n        setInputValue(inputValue)\r\n    };\r\n\r\n    const handleChange = (item) => {\r\n        if (!item) {\r\n          setInputValue('');\r\n          return;\r\n        }\r\n    \r\n        if (selectedItem.indexOf(item) === -1) {//not found\r\n            let postSelectedItem = [...selectedItem, item];\r\n            setInputValue('');\r\n            handleUsers(postSelectedItem);\r\n        }\r\n    };\r\n\r\n    const handleDelete = (item) => () => {\r\n        const postSelectedItem = [...selectedItem];\r\n        postSelectedItem.splice(selectedItem.indexOf(item), 1);\r\n        handleUsers(postSelectedItem);\r\n        handleUserInputIconStyleOff(postSelectedItem);\r\n    };\r\n\r\n    const onUserInputFocus = () => {\r\n        onUserInputIconOn(true);\r\n        onFocus();\r\n    }\r\n\r\n    const onUserInputBlur = () => {\r\n        handleUserInputIconStyleOff(selectedItem);\r\n    };\r\n\r\n    const handleUserInputIconStyleOff = (selectedUsers) => {\r\n        if( selectedUsers.length === 0 ) {\r\n            onUserInputIconOn(false);\r\n        }\r\n    }\r\n\r\n    const handleKeyDown = (e) => {\r\n        if ( selectedItem.length && !inputValue.length && keycode(e) === 'backspace' ) {\r\n            const postSelectedItem = selectedItem.slice(0, selectedItem.length - 1);\r\n            handleUsers(postSelectedItem)\r\n        }\r\n    };\r\n\r\n    const renderOptions = (inputValue, getItemProps, highlightedIndex) => {\r\n        const users = findUsers(inputValue);\r\n        return users.map(\r\n            (user, index) => renderOption({\r\n                user,\r\n                index,\r\n                itemProps: getItemProps({item: user.id}),\r\n                highlightedIndex,\r\n                disabled: false\r\n            })\r\n        )\r\n    }\r\n\r\n    const renderOption = ({ user, index, itemProps, highlightedIndex, disabled }) => {\r\n        const isHighlighted = highlightedIndex === index;\r\n        return (\r\n            <MenuItem\r\n                {...itemProps}\r\n                disabled={disabled}\r\n                key={user.id}\r\n                selected={isHighlighted}\r\n                classes={\r\n                    { selected: classes.menuSelected}\r\n                }\r\n            >\r\n                <ProfilePic size={30} user={user} />\r\n                <span className={classes.autocomplete_user_fullname}>\r\n                    {getProfileFullName(user)}\r\n                </span>\r\n                <span className={isHighlighted ? classes.autocomplete_user_username_focus\r\n                    : classes.autocomplete_user_username }\r\n                >\r\n                    { user.profile.user_name ? `@${user.profile.user_name}` : `@${user.profile.first_name}`}\r\n                </span>\r\n            </MenuItem>\r\n        )\r\n    }\r\n\r\n    const findUsers = (inputValue) => {\r\n        let count = 0;\r\n        return employees.filter((user) => {\r\n            \r\n            const firstName = user.profile.first_name || '';\r\n            // const lastName = user.profile.last_name || '';\r\n            // const userName = user.profile.user_name || '';\r\n            const email = user.email || '';\r\n            let keep = (\r\n                !inputValue ||\r\n                firstName.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1 ||\r\n                email.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1\r\n            ) && (count < 20);\r\n            if (selectedItem.indexOf(user.id) !== -1) {\r\n                keep = false;\r\n            }\r\n            if (keep) {\r\n                count += 1;\r\n            }\r\n            return keep;\r\n        })\r\n    }\r\n    return (\r\n        <Downshift\r\n            inputValue={inputValue}\r\n            onChange={handleChange}\r\n            selectedItem={selectedItem}\r\n        >\r\n            {\r\n                (\r\n                    {\r\n                        getInputProps,\r\n                        getItemProps,\r\n                        isOpen,\r\n                        inputValue: inputValue2,\r\n                        //selectedItem: selectedItem2,\r\n                        highlightedIndex,\r\n                        openMenu,\r\n                        closeMenu\r\n                    }\r\n                ) => (\r\n                    <div className={classes.root}>\r\n                        <div className={classes.iconWrapper}>\r\n                            <div className={classNames(\r\n                                classes.iconStyle,\r\n                                userInputIconOn ? classes.iconActiveStyle : classes.iconInactiveStyle\r\n                            )}\r\n                                onClick={() => {\r\n                                    this.inputRef.focus();\r\n                                }}\r\n                            >\r\n                                <span role=\"img\" aria-label=\"icon\">\r\n                                    😎\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ width: '100%' }}>\r\n                            {\r\n                                renderInput({\r\n                                    fullWidth: true,\r\n                                    classes,\r\n                                    ref: (inputRef) => {\r\n                                        return inputRef\r\n                                    },\r\n                                    InputProps: getInputProps({\r\n                                        startAdornment: selectedItem.map((item) => { //selectedItem state\r\n                                            const user = employees.find((u) => u.id === item); //employee props\r\n                                            if (user) {\r\n                                                return (\r\n                                                    <Chip\r\n                                                        avatar = {\r\n                                                            <ProfilePic size={32} user={user} />\r\n                                                        }\r\n                                                        key={item}\r\n                                                        tabIndex={-1}\r\n                                                        label={getProfileFullName(user)}\r\n                                                        className={classes.chip}\r\n                                                        classes={{\r\n                                                            root: classes.chipRoot,\r\n                                                            avatar: classes.chipAvatar,\r\n                                                            label: classes.chipLabel,\r\n                                                            deleteIcon: classes.chipDeleteIcon,\r\n                                                        }}\r\n                                                        onDelete={handleDelete(item)}\r\n                                                    />\r\n                                                )\r\n                                            }\r\n                                            return null;\r\n                                        }),\r\n                                        onChange: handleInputChange,\r\n                                        onKeyDown: handleKeyDown,\r\n                                        placeholder: 'Người được nhận',\r\n                                        id: 'integration-downshift-multiple',\r\n                                        onFocus: (event) => {\r\n                                            openMenu();\r\n                                            onUserInputFocus();\r\n                                        },\r\n                                        onBlur: (event) => {\r\n                                            closeMenu();\r\n                                            onUserInputBlur();\r\n                                        }\r\n                                    })\r\n                                })\r\n                            }\r\n                        </div>\r\n                        {\r\n                            isOpen ? (\r\n                                <Paper className={classes.paper} square>\r\n                                    {\r\n                                        renderOptions(\r\n                                            inputValue2,\r\n                                            getItemProps,\r\n                                            highlightedIndex\r\n                                        )\r\n                                    }\r\n                                </Paper>\r\n                            ) : null\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        </Downshift>\r\n\r\n    )\r\n}\r\n\r\nexport default DSTypeAhead","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        position: 'absolute',\r\n        width: 520,\r\n        padding: 54,\r\n        [theme.breakpoints.down('xs')]: {\r\n          width: 350,\r\n          padding: '20px 22px',\r\n        },\r\n        background: '#FFFFFF',\r\n        border: '1px solid #F6F6F6',\r\n        boxSizing: 'border-box',\r\n        borderRadius: 10,\r\n        outline: 'none',\r\n    },\r\n}))\r\n\r\nexport default function StyledModal(props) {\r\n    const classes = useStyles();\r\n  \r\n    return (\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={props.open}\r\n        onClose={props.handleClose}\r\n        BackdropProps={{\r\n          style: {\r\n            background: '#000000',\r\n            mixBlendMode: 'normal',\r\n            opacity: 0.8,\r\n          },\r\n        }}\r\n      >\r\n        <div className={props.customClass ? props.customClass : classes.paper}>\r\n          {props.children}\r\n        </div>\r\n      </Modal>\r\n    );\r\n}  \r\n\r\n","const LIGHT = 300;\r\nconst REGULAR = 400;\r\nconst MEDIUM = 500;\r\nconst SEMIBOLD = 600;\r\nconst BOLD = 700;\r\n\r\nexport default {\r\n    palette: {\r\n        primary: {\r\n          main: '#FF4400',\r\n        },\r\n        secondary: {\r\n          main: '#0AD71C',\r\n        },\r\n        /* Atomic Design Palette */\r\n        cyan1: '#E6FFFB',\r\n        cyan6: '#13C2C2',\r\n        cyan7: '#08979C',\r\n        gray1: '#FFFFFF',\r\n        gray2: '#FAFAFA',\r\n        gray3: '#F5F5F5',\r\n        gray4: '#E8E8E8',\r\n        gray5: '#D9D9D9',\r\n        gray6: '#BFBFBF',\r\n        gray7: '#8C8C8C',\r\n        gray8: '#595959',\r\n        gray9: '#262626',\r\n        gray10: '#000000',\r\n        athensGray: '#F7F7F9',\r\n        mischka: '#E1E1E9',\r\n        silver: '#C4C4C4',\r\n        dustRed6: '#F5222D',\r\n        dayBreakBlue2: '#BAE7FF',\r\n        volcano6: '#FA541C',\r\n        volcano7: '#D4380D',\r\n        sunriseYellow6: '#FADB14',\r\n        polarGreen6: '#52C41A',\r\n        polarGreen7: '#389E0D',\r\n        blue1: '#E6F7FF',\r\n        blue7: '#096DD9',\r\n        geekBlue1: '#F0F5FF',\r\n        geekBlue2: '#F0F2F5',\r\n        geekBlue3: '#ADC6FF',\r\n        geekBlue5: '#597EF7',\r\n        geekBlue6: '#2F54EB',\r\n        geekBlue7: '#1D39C4',\r\n        geekBlue8: '#10239E',\r\n        gold1: '#FFFBE6',\r\n        gold5: '#FFC53D',\r\n        gold6: '#FAAD14',\r\n        gold7: '#D48806',\r\n        purple1: '#F9F0FF',\r\n        purple7: '#531DAB',\r\n        /* Atomic Design Palette */\r\n    \r\n        darkText: '#2C2C2C', //  '#4d4d4f',\r\n        greenLight: '#44af69',\r\n        genoa: '#178062',\r\n        jetStream: '#B6D7CD',\r\n        lightGray1: '#E2E2E2', // '#CCCCCC'\r\n        lightGray2: '#E2E2E2',\r\n        lightGray3: '#CACACA',\r\n        lightGray4: '#D8D8D8',\r\n        lightGray5: '#D9D9D9',\r\n        lightGray6: '#BFBFBF',\r\n        drakGray2: '#888888',\r\n        darkGray3: '#9D9D9D',\r\n        darkGray7: '#8C8C8C',\r\n        fedora: '#727172',\r\n        darkGray9: '#262626',\r\n        alto: '#DDDDDD',\r\n        thunder: '#212021',\r\n        coffee: '#717274',\r\n        paleSlate: '#C1C0C1',\r\n        new: '#F7F7F9',\r\n        white: '#ffffff',\r\n        aqua: '#2292a4',\r\n        aqua2: '#08979C',\r\n        blue: '#00D0E8',\r\n        blue2: '#4a90e2',\r\n        green: '#09AC16',\r\n        green1: '#F6FFED',\r\n        green7: '#389E0D',\r\n        orange6: '#FA8C16',\r\n        brown: '#D46B08',\r\n        azalea: '#F6C2D2',\r\n        skyblue: '#00BBD1',\r\n        red: '#FF6060',\r\n        red1: '#FFF1F0',\r\n        red2: '#FC5A5A',\r\n        red6: '#F5222D',\r\n        ceriseRed: '#DE245C',\r\n        lightBlue: '#E7FCFF',\r\n        white2: '#F9F9F9',\r\n        white3: '#F6F6F6',\r\n        white4: '#E5E5E5',\r\n        yellow: '#E8C400',\r\n        yellow2: '#D4B106',\r\n        office365Logo: '#E64A19',\r\n        inherit: 'inherit',\r\n        action: {\r\n          hoverOpacity: 0.1,\r\n        },\r\n    },\r\n    typography: {\r\n        fontWeightLight: LIGHT,\r\n        fontWeightRegular: REGULAR,\r\n        fontWeightMedium: MEDIUM,\r\n        fontWeightSemibold: SEMIBOLD,\r\n        fontWeightBold: BOLD,\r\n        fontSize: 14,\r\n        fontFamily: ['\"Poppins\"', 'sans-serif'].join(','),\r\n        adminFontFamily: ['\"Roboto\"', 'sans-serif'].join(','),\r\n    },\r\n    breakPoints: {\r\n        lg: '1199.98px', // Large devices (desktops)\r\n        md: '991.98px', // Medium devices (tablets)\r\n        sm: '767.98px', // Small devices (landscape phones)\r\n        xs: '575.98px', // Extra small devices (portrait phones)\r\n    },\r\n    animations: {\r\n        AdminMain: {\r\n          prop: {\r\n            opacity: 0,\r\n            y: 20,\r\n          },\r\n          duration: 0.3,\r\n          stagger: 0.1,\r\n        },\r\n    },\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ThemeV2 from '../V2/theme';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    modalCloseButton: {\r\n        position: 'absolute',\r\n        top: 15,\r\n        right: 15,\r\n        cursor: 'pointer',\r\n        padding: '5px',\r\n        '& svg': {\r\n          '& path': {\r\n            fill: ThemeV2.palette.lightGray1,\r\n            transition: '0.3s ease',\r\n          },\r\n        },\r\n        '&:hover': {\r\n          '& svg': {\r\n            '& path': {\r\n              fill: ThemeV2.palette.darkGray3,\r\n            },\r\n          },\r\n        },\r\n    }\r\n}))\r\n\r\nfunction StyledCloseButton(props) {//props: classes,onClick\r\n    const classes = useStyles();\r\n    const { onClick, ...rest} = props;\r\n    return (\r\n        <div className={classes.modalCloseButton} onClick={onClick} {...rest}>\r\n          <svg\r\n            width=\"14\"\r\n            height=\"14\"\r\n            viewBox=\"0 0 14 14\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M13.3 0.709971C12.91 0.319971 12.28 0.319971 11.89 0.709971L6.99997 5.58997L2.10997 0.699971C1.71997 0.309971 1.08997 0.309971 0.699971 0.699971C0.309971 1.08997 0.309971 1.71997 0.699971 2.10997L5.58997 6.99997L0.699971 11.89C0.309971 12.28 0.309971 12.91 0.699971 13.3C1.08997 13.69 1.71997 13.69 2.10997 13.3L6.99997 8.40997L11.89 13.3C12.28 13.69 12.91 13.69 13.3 13.3C13.69 12.91 13.69 12.28 13.3 11.89L8.40997 6.99997L13.3 2.10997C13.68 1.72997 13.68 1.08997 13.3 0.709971Z\"\r\n              fill=\"#E2E2E2\"\r\n            />\r\n          </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledCloseButton","import Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { darken } from '@material-ui/core/styles/colorManipulator';\r\nimport themeV2 from './theme';\r\n\r\nconst StyledButton = withStyles({\r\n    contained: {\r\n        height: 44,\r\n        borderRadius: 10,\r\n        backgroundColor: themeV2.palette.greenLight,\r\n        color: themeV2.palette.white,\r\n        '&:$disabled': {\r\n            backgroundColor: `${themeV2.palette.drakGray2} !important`\r\n        },\r\n        '&:hover': {\r\n            textDecoration: 'none',\r\n            color: themeV2.palette.white,\r\n            backgroundColor: themeV2.palette.green,\r\n            // Reset on touch devices, it doesn't add specificity\r\n            '@media (hover: none)': {\r\n                backgroundColor: 'transparent',\r\n            },\r\n            boxShadow: 'none !important',\r\n        }   \r\n    },\r\n    containedPrimary: {\r\n        backgroundColor: themeV2.palette.primary.main,\r\n        color: themeV2.palette.white,\r\n        '&:hover': {\r\n          backgroundColor: darken(themeV2.palette.primary.main, 0.3),\r\n          // Reset on touch devices, it doesn't add specificity\r\n          '@media (hover: none)': {\r\n            backgroundColor: darken(themeV2.palette.primary.main, 0.3),\r\n          },\r\n        },\r\n        boxShadow: 'none !important',\r\n    },\r\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\r\n    containedSecondary: {\r\n        backgroundColor: themeV2.palette.secondary.main,\r\n        color: themeV2.palette.white,\r\n        '&:hover': {\r\n        color: `${themeV2.palette.white} !important`,\r\n        backgroundColor: darken(themeV2.palette.secondary.main, 0.3),\r\n            // Reset on touch devices, it doesn't add specificity\r\n            '@media (hover: none)': {\r\n                backgroundColor: darken(themeV2.palette.secondary.main, 0.3),\r\n            },\r\n        },\r\n        boxShadow: 'none !important',\r\n    },\r\n    label: {\r\n        textTransform: 'none',\r\n        fontFamily: themeV2.typography.fontFamily,\r\n        fontSize: 14,\r\n        fontWeight: themeV2.typography.fontWeightMedium,\r\n        fontStyle: 'normal',\r\n        fontStretch: 'normal',\r\n        lineHeight: 'normal',\r\n        letterSpacing: 'normal',\r\n        textAlign: 'center',\r\n    }\r\n})(Button)\r\n\r\nexport default StyledButton","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport classNames from 'classnames';\r\nimport themeV2 from './theme';\r\n\r\nconst styles = {\r\n  root: {\r\n    fontFamily: themeV2.typography.fontFamily,\r\n    color: themeV2.palette.darkText,\r\n  },\r\n  adminRoot: {\r\n    fontFamily: themeV2.typography.adminFontFamily,\r\n    color: themeV2.palette.darkText,\r\n  },\r\n};\r\n\r\nfunction getFontWeight(weight) {\r\n  switch (weight) {\r\n    case 'bold':\r\n      return themeV2.typography.fontWeightBold;\r\n    case 'medium':\r\n      return themeV2.typography.fontWeightMedium;\r\n    case 'semiBold':\r\n      return themeV2.typography.fontWeightSemibold;\r\n    default:\r\n      return themeV2.typography.fontWeightRegular;\r\n  }\r\n}\r\n\r\nfunction CustomTypography(props) {\r\n  const { classes, children, weight, style, className, ...rest } = props;\r\n  // const bull = <span className={classes.bullet}>•</span>;\r\n  return (\r\n    <Typography\r\n      className={classNames(classes.root, className)}\r\n      style={{ ...style, fontWeight: getFontWeight(weight) }}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction AdminTypographyComponent(props) {\r\n  const { classes, children, weight, style, className, ...rest } = props;\r\n  // const bull = <span className={classes.bullet}>•</span>;\r\n  return (\r\n    <Typography\r\n      className={classNames(classes.adminRoot, className)}\r\n      style={{ ...style, fontWeight: getFontWeight(weight) }}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n}\r\nexport const AdminTypography = withStyles(styles)(AdminTypographyComponent);\r\n\r\nCustomTypography.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  weight: PropTypes.string,\r\n  style: PropTypes.object,\r\n};\r\n\r\nCustomTypography.defaultProps = {\r\n  weight: 'Regular',\r\n  style: {},\r\n};\r\n\r\nexport default withStyles(styles)(CustomTypography);\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport ThemeV2 from './theme';\r\n\r\nconst styles = () => ({\r\n    root: {\r\n      fontFamily: ThemeV2.typography.fontFamily,\r\n      fontWeight: ThemeV2.typography.fontWeightMedium,\r\n      color: ThemeV2.palette.darkGray3,\r\n      lineHeight: '15px',\r\n      fontSize: '11px',\r\n      '&.disabled': {\r\n        opacity: '0.24',\r\n        userSelect: 'none',\r\n      },\r\n      '&.error': {\r\n        color: ThemeV2.palette.red2,\r\n      },\r\n    },\r\n});\r\nfunction HelperText(props) {\r\n    const { classes, text, disabled, error, children, ...rest } = props;\r\n    return (\r\n        <FormHelperText\r\n          className={classnames(\r\n            classes.root,\r\n            disabled ? 'disabled' : '',\r\n            error ? 'error' : '',\r\n          )}\r\n          {...rest}\r\n        >\r\n          {children}\r\n        </FormHelperText>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(HelperText);","import React from 'react';\r\nimport _ from 'lodash';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nfunction CarrotIcon(props) {\r\n  // style={{ fontSize: 73 }}\r\n  const { active, onClick, size, url, currency } = props;\r\n  if (url) {\r\n    const blendMode = active ? 'normal' : 'luminosity';\r\n    if (url.type === 'emoji') {\r\n      const emojiType = _.get(url, ['value', 'type'], 'REGULAR');\r\n      if (emojiType === 'REGULAR') {\r\n        return (\r\n          <span\r\n            className={props.className}\r\n            style={{\r\n              fontSize: size ? `${size}px` : '20px',\r\n              mixBlendMode: blendMode,\r\n              ...props.style,\r\n            }}\r\n            role=\"img\"\r\n            aria-label=\"custom-icon\"\r\n          >\r\n            {String.fromCodePoint(parseInt(url.value.hexCode, 16))}\r\n          </span>\r\n        );\r\n      }\r\n      if (emojiType === 'CUSTOM') {\r\n        return (\r\n          <img\r\n            src={url.value.url}\r\n            alt={currency}\r\n            className={props.className}\r\n            style={{\r\n              width: size ? `${size}px` : '20px',\r\n              mixBlendMode: blendMode,\r\n              ...props.style,\r\n            }}\r\n          />\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <img\r\n        src={url.value}\r\n        alt={currency}\r\n        className={props.className}\r\n        style={{\r\n          width: size ? `${size}px` : '20px',\r\n          mixBlendMode: blendMode,\r\n          ...props.style,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SvgIcon\r\n      className={props.className}\r\n      style={props.style || { fontSize: size ? size : '24' }}\r\n      viewBox=\"0 0 20 20\"\r\n      onClick={onClick}\r\n    >\r\n      <title>Gold</title>\r\n      <desc>Icon for gold</desc>\r\n      <g id=\"Logo\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n        <g id=\"coin-copy-2\">\r\n          <circle\r\n            id=\"Oval\"\r\n            fill={active ? '#FFCF40' : '#C0C0C0'}\r\n            fillRule=\"nonzero\"\r\n            cx=\"10\"\r\n            cy=\"10\"\r\n            r=\"10\"\r\n          />\r\n          <path\r\n            d=\"M5.55578364,15.4442164 C3.98747343,14.1698866 3,12.2196023 3,10 C3,6.07999038 6.07999038,3 10,3 C12.2196023,3 14.1698866,3.98747343 15.4442164,5.55578364 C14.2427551,4.57953682 12.7004073,4 11,4 C7.07999038,4 4,7.07999038 4,11 C4,12.7004073 4.57953682,14.2427551 5.55578364,15.4442164 Z\"\r\n            id=\"Combined-Shape\"\r\n            fill={active ? '#FFBF00' : '#9E9E9E'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M10,0 C4.4285802,0 0,4.4285802 0,10 C0,15.5714198 4.4285802,20 10,20 C15.5714198,20 20,15.5714198 20,10 C20,4.4285802 15.5714198,0 10,0 Z M10,17 C6.07999038,17 3,13.9200096 3,10 C3,6.07999038 6.07999038,3 10,3 C13.9200096,3 17,6.07999038 17,10 C17,13.9200096 13.9200096,17 10,17 Z\"\r\n            id=\"Shape\"\r\n            fill={active ? '#FFDB70' : '#CDCDCD'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M10,19.9966916 L10,19.9966916 C15.5714198,20.1416163 20,15.5053955 20,10 L19.857099,10 C19.1428396,10 18.5713584,10.5795743 18.4285802,11.3039488 C18.142901,13.332272 17.1428396,15.2156706 15.7143208,16.5196193 C14.5714812,17.6786434 13.0000614,18.4030179 11.2857406,18.6928673 C10.5714812,18.6927428 10,19.2721926 10,19.9966916 Z\"\r\n            id=\"Path\"\r\n            fill={active ? '#FFBF00' : '#9E9E9E'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M10,0.00330843364 L10,0.00330843364 C4.4285802,-0.141616265 0,4.49460453 0,10 L0.142900988,10 C0.857160395,10 1.42864158,9.42042571 1.5714198,8.69605123 C1.85709901,6.66772798 2.8571604,4.78432942 4.28567921,3.48038065 C5.42851881,2.32135658 6.99993862,1.5969821 8.71425941,1.3071327 C9.42864158,1.3072572 10,0.727682916 10,0.00330843364 Z\"\r\n            id=\"Path\"\r\n            fill={active ? '#FFD24F' : '#B1B1B1'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M14.2239024,14.4323171 C14.0819512,14.4323171 13.940122,14.4323171 13.7981707,14.2903659 C13.5143902,14.0065854 13.5143902,13.5808537 13.7981707,13.2970732 C14.6496341,12.4456098 15.0753659,11.1684146 15.0753659,10.0331707 C15.0753659,9.60743902 15.3591463,9.32365854 15.784878,9.32365854 C16.2106098,9.32365854 16.4943902,9.60743902 16.4943902,10.0331707 C16.4943902,11.5941463 15.9267073,13.155122 14.9334146,14.2903659 C14.6496341,14.4323171 14.3658537,14.4323171 14.2239024,14.4323171 Z\"\r\n            id=\"Path\"\r\n            fill={active ? '#FFD24F' : '#B1B1B1'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M8.5,7.5 C8.5,6.67157288 9.17157288,6 10,6 C10.8284271,6 11.5,6.67157288 11.5,7.5 L11.5,12.5 C11.5,13.3284271 10.8284271,14 10,14 C9.17157288,14 8.5,13.3284271 8.5,12.5 L8.5,7.5 Z\"\r\n            id=\"Combined-Shape\"\r\n            fill={active ? '#FFBF00' : '#9E9E9E'}\r\n          />\r\n        </g>\r\n      </g>\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nexport default CarrotIcon;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport themeV2 from './theme';\r\nimport classNames from 'classnames';\r\nimport HelperText from './HelpText';\r\nimport CarrotIcon from '../CarrotIcon';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textFieldWrapper: {\r\n      display: 'flex',\r\n      alignItems: 'start',\r\n    },\r\n    iconWrapper: {\r\n      height: '44px',\r\n      width: '44px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      background: '#F6F6F6',\r\n      borderTop: `1px solid ${themeV2.palette.lightGray1}`,\r\n      borderBottom: `1px solid ${themeV2.palette.lightGray1}`,\r\n      borderLeft: `1px solid ${themeV2.palette.lightGray1}`,\r\n      borderRadius: '3px 0 0 3px',\r\n      '&.invalid-value': {\r\n        borderTop: `1px solid ${themeV2.palette.red2}`,\r\n        borderBottom: `1px solid ${themeV2.palette.red2}`,\r\n        borderLeft: `1px solid ${themeV2.palette.red2}`,\r\n      },\r\n    },\r\n    helperText: {\r\n      marginTop: '4px',\r\n      marginLeft: -40,\r\n    },\r\n    inputWrapper: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      width: '100%',\r\n      marginBottom: '6px',\r\n      '& input': {\r\n        borderRadius: '0 3px 3px 0',\r\n        padding: '0px 14px',\r\n        height: 44,\r\n        border: `1px solid ${themeV2.palette.lightGray1}`,\r\n        fontFamily: themeV2.typography.fontFamily,\r\n        // fontSize: 16,\r\n        '&:focus': {\r\n          outline: '0',\r\n        },\r\n        '&.invalid-value': {\r\n          borderColor: themeV2.palette.red2,\r\n        },\r\n      },\r\n    },\r\n}));\r\n\r\nfunction CustomCarrotInputField(props) {\r\n\r\n    const errorClass = () => {\r\n        if (props.error) {\r\n          return 'invalid-value';\r\n        } else {\r\n          return '';\r\n        }\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const {...rest} = props;\r\n    // const {\r\n    //     id,\r\n    //     placeholder,\r\n    //     helperText,\r\n    //     inputProps,\r\n    //     error,\r\n    //     customCompanyIcon,\r\n    //     inputChar,\r\n    //     ...rest\r\n    //   } = props;\r\n    return (\r\n        <div className={classNames(classes.textFieldWrapper, errorClass())}>\r\n            <div className={classNames(classes.iconWrapper, errorClass())}>\r\n                {props.inputChar ?\r\n                    (\r\n                        props.inputChar\r\n                    ) : (\r\n                        <CarrotIcon active size='20' url= {props.customCompanyIcon} />\r\n                    )\r\n                }\r\n            </div>\r\n            <div className={classes.inputWrapper}>\r\n                <input \r\n                    id={props.id}\r\n                    className={classNames(classes.textField, errorClass())}\r\n                    autoComplete=\"off\"\r\n                    placeholder={props.placeholder}\r\n                    {...rest}\r\n                />\r\n                <HelperText\r\n                    error={props.error}\r\n                    style={{ marginLeft: -40 }}\r\n                >\r\n                    {props.error ? `🚨 ${props.helperText}` : `👉 ${props.helperText}`}\r\n                </HelperText>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomCarrotInputField","import React, { useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport StyledModal from '../V2/StyledModal';\r\nimport StyledCloseButton from '../V2/StyledCloseButton';\r\nimport StyledButton from '../V2/StyledButton';\r\nimport CustomTypography from '../V2/CustomTypography';\r\nimport CustomCarrotInputField from '../V2/CustomCarrotInputField';\r\nimport themeV2 from '../V2/theme';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    Modal: {\r\n        '& .MuiDialogContent-root': {\r\n          width: '500px',\r\n          padding: '44px 54px 24px 54px',\r\n        },\r\n    },\r\n    buttonHolder: {\r\n        marginTop: 30,\r\n        display: 'flex',\r\n    },\r\n    button: {\r\n        display: 'block',\r\n        borderRadius: 3,\r\n        width: '50%',\r\n    }\r\n}));\r\n\r\nfunction CustomImpactModal(props) {\r\n    \r\n    // const { classes, openModal, customCompanyIcon } = this.props;\r\n\r\n    const maxGivingAllowance = () => {\r\n        if (props.selectedUsers.length <= 1) {\r\n          return {\r\n            availablePoints: props.availablePointsToGive,\r\n          };\r\n        }\r\n\r\n        const maxPointsToGive = Math.floor(\r\n          props.availablePointsToGive / props.selectedUsers.length,\r\n        );\r\n\r\n        const maxPointsToGiveText = `${maxPointsToGive} each`;\r\n        return { availablePoints: maxPointsToGive, maxPointsToGiveText };\r\n    \r\n    }\r\n\r\n    const { availablePoints, maxPointsToGiveText } = maxGivingAllowance();\r\n\r\n    //const [impact, setImpact] = useState('');\r\n    const [carrots, setCarrots] = useState('');\r\n    const [invalidValue, setInvalidValue] = useState(false);\r\n    const [formtouched, setFormtouched] = useState(false);\r\n    //const [selectTouched, setSelectTouched] = useState(false);\r\n\r\n    const classes = useStyles();\r\n    \r\n    const onCarrotInputChange = (e) => {\r\n        const { value } = e.target;\r\n        const { availablePoints } = maxGivingAllowance();\r\n        if (!value || value.match(/^\\d{1,}$/)) {\r\n            const total = props.selectedUsers.length > 0 ? props.selectedUsers.reduce(\r\n                (sum, user) => sum + parseInt(value, 10),\r\n                    0,\r\n                )\r\n                : value;\r\n\r\n            const remaining = availablePoints - value;\r\n\r\n            let invalidValue = false;\r\n\r\n            if (total > 0) {\r\n              if (remaining < 0) {\r\n                invalidValue = true;\r\n              }\r\n            }\r\n\r\n            if (value !== '') {\r\n              setFormtouched(true)\r\n            }\r\n\r\n            else {\r\n              setFormtouched(false)\r\n            }\r\n            \r\n            setCarrots(value)\r\n            setInvalidValue(invalidValue);\r\n            // this.setState(() => ({\r\n            //   carrots: value,\r\n            //   invalidValue,\r\n            // }));\r\n            // this.props.handleCarrots(value);\r\n        }\r\n    }\r\n    const closeModal = () => {\r\n        // this.resetState();\r\n        // this.props.closeModal();\r\n        // this.setState({ selectTouched: false, formtouched: false });\r\n    }\r\n\r\n    const onConfirmClick = () => {\r\n        \r\n    }\r\n\r\n    return (\r\n        (\r\n            <StyledModal\r\n                className={classes.Modal}\r\n                open={props.openModal}\r\n                onClose={closeModal}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <StyledCloseButton onClick={closeModal} />\r\n                <CustomTypography variant=\"h5\" weight=\"bold\" gutterBottom>\r\n                    Give a custom amount.\r\n                </CustomTypography>\r\n                <CustomTypography variant=\"body2\" style={{ marginTop: 10 }} gutterBottom>\r\n                    Giving a custom amount still requires an impact selection. Select an impact and enter an amount.\r\n                </CustomTypography>\r\n                <div style={{ marginTop: '16px' }}>\r\n                    <CustomCarrotInputField \r\n                        placeholder=\"Enter custom amount...\"\r\n                        helperText={`You can give up to:  ${\r\n                          maxPointsToGiveText ? maxPointsToGiveText : availablePoints\r\n                        }`}\r\n                        error={invalidValue}\r\n                        onChange={onCarrotInputChange}\r\n                        value={carrots}\r\n                        customCompanyIcon={props.customCompanyIcon}\r\n                    />\r\n                </div>\r\n                <div className={classes.buttonHolder}>\r\n                    <StyledButton\r\n                        variant=\"contained\"\r\n                        style={{\r\n                            boxShadow: 'none',\r\n                            marginRight: 16,\r\n                            border: `1px solid ${themeV2.palette.lightGray1}`,\r\n                            backgroundColor: '#F6F6F6',\r\n                            color: themeV2.palette.darkGray3\r\n                        }}\r\n                        onClick={closeModal}\r\n                        className={classes.button}\r\n                    >\r\n                        Cancel\r\n                    </StyledButton>\r\n                    <StyledButton\r\n                        variant='contained'\r\n                        color='primary'\r\n                        className={classes.button}\r\n                        disabled={ !formtouched || invalidValue }\r\n                        onClick= {onConfirmClick}\r\n                    >\r\n                        Enter\r\n                    </StyledButton>\r\n                </div>\r\n            </StyledModal>\r\n        )\r\n    )\r\n}\r\n\r\nexport default CustomImpactModal","import React, { useState } from 'react';\r\nimport _ from 'lodash';\r\nimport ReactHoverObserver from 'react-hover-observer';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport themeV2 from '../V2/theme';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    nestedSelect: {\r\n      position: 'relative',\r\n      left: 25,\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      marginLeft: 'auto',\r\n      color: '#00BBD1',\r\n      fontWeight: themeV2.typography.fontWeightMedium,\r\n      '& .MuiSelect-selectMenu': {\r\n        marginLeft: '5px',\r\n        fontWeight: themeV2.typography.fontWeightMedium,\r\n      },\r\n      '& .MuiInput-underline:before,.MuiInput-underline:after,.MuiInput-underline:hover:before': {\r\n        borderBottom: 'none !important',\r\n      },\r\n      '& .MuiSelect-select:focus': {\r\n        background: 'transparent',\r\n      },\r\n    },\r\n    amountSelector: {\r\n      position: 'relative',\r\n      left: -65,\r\n      visibility: 'hidden',\r\n    },\r\n    CarrotIcon: {\r\n      opacity: '0.25',\r\n    },\r\n    CarrotIconHover: {\r\n      opacity: '1',\r\n    },\r\n    MenuItem: {\r\n      height: '46px',\r\n      display: 'flex',\r\n      padding: '0 0 0 16px',\r\n      cursor: 'pointer',\r\n      '&:hover': {\r\n        background: '#F8F8F8',\r\n        '& .MuiSvgIcon-root': {\r\n          opacity: 1,\r\n        },\r\n      },\r\n    },\r\n    listCarrotIconWrapper: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      height: '100%',\r\n      paddingRight: '18px',\r\n    },\r\n    menuDiv: {\r\n      display: 'flex',\r\n      flex: 1,\r\n      height: '100%',\r\n      alignItems: 'center',\r\n    },\r\n    innerDefaultValues: {\r\n      fontFamily: themeV2.typography.adminFontFamily,\r\n      fontSize: '16px',\r\n      fontWeight: themeV2.typography.fontWeightSemibold,\r\n      marginBottom: '0px',\r\n      opacity: '0.25',\r\n      marginRight: '5px',\r\n    },\r\n    innerDropdownStyle: {\r\n      maxHeight: '300px',\r\n    },\r\n}));\r\n\r\nfunction ImpactSelectorItem(props) {//props: impact,onValueChange,defaultValue,availablePointsToGive\r\n  // const {\r\n  //   classes,\r\n  //   option,\r\n  //   impact,\r\n  //   defaultValue,\r\n  //   onSubSelectToggle,\r\n  //   availablePointsToGive,\r\n  //   onValueChange,\r\n  //   canGivePoints,\r\n  //   customCompanyIcon,\r\n  //   customCurrency,\r\n  //   selectedUsers,\r\n  //   ...rest\r\n  // } = this.props;\r\n    let carrotAmount = props.defaultValue;\r\n    let innerSelectValues = _.range(0, Number(props.defaultValue) + 1);\r\n    \r\n    if(props.defaultValue > props.availablePointsToGive) {\r\n        carrotAmount = props.availablePointsToGive;\r\n        innerSelectValues = _.range(0, Number(props.availablePointsToGive) + 1);\r\n    }\r\n\r\n    const value = carrotAmount || 0;\r\n    // let customCurrencyDisp = props.customCurrency.NAME_TITLEIZED_PLURAL;\r\n    let customCurrencyDisp = 'Tim';\r\n\r\n    if (value === 1) {\r\n        // customCurrencyDisp = props.customCurrency.NAME_TITLEIZED;\r\n        customCurrencyDisp = 'Trophy';\r\n    }\r\n\r\n    let multipleUserText = '';\r\n\r\n    if (props.selectedUsers.length > 1) {\r\n        multipleUserText = 'mỗi người';\r\n    }\r\n\r\n    const onOptionSelect = () => {\r\n        let carrotAmount = props.defaultValue;\r\n\r\n        if (props.defaultValue > props.availablePointsToGive) {\r\n            carrotAmount = props.availablePointsToGive;\r\n        }\r\n\r\n        props.onValueChange(props.impact, carrotAmount);\r\n    }\r\n\r\n    const toggleSelect = () => {\r\n        props.onSubSelectToggle(!selectOpen);\r\n        setSelectOpen(!selectOpen)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        props.onValueChange(props.impact, e.target.value);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setSelectOpen(false);\r\n        props.onSubSelectToggle(false);\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setSelectOpen(true);\r\n        props.onSubSelectToggle(true);\r\n    }\r\n    \r\n    const [selectOpen, setSelectOpen] = useState(false);\r\n    const classes = useStyles();\r\n    const {...rest} = props;\r\n    return (\r\n        <div id='impact'>\r\n            <ReactHoverObserver>\r\n                {({isHovering}) => (\r\n                    <div\r\n                        className={classes.MenuItem}\r\n                        key={props.impact}\r\n                        value={props.impact}\r\n                        {...rest}\r\n                    >\r\n                        <div className={classes.menuDiv} id='select-item' onClick={onOptionSelect}>\r\n                            {props.option} Tặng {carrotAmount} {customCurrencyDisp} {multipleUserText}\r\n                        </div>\r\n                        {\r\n                            props.canGivePoint && (\r\n                                <div\r\n                                    className={classes.nestedSelect}\r\n                                    onClick={toggleSelect}\r\n                                >\r\n                                    {\r\n                                        isHovering === true ? (\r\n                                            <div id='select-custom-item'>\r\n                                                <EditIcon fontSize='inherit' style={{position: 'relative', top: '2px'}} />\r\n                                                &nbsp;Edit amount\r\n                                                <Select\r\n                                                    SelectDisplayProps = {{id: 'select-custom-item'}}\r\n                                                    onChange={handleChange}\r\n                                                    value={carrotAmount}\r\n                                                    open={selectOpen}\r\n                                                    onClose={handleClose}\r\n                                                    onOpen={handleOpen}\r\n                                                    className={classes.amountSelector}\r\n                                                    MenuProps={{ classes: {\r\n                                                        paper: classes.innerDropdownStyle\r\n                                                     }}}\r\n                                                >\r\n                                                    {\r\n                                                        innerSelectValues.map(innerSelectValue => (\r\n                                                            <MenuItem value={innerSelectValue}\r\n                                                                key={innerSelectValue}\r\n                                                            >\r\n                                                                {innerSelectValue}\r\n                                                            </MenuItem>\r\n                                                        ))\r\n                                                    }\r\n                                                </Select>\r\n                                            </div>\r\n                                        ) : (\r\n                                            ''\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                )}\r\n            </ReactHoverObserver>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImpactSelectorItem;","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport CustomImpactModal from './CustomImpactModal';\r\nimport themeV2 from '../V2/theme';\r\nimport CarrotIcon from '../CarrotIcon';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Select from '@material-ui/core/Select';\r\nimport Input from '@material-ui/core/Input';\r\nimport ImpactSelectorItem from './ImpactSelectorItem';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    formControl: {\r\n        width: '100%',\r\n    },\r\n    placeholderStyle: {\r\n        color: 'rgba(223,223,223)',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        fontSize: '1rem'\r\n    },\r\n    underline: {\r\n        '&:after': {\r\n          borderBottom: '2px solid #FFD700',\r\n          transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\r\n        },\r\n        '&:before': {\r\n          borderBottom: '1px solid rgb(224, 224, 224)',\r\n        },\r\n        '&:hover:before': {\r\n          borderBottom: '1px solid rgb(224, 224, 224) !important',\r\n        },\r\n    },\r\n    iconWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '50px',\r\n        height: '31px',\r\n    },\r\n    iconStyle: {\r\n        justifyContent: 'center',\r\n        cursor: 'pointer',\r\n    },\r\n    emoticonStyle: {\r\n        justifyContent: 'center',\r\n        cursor: 'pointer',\r\n    },\r\n    nestedFormControl: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        marginLeft: 'auto',\r\n        '& .MuiInput-underline:before': {\r\n          borderBottom: 'none',\r\n        },\r\n    },\r\n    MenuItem: {\r\n        height: '46px',\r\n        display: 'flex',\r\n        padding: '5px 18px 5px 16px',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n          background: '#F8F8F8',\r\n        },\r\n    },\r\n    menuDiv: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        height: '100%',\r\n        alignItems: 'center',\r\n    },\r\n    impactSelector: {\r\n        '& .MuiSelect-select:focus': {\r\n          background: 'transparent',\r\n        },\r\n    },\r\n    impactSelectorDisabled: {\r\n        '& .MuiSelect-icon': {\r\n          visibility: 'hidden',\r\n        },\r\n    },\r\n}));\r\n\r\nfunction ImpactValueSelector(props) {//props: carrots,impact,onChange,options,selectedUsers,mePointsToGive,carrotsPerPost,error,canGiveCustomAmount,canGivePoints,onImpactOpen,onImpactClose,customCurrency,customCompanyIcon\r\n    const { inputIconOn, onInputIconOn, mePointsToGive } = props;\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [subSelectOpen, setSubSelectOpen] = useState(false);\r\n    const [customImpactModalOpen, setCustomImpactModalOpen] = useState(false);\r\n    const [impactValueSelector, setImpactValueSelector] = useState(props.impact);\r\n\r\n    const classes = useStyles();\r\n\r\n    //cpndidupdate\r\n    // useEffect(() => {\r\n    //     if(impactValueSelector) {\r\n    //         onInputIconOn(true)\r\n    //     }\r\n    //     else {\r\n    //         onInputIconOn(false)\r\n    //    }\r\n\r\n    \r\n    // }, [impactValueSelector, onInputIconOn]);\r\n\r\n    const placeholder = 'Tặng tim';\r\n    let maxPointsToGive = mePointsToGive;\r\n\r\n    if( props.selectedUsers.length > 0 ) {\r\n        maxPointsToGive = Math.floor(mePointsToGive / props.selectedUsers.length)\r\n    }\r\n\r\n    const disableSelect = Number(mePointsToGive) === 0;\r\n\r\n    const filterOptions = props.options.filter((option, index) => {\r\n        if(index > 0) {\r\n            const preOption = props.options[index - 1];\r\n            if (props.maxPointsToGive < preOption.goldLimit) {\r\n                return false;\r\n              }\r\n        }\r\n        return true;\r\n    })\r\n\r\n    const handleOpen = () => {\r\n        props.onImpactOpen();\r\n        onInputIconOn(true);\r\n        setMenuOpen(true);\r\n    }\r\n    \r\n    const handleClose = (e) => {\r\n        let itemClicked = false;\r\n        if (e) {\r\n            if (e.target.id === 'select-custom-item') {\r\n                itemClicked = true;\r\n            }\r\n        }\r\n\r\n        if (!itemClicked && !subSelectOpen) {\r\n            closeSelect();\r\n        }\r\n    }\r\n\r\n    const onImpactSelected = (impact, carrots) => {\r\n        props.onChange(impact, carrots);\r\n        setImpactValueSelector(impact);\r\n        closeSelect();\r\n    }\r\n\r\n    const onSubSelectToggle = toggle => {\r\n        setSubSelectOpen(toggle)\r\n    };\r\n\r\n    const closeSelect = () => {\r\n        props.onImpactClose();\r\n        setMenuOpen(false);\r\n        \r\n        if( impactValueSelector ) {\r\n            onInputIconOn(true);\r\n        } else {\r\n            onInputIconOn(false);\r\n        }\r\n        \r\n    };\r\n\r\n    const openCustomAmountModal = () => {\r\n        setCustomImpactModalOpen(true);\r\n    };\r\n\r\n    const closeCustomImpactModal = () => {\r\n        setCustomImpactModalOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CustomImpactModal \r\n                openModal={customImpactModalOpen}\r\n                closeModal={closeCustomImpactModal}\r\n                onClick={closeCustomImpactModal}\r\n                availablePointsToGive={mePointsToGive}\r\n                selectedUsers={props.selectedUsers}\r\n                values={props.options}\r\n                onImpactSelected={onImpactSelected}\r\n                customCompanyIcon={props.customCompanyIcon}\r\n            />\r\n            <div style={{display: 'flex'}}>\r\n                <div className={classes.iconWrapper}>\r\n                    <CarrotIcon\r\n                        className={props.customCompanyIcon && props.customCompanyIcon.type === 'emoji' ? classes.emoticonStyle : classes.iconStyle}\r\n                        size=\"16\"\r\n                        active={inputIconOn}\r\n                        onClick={handleOpen}\r\n                        url={props.customCompanyIcon}\r\n                        currency={props.customCurrency.NAME}\r\n                        style={{fontFamily: 'Segoe UI Emoji'}}\r\n                    />\r\n                </div>\r\n                <FormControl className={classes.formControl}>\r\n                    <Tooltip\r\n                        title={\r\n                            disableSelect\r\n                              ? `This field is disabled. You’ve used your allowance but you can still give recognitions`\r\n                              : ''\r\n                        }\r\n                        placement=\"top\"\r\n                    >\r\n                        <Select\r\n                            value={props.carrots}\r\n                            open={menuOpen}\r\n                            name='impactValue'\r\n                            displayEmpty\r\n                            fullWidth\r\n                            onOpen={handleOpen}\r\n                            onClose={(e) => handleClose(e)}\r\n                            className={classNames(classes.impactSelector, {\r\n                                [`${classes.impactSelectorDisabled}`] : disableSelect,\r\n                            })}\r\n                            disabled={disableSelect}\r\n                            input= {\r\n                                <Input\r\n                                    classes={{\r\n                                        underline: classes.underline\r\n                                    }}\r\n                                    name='impactValue'\r\n                                    id='impactValue'\r\n                                />\r\n                            }\r\n                            renderValue={() => {\r\n                                if(disableSelect) {\r\n                                    return (\r\n                                        <div className={classes.placeholderStyle}>\r\n                                            <div>\r\n                                                Your remaining allowance is 0 (zero), but you can still GIVERECOGNITIONs\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                if(!(props.impact) && !(props.carrots)) {\r\n                                    return (\r\n                                        <div className={classes.placeholderStyle}>\r\n                                            <div>{placeholder}</div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                const value = props.carrots || 0;\r\n                                let customCurrencyDisp = 'Tim';\r\n\r\n                                if( value === 1 ) {\r\n                                    customCurrencyDisp = 'Trophoy';\r\n                                }\r\n                                let goldSelected = value > 0 ? `${value} ${customCurrencyDisp}` : '';\r\n                                const total = props.selectedUsers.reduce((sum, user) => sum + parseInt(value, 10), 0);\r\n                                const remaining = mePointsToGive - (total > 0 ? total : value);\r\n                                let excessAlert = false;\r\n\r\n                                if(remaining < 0) {\r\n                                    excessAlert = true;\r\n                                }\r\n                                if(total > 0) {\r\n                                    if (remaining >= 0) {\r\n                                        if (Number(props.selectedUsers.length) === 1) {\r\n                                            goldSelected = `${total} ${customCurrencyDisp}`;\r\n                                        }\r\n                                        else {\r\n                                            goldSelected = `${value} ${customCurrencyDisp} mỗi người`;\r\n                                        }\r\n                                    } else {\r\n                                        goldSelected = `${value} ${customCurrencyDisp} each exceeds allowance`;\r\n                                    }\r\n                                }\r\n\r\n                                const impactObj = props.options.find(\r\n                                    option => option.value === props.impact,\r\n                                );\r\n\r\n                                let dispText;\r\n\r\n                                if (Number(value) === 0) {\r\n                                    dispText = 'No trophies';\r\n                                } \r\n                                else if (!(props.impact)) {\r\n                                    dispText = goldSelected;\r\n                                }\r\n                                else {\r\n                                    dispText = `${impactObj.label} ${goldSelected}`;\r\n                                }\r\n                                return (\r\n                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                        <div style={{ color: excessAlert ? themeV2.palette.red2 : '' }}>\r\n                                            {dispText}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }}\r\n                        >\r\n                            {\r\n                                filterOptions.map(option => (\r\n                                    <ImpactSelectorItem\r\n                                        option={option.label}\r\n                                        impact={option.value}\r\n                                        defaultValue={option.goldLimit}\r\n                                        canGivePoints={props.canGivePoints}\r\n                                        availablePointsToGive={maxPointsToGive}\r\n                                        onValueChange={onImpactSelected}\r\n                                        onSubSelectToggle={onSubSelectToggle}\r\n                                        key={option.label}\r\n                                        customCompanyIcon={props.customCompanyIcon}\r\n                                        customCurrency={props.customCurrency}\r\n                                        selectedUsers={props.selectedUsers}\r\n                                    >\r\n                                        {option.label}\r\n                                    </ImpactSelectorItem>\r\n                                ))\r\n                            }\r\n                            {props.canGiveCustomAmount && (\r\n                                <div className={classes.MenuItem}>\r\n                                    <div\r\n                                        className={classes.menuDiv}\r\n                                        onClick={openCustomAmountModal}\r\n                                    >\r\n                                        + Enter a custom amount\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </Select>\r\n                    </Tooltip>\r\n                </FormControl>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default ImpactValueSelector","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ProfilePic } from '../../assets/Util/profilePic';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    user: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    userName: {\r\n        fontSize: '16px',\r\n        fontWeight: 'normal',\r\n        b: {\r\n          fontWeight: 'normal',\r\n        },\r\n    },\r\n    userId: {\r\n        fontSize: '12px',\r\n        fontWeight: 'normal',\r\n    },\r\n    autocomplete_user_fullname: {\r\n        paddingLeft: 8,\r\n        fontSize: 12,\r\n        color: '#2C2C2C',\r\n        fontWeight: 600,\r\n        letterSpacing: 0.2\r\n    },\r\n}));\r\n\r\nconst Entry = (props) => {\r\n    const {...parentProps} = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <div {...parentProps}>\r\n            <div className={classes.user}>\r\n                <ProfilePic size={32} user={props.mention} />\r\n                <span className={classes.autocomplete_user_fullname}>\r\n                    <div className={classes.userName}>{props.mention.name}</div>\r\n                    <div className={classes.userId}>\r\n                        {`@${props.mention.username}`}\r\n                    </div>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nfunction CustomMentionSuggesstions(props) {\r\n    const { onSearchChange, suggestions, onOpenSuggestions, onCloseSuggestions, onAddMention, MentionComponent } = props;\r\n    return (\r\n        <MentionComponent \r\n            onSearchChange={onSearchChange}\r\n            suggestions={suggestions}\r\n            onOpen={onOpenSuggestions}\r\n            onClose={onCloseSuggestions}\r\n            entryComponent={Entry}\r\n            onAddMention={onAddMention}\r\n        />\r\n    )\r\n    \r\n    \r\n}\r\n\r\nexport default CustomMentionSuggesstions","import React from 'react';\r\nimport Editor from 'draft-js-plugins-editor';\r\nimport createMentionPlugin from 'draft-js-mention-plugin';\r\nimport CustomMentionSuggestions from './CustomMentionSuggesstions';\r\n\r\nfunction CustomEditor(props) {\r\n    // const {\r\n    //     editorState,\r\n    //     onChange,\r\n    //     editorRef,\r\n    //     onBlur,\r\n    //     onFocus,\r\n    //     placeholder,\r\n    //     onSearchChange,\r\n    //     suggestions,\r\n    //     onOpenSuggestions,\r\n    //     onCloseSuggestions,\r\n    //     onAddMention,\r\n    //   } = this.props;\r\n    const mentionPlugin = createMentionPlugin({\r\n        entityMutability: 'IMMUTABLE',\r\n        mentionTrigger: '@',\r\n        supportWhitespace: true,\r\n    })\r\n\r\n    const { MentionSuggestions } = mentionPlugin;\r\n\r\n    return (\r\n        <>\r\n            <Editor\r\n                editorState={props.editorState}\r\n                onChange={props.onChange}\r\n                plugins={[mentionPlugin]}\r\n                ref={props.editorRef}\r\n                onBlur={props.onBlur}\r\n                onFocus={props.onFocus}\r\n                placeholder={props.placeholder}\r\n            />\r\n            <CustomMentionSuggestions\r\n                onSearchChange={props.onSearchChange}\r\n                suggestions={props.suggestions}\r\n                MentionComponent={MentionSuggestions}\r\n                onOpenSuggestions={props.onOpenSuggestions}\r\n                onCloseSuggestions={props.onCloseSuggestions}\r\n                onAddMention={props.onAddMention}\r\n            />\r\n        </>\r\n    )\r\n}\r\nexport default CustomEditor;","import React, { useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport CustomEditor from '../V2/CustomEditor';\r\n\r\n// import Fuse from 'fuse.js';\r\n// import { getter } from '../../assets/Util/object';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        width: '100%',\r\n    },\r\n    iconWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '50px',\r\n        height: '31px',\r\n    },\r\n    iconStyle: {\r\n        fontSize: '16px',\r\n        cursor: 'pointer',\r\n    },\r\n    iconInactiveStyle: {\r\n        color: '#9e9e9e',\r\n        filter: 'grayscale(1)',\r\n    },\r\n    iconActiveStyle: {\r\n        color: theme.palette.secondary.main,\r\n        filter: 'grayscale(0)',\r\n    },\r\n    inputDiv: {\r\n        marginTop: 7,\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n        verticalAlign: 'top',\r\n        fontSize: '16px',\r\n        overflow: 'hidden',\r\n    },\r\n    errorhelper: {\r\n        color: '#f44336',\r\n        margin: 0,\r\n        fontSize: '0.75rem',\r\n        marginTop: 3,\r\n        textAlign: 'left',\r\n        fontWeight: 400,\r\n        lineHeight: 1.66,\r\n    },\r\n    textarea__input: {\r\n        width: '100%'\r\n    },\r\n    // textarea__input__input::-webkit-input-placeholder {\r\n    //     color: #e2e2e2 !important; }\r\n}))\r\n\r\nconst DIV_ID = 'gr_post_div';\r\n\r\nfunction MessageInput(props) {\r\n    //const [inputIconOn, setInputIconOn] = useState(false);\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const { inputIconMessageOn, onInputIconMessageOn } = props;\r\n    const [editor, setEditor] = useState();\r\n    const classes = useStyles();\r\n\r\n    const onFocus = () => {\r\n        onInputIconMessageOn(true);\r\n        editor.focus();\r\n        props.onFocus();\r\n    }\r\n\r\n    const onChange = (editorState) => {\r\n        props.handleMessage(editorState)\r\n    }\r\n\r\n    const onInputBlur = () => {\r\n\r\n        if(props.hasText) {\r\n            onInputIconMessageOn(true);\r\n        }\r\n        \r\n        else {\r\n            onInputIconMessageOn(false);\r\n        }\r\n    }\r\n\r\n    const onSearchChange = () => {\r\n\r\n    }\r\n\r\n    const onOpenSuggestions = () => {\r\n\r\n    }\r\n\r\n    const onCloseSuggestions = () => {\r\n\r\n    }\r\n\r\n    const onAddMention = () => {\r\n\r\n    }\r\n    \r\n    const getErrorMessage = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.iconWrapper}>\r\n                <div className={classNames(\r\n                    classes.iconStyle,\r\n                    inputIconMessageOn ? classes.iconActiveStyle : classes.iconInactiveStyle\r\n                )}\r\n                    onClick={onFocus}\r\n                >\r\n                    <span role=\"img\" aria-label=\"icon\">\r\n                        💌\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div\r\n                    onClick={onFocus}\r\n                    className={classNames(classes.textarea__input, DIV_ID)}\r\n                >\r\n                    <CustomEditor\r\n                        editorState={props.editorState}\r\n                        onChange={onChange}\r\n                        editorRef={(e) => {\r\n                            setEditor(e)\r\n                        }}\r\n                        onBlur={onInputBlur}\r\n                        onFocus={onFocus}\r\n                        placeholder=\"Hãy viết những lời ý nghĩa gửi đến người đó\"\r\n                        onSearchChange={onSearchChange}\r\n                        onAddMention={onAddMention}\r\n                        suggestions={suggestions}\r\n                        onOpenSuggestions={onOpenSuggestions}\r\n                        onCloseSuggestions={onCloseSuggestions}\r\n                    />\r\n                </div>\r\n                {props.error && (\r\n                    <div className={classes.errorhelper}>{getErrorMessage()}</div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MessageInput","import React , { useMemo } from 'react';\r\nimport { oneOf, string, bool, oneOfType, node, arrayOf, object, array } from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ThemeV2 from '../V2/theme';\r\n\r\nconst variantMap = {\r\n    body2: {\r\n        fontWeight: ThemeV2.typography.fontWeightRegular,\r\n    },\r\n    body2SemiBold: {\r\n        fontWeight: ThemeV2.typography.fontWeightSemibold,\r\n    },\r\n    body2Bold: {\r\n        fontWeight: ThemeV2.typography.fontWeightBold,\r\n    },\r\n    body2Medium: {\r\n        fontWeight: ThemeV2.typography.fontWeightMedium,\r\n    },\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: ({\r\n        fontFamily,\r\n        fontSize,\r\n        fontWeight,\r\n        fontStyle,\r\n        lineHeight,\r\n        color,\r\n    }) => ({\r\n        fontFamily,\r\n        fontSize,\r\n        fontWeight,\r\n        fontStyle,\r\n        lineHeight,\r\n        color,\r\n    }),\r\n})\r\n\r\nconst Body = ({\r\n    children,\r\n    className: parentClassName,\r\n    variant,\r\n    fontFamily,\r\n    color,\r\n    inline,\r\n    disabled,\r\n    style,\r\n    'data-testid': dataTestId\r\n}) => {\r\n    const fontColor = disabled ? 'gray6' : color;\r\n    const variantFromMap = variantMap[variant];\r\n    const { fontSize, fontWeight, fontStyle, lineHeight } = variantFromMap;\r\n    const paletteColor = ThemeV2.palette[fontColor];\r\n    const bodyStyle = useMemo(\r\n        () => ({\r\n            fontFamily,\r\n            fontSize,\r\n            fontWeight,\r\n            fontStyle,\r\n            lineHeight,\r\n            color: paletteColor\r\n        }),\r\n        [fontFamily, fontSize, fontStyle, fontWeight, lineHeight, paletteColor]\r\n    );\r\n    const classes = useStyles(bodyStyle);\r\n    const className = `${classes.root} ${parentClassName}`;\r\n\r\n    if(inline) {\r\n        return (\r\n            <span className={className} data-testid={dataTestId} style={style}>\r\n                {children}\r\n            </span>\r\n        )\r\n    }\r\n    return (\r\n        <div className={className} data-testid={dataTestId} style={style}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nBody.propTypes = {\r\n    variant: oneOf(Object.keys(variantMap)),\r\n    color: oneOf(Object.keys(ThemeV2.palette)),\r\n    fontFamily: string,\r\n    inline: bool,\r\n    className: string,\r\n    children: oneOfType([arrayOf(node), node]).isRequired,\r\n    disabled: bool,\r\n    'data-testid': string,\r\n    style: oneOfType([object, array]),\r\n};\r\n  \r\nBody.defaultProps = {\r\n    variant: 'body1',\r\n    className: '',\r\n    inline: false,\r\n    disabled: false,\r\n    'data-testid': '',\r\n    style: {},\r\n};\r\n\r\nconst MemoizedBody = React.memo(Body);\r\nMemoizedBody.displayName = 'Body';\r\n\r\nexport default MemoizedBody;","const GIVE_RECOGNITION_HEADER = 'Lời cảm ơn';\r\nconst RECOGNITION_TIPS_HEADER_TEXT = 'Những lời khuyên để lời cảm ơn có ý nghĩa lan tỏa hơn';\r\nconst RECOGNITION_TIPS = [\r\n    {\r\n        title: 'Lời mở đầu',\r\n        body: 'Hãy bắt đầu với “Cảm ơn bạn...” hoặc “Tôi cảm thấy rất phấn khích với...”',\r\n    },\r\n    {\r\n        title: 'Nội dung',\r\n        body: 'Mô tả và xác định những gì họ đã làm được. Đôi khi bạn bày tỏ tấm lòng với những lời nhắn chung chung cũng không thành vấn để (ví dụ: Cảm ơn bạn đã luôn sẵn lòng hỗ trợ mỗi khi tôi cần bạn nhất. Mãi yêu...). Tuy nhiên, bạn hãy chỉ rõ một sự kiện nào đó để cho thấy sự ảnh hưởng lớn đến bạn như thế nào (ví dụ: “Cảm ơn bạn đã dành thêm chút thời gian quý báu để làm buổi thuyết trình được thành công tốt đẹp...”)'\r\n    },\r\n    {\r\n        title: 'Lời kết thúc',\r\n        body: 'Kết thúc lời nhắn với một dòng ngắn gọn xúc tích (ví dụ: “Tôi đánh giá rất cao [sự hợp tác] của bạn.” là sự lựa chọn tốt.'\r\n    },\r\n    {\r\n        title: 'Ví dụ',\r\n        body: 'Tôi thật sự đánh giá rất cao sự giúp đỡ của bạn trong việc thúc đẩy sự hợp tác các bên để cho ra mắt sản phẩm mới của tập đoàn trong lĩnh vực R&D. Bạn luôn sẵn lòng giúp đỡ các thành viên trong dự án ngay cả khi trong tình huống cần gấp. Tôi rất biết ơn sự đóng góp ý kiến của bạn để tạo ra những trải nhiệm người dùng tốt hơn. Tôi đặc biệt thích cái nút bạn đã di chuyển ra ngoài màn hình chính để người dùng thuận tiện hơn. Ngoài ra, tôi còn đánh giá cao về sự tỉ mỉ trong việc thiết kế giao diện và cách bạn nhìn nhận vấn đề. Trân trọng...'\r\n    }\r\n]\r\n\r\nexport {\r\n    GIVE_RECOGNITION_HEADER,\r\n    RECOGNITION_TIPS_HEADER_TEXT,\r\n    RECOGNITION_TIPS\r\n}","import React, { useState } from 'react';\r\n\r\nimport Body from '../atom/Body';\r\nimport ThemeV2 from '../V2/theme';\r\n\r\nimport { RECOGNITION_TIPS_HEADER_TEXT, RECOGNITION_TIPS }  from '../../assets/Util/constants';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExpandMoreIcon  from '@material-ui/icons/ExpandMore';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        background: ThemeV2.palette.gray2,\r\n        borderRadius: 4,\r\n    },\r\n    collapsingHeader: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        padding: '8px 12px',\r\n        cursor: 'pointer',\r\n        outline: 0,\r\n        border: 'none',\r\n        '&:focus': {\r\n            background: ThemeV2.palette.gray3,\r\n        },\r\n    },\r\n    toggleButton: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        right: 4,\r\n        transform: 'translateY(-50%)',\r\n    },\r\n    tip: {\r\n        display: 'grid',\r\n        gridTemplateColumns: '22px auto',\r\n        //marginBottom: 12,\r\n        '&:last-child': {\r\n          //marginTop: 24,\r\n        },\r\n    },\r\n    tipsWrapper: {\r\n        padding: 1,\r\n    },\r\n    indexHolder: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: 32,\r\n        width: 44,\r\n    },\r\n    tipIndex: {\r\n        fontWeight: ThemeV2.typography.fontWeightMedium,\r\n        color: ThemeV2.palette.gray1,\r\n        //background: `url(${TextureBG}) no-repeat center`,\r\n        backgroundSize: 'cover',\r\n        zIndex: 0,\r\n        '&:after': {\r\n          content: \"''\",\r\n          height: 20,\r\n          width: 20,\r\n          position: 'absolute',\r\n          top: '50%',\r\n          right: 'auto',\r\n          left: 'auto',\r\n          margin: 'auto',\r\n          transform: 'translateY(-50%)',\r\n          background: '#87B1FF',\r\n          borderRadius: '50%',\r\n          zIndex: -2,\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        paddingLeft: 20,\r\n        paddingTop: 4\r\n    },\r\n    // expand: {\r\n    //     transform: 'rotate(0deg)',\r\n    //     marginLeft: 'auto',\r\n    //     transition: theme.transitions.create('transform', {\r\n    //       duration: theme.transitions.duration.shortest,\r\n    //     }),\r\n    // },\r\n    expandOpen: {\r\n        transform: 'rotate(-180deg)',\r\n    },\r\n}))\r\n\r\nfunction GiveRecognitionTips (props) {\r\n    const { isOpen, onToggleClick, onToggleKeyPress } = props;\r\n    const [expanded, setExpanded] = useState(isOpen);\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n    return (\r\n        <div className={classes.root}>\r\n            <div\r\n                className={classes.collapsingHeader}\r\n                role='button'\r\n                tabIndex={0}\r\n                onKeyPress={onToggleKeyPress}\r\n                onClick={onToggleClick}\r\n            >\r\n                <Body variant='body2Medium'>\r\n                    {RECOGNITION_TIPS_HEADER_TEXT}\r\n                </Body>\r\n                <IconButton \r\n                    className={classes.toggleButton}\r\n                    onClick={handleExpandClick}\r\n                    aria-expanded={expanded}\r\n                    aria-label=\"show more\"\r\n                >\r\n                    <ExpandMoreIcon \r\n                        className={\r\n                            expanded ? classes.expandOpen : ''\r\n                        }\r\n                    />\r\n                </IconButton>\r\n            </div>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                    <div className={classes.tipsWrapper}>\r\n                        {RECOGNITION_TIPS.map((tip, index) => (\r\n                            <div className={classes.tip} key={index}>\r\n                                <div\r\n                                    className={`${classes.indexHolder} ${index + 1 !== RECOGNITION_TIPS.length && classes.tipIndex}`}\r\n                                >\r\n                                    {index + 1 !== RECOGNITION_TIPS.length ? ( index + 1 ) : \r\n                                        ( \r\n                                            <StarIcon icon=\"star\" style={{color: '#F5D45F'}}/>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className={classes.contentWrapper}>\r\n                                    <Body variant=\"body2Medium\">{tip.title}</Body>\r\n                                    <Body variant=\"body2\">{tip.body}</Body>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GiveRecognitionTips","import closer_badge from '../images/badges/closer_badge.png';\r\n// import closer_badge_thumb from '../img/badges/thumb/closer_badge_thumb.png';\r\nimport creativity_badge from '../images/badges/creativity_badge.png';\r\n// import creativity_badge_thumb from '../img/badges/thumb/creativity_badge_thumb.png';\r\nimport culture_badge from '../images/badges/culture_badge.png';\r\n// import culture_badge_thumb from '../img/badges/thumb/culture_badge_thumb.png';\r\nimport detail_master_badge from '../images/badges/detail_master_badge.png';\r\n// import detail_master_badge_thumb from '../img/badges/thumb/detail_master_badge_thumb.png';\r\nimport goal_smasher_badge from '../images/badges/goal_smasher_badge.png';\r\n// import goal_smasher_badge_thumb from '../img/badges/thumb/goal_smasher_badge_thumb.png';\r\nimport idea_maker_badge from '../images/badges/idea_maker_badge.png';\r\n// import idea_maker_badge_thumb from '../img/badges/thumb/idea_maker_badge_thumb.png';\r\nimport initiative_badge from '../images/badges/initiative_badge.png';\r\n// import initiative_badge_thumb from '../img/badges/thumb/initiative_badge_thumb.png';\r\nimport innovator_badge from '../images/badges/innovator_badge.png';\r\n// import innovator_badge_thumb from '../img/badges/thumb/innovator_badge_thumb.png';\r\nimport launcher_badge from '../images/badges/launcher_badge.png';\r\n// import launcher_badge_thumb from '../img/badges/thumb/launcher_badge_thumb.png';\r\nimport leadership_badge from '../images/badges/leadership_badge.png';\r\n// import leadership_badge_thumb from '../images/badges/thumb/leadership_badge_thumb.png';\r\nimport lifesaver_badge from '../images/badges/lifesaver_badge.png';\r\n// import lifesaver_badge_thumb from '../images/badges/thumb/lifesaver_badge_thumb.png';\r\nimport motivator_badge from '../images/badges/motivator_badge.png';\r\n// import motivator_badge_thumb from '../images/badges/thumb/motivator_badge_thumb.png';\r\nimport navigator_badge from '../images/badges/navigator_badge.png';\r\n// import navigator_badge_thumb from '../images/badges/thumb/navigator_badge_thumb.png';\r\nimport obstacle_badge from '../images/badges/obstacle_badge.png';\r\n// import obstacle_badge_thumb from '../images/badges/thumb/obstacle_badge_thumb.png';\r\nimport problem_solver_badge from '../images/badges/problem_solver_badge.png';\r\n// import problem_solver_badge_thumb from '../images/badges/thumb/problem_solver_badge_thumb.png';\r\nimport teamwork_badge from '../images/badges/teamwork_badge.png';\r\n// import teamwork_badge_thumb from '../images/badges/thumb/teamwork_badge_thumb.png';\r\n import top_earner_badge from '../images/badges/top_earner_badge.png';\r\n// import top_earner_badge_thumb from '../images/badges/thumb/top_earner_badge_thumb.png';\r\n\r\nexport const badges = [\r\n  {\r\n    name: 'closer',\r\n    displayName: 'Closer',\r\n  },\r\n  {\r\n    name: 'creativity',\r\n    displayName: 'Creativity',\r\n  },\r\n  {\r\n    name: 'culture',\r\n    displayName: 'Culture Champ',\r\n  },\r\n  {\r\n    name: 'detail_master',\r\n    displayName: 'Detail Master',\r\n  },\r\n  {\r\n    name: 'goal_smasher',\r\n    displayName: 'Goal Smasher',\r\n  },\r\n  {\r\n    name: 'idea_maker',\r\n    displayName: 'Idea Maker',\r\n  },\r\n  {\r\n    name: 'initiative',\r\n    displayName: 'Initiative',\r\n  },\r\n  {\r\n    name: 'innovator',\r\n    displayName: 'Innovator',\r\n  },\r\n  {\r\n    name: 'launcher',\r\n    displayName: 'Launcher',\r\n  },\r\n  {\r\n    name: 'leadership',\r\n    displayName: 'Leadership',\r\n  },\r\n  {\r\n    name: 'life_saver',\r\n    displayName: 'Life Saver',\r\n  },\r\n  {\r\n    name: 'motivator',\r\n    displayName: 'Motivator',\r\n  },\r\n  {\r\n    name: 'navigator',\r\n    displayName: 'Navigator',\r\n  },\r\n  {\r\n    name: 'obstacle_eliminator',\r\n    displayName: 'Obstacle Eliminator',\r\n  },\r\n  {\r\n    name: 'problem_solver',\r\n    displayName: 'Problem Solver',\r\n  },\r\n  {\r\n    name: 'teamwork',\r\n    displayName: 'Teamwork',\r\n  },\r\n  {\r\n    name: 'top_earner',\r\n    displayName: 'Top Earner',\r\n  },\r\n];\r\n\r\nexport const getBadgeObjectForName = (badgeName) => badges.find(badge => badge.name === badgeName);\r\n\r\nexport const getImageForBadge = (badge, thumb = false) => {\r\n  switch (badge.name) {\r\n    case 'creativity':\r\n      return creativity_badge;\r\n    case 'culture':\r\n      return culture_badge;\r\n    case 'detail_master':\r\n      return detail_master_badge;\r\n    case 'goal_smasher':\r\n      return goal_smasher_badge;\r\n    case 'idea_maker':\r\n      return idea_maker_badge;\r\n    case 'initiative':\r\n      return initiative_badge;\r\n    case 'innovator':\r\n      return innovator_badge;\r\n    case 'launcher':\r\n      return launcher_badge;\r\n    case 'leadership':\r\n      return leadership_badge;\r\n    case 'life_saver':\r\n      return lifesaver_badge;\r\n    case 'motivator':\r\n      return motivator_badge;\r\n    case 'navigator':\r\n      return navigator_badge;\r\n    case 'obstacle_eliminator':\r\n      return obstacle_badge;\r\n    case 'problem_solver':\r\n      return problem_solver_badge;\r\n    case 'teamwork':\r\n      return teamwork_badge;\r\n    case 'top_earner':\r\n      return top_earner_badge;\r\n    case 'closer':\r\n      return closer_badge;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Img }  from 'react-image';\r\nimport { getImageForBadge } from '../../assets/Util/BadgesInfo';\r\n//import badge_selected from '../../../../img/badge_selected.png';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    badge_selector_item: {\r\n        height: 90,\r\n        padding: 10,\r\n        position: 'relative',\r\n        cursor: 'pointer'\r\n    },\r\n    badge_selector_img: {\r\n        width: 54,\r\n        height: 54\r\n    },\r\n    badge_selector_name: {\r\n        color: '#4b4f56',\r\n        fontSize: 8,\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        marginTop: 10,\r\n        wordWrap: 'break-word',\r\n        width: 54\r\n    },\r\n}))\r\nfunction BadgesItem(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div\r\n            className={classes.badge_selector_item}\r\n            onClick={props.onSelect}\r\n        >\r\n            <Img\r\n                className={classes.badge_selector_img}\r\n                alt={`badge-${props.badge.name}`}\r\n                src={getImageForBadge(props.badge)}\r\n            />\r\n            <div className={classes.badge_selector_name}>\r\n                {props.badge.displayName}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BadgesItem","import React from 'react';\r\nimport BadgesItem from './BadgesItem';\r\nimport { badges } from '../../assets/Util/BadgesInfo';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    badge_selector_wrapper: {\r\n        width: 320,\r\n        height: 230,\r\n        padding: 10\r\n    },\r\n    badge_selector_body: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    badge_selected_image: {\r\n        width: 60,\r\n        height: 61,\r\n        position: 'absolute',\r\n        top: 7,\r\n        left: 7\r\n    }\r\n}))\r\n\r\nfunction BadgesSelector(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.badge_selector_wrapper}>\r\n            <div className={classes.badge_selector_body}>\r\n                {\r\n                    badges.map((badge) => (\r\n                        <BadgesItem\r\n                            key={badge.name}\r\n                            badge={badge}\r\n                            selected={props.selectedBadge ? props.selectedBadge.name === badge.name : false}\r\n                            onSelect={() => { props.updateSelected(badge) }}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BadgesSelector;\r\n","import { convertToRaw } from 'draft-js';\r\n\r\nconst getLiteralTextFromEditor = (editorState = []) => {\r\n  const blocks = convertToRaw(editorState.getCurrentContent()).blocks;\r\n\r\n  const mappedBlocks = blocks.map(\r\n    (block) => (!block.text.trim() && '\\n') || block.text,\r\n  );\r\n\r\n  let newText = '';\r\n  for (let i = 0; i < mappedBlocks.length; i++) {\r\n    const block = mappedBlocks[i];\r\n\r\n    // handle last block\r\n    if (i === mappedBlocks.length - 1) {\r\n      newText += block;\r\n    } else {\r\n      // otherwise we join with \\n, except if the block is already a \\n\r\n      if (block === '\\n') newText += block;\r\n      else newText += block + '\\n';\r\n    }\r\n  }\r\n  return newText;\r\n};\r\n\r\nconst getTextFromEditor = (editorState, mentionsToReplace = []) => {\r\n  let newText = getLiteralTextFromEditor(editorState);\r\n  mentionsToReplace.forEach((mention) => {\r\n    newText = newText.replace(\r\n      new RegExp(mention.name, 'g'),\r\n      `@__${mention.id}__@`,\r\n    );\r\n  });\r\n  return newText;\r\n};\r\n\r\nconst getMentionsToReplace = (selectedMentions, employees) => {\r\n  \r\n  return selectedMentions.map((id) => {\r\n    const employee = employees.find((emp) => emp.id === id);\r\n    return {\r\n      id,\r\n      name: employee.name || '',\r\n    };\r\n  });\r\n};\r\n\r\nconst getMentionsFromEditorSate = (editorState, mentions) => {\r\n  const userIdsMentioned = [];\r\n  const message = getLiteralTextFromEditor(editorState);\r\n  mentions.forEach((mention) => {\r\n    if ((message.match(new RegExp(mention.name, 'g')) || []).length > 0) {\r\n      userIdsMentioned.push(mention.id);\r\n    }\r\n  });\r\n  return userIdsMentioned;\r\n};\r\n\r\nexport {\r\n  getTextFromEditor,\r\n  getMentionsToReplace,\r\n  getLiteralTextFromEditor,\r\n  getMentionsFromEditorSate,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\n//lib\r\nimport { IconButton, Tooltip, Button, Popover, Tab, Tabs, Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport AdjustIcon from '@material-ui/icons/Adjust';\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\nimport axios from 'axios';\r\nimport classNames from 'classnames';\r\n\r\n// import EmojiIcon from '@material-ui/icons/InsertEmoticon';\r\n// import CameraIcon from '@material-ui/icons/AddAPhoto';\r\n// import GifIcon from '@material-ui/icons/Gif';\r\n\r\n//give-carrot\r\nimport DSTypeAhead from './give-carrot/DSTypeAhead';\r\nimport ImpactValueSelector from './give-carrot/ImpactValueSelector';\r\nimport MessageInput from './give-carrot/MessageInput';\r\nimport GiveRecognitionTips from './give-carrot/GiveRecognitionTips';\r\nimport BadgesSelector from './give-carrot/BadgesSelector';\r\n\r\n//assets\r\nimport { getTextFromEditor, getMentionsToReplace } from '../assets/Util/mention';\r\nimport { GIVE_RECOGNITION_HEADER } from '../assets/Util/constants';\r\nimport { titleize } from '../assets/Util/text';\r\nimport { getImageForBadge } from '../assets/Util/BadgesInfo';\r\n\r\n//store\r\nimport { StoreContext } from '../store/StoreContext';\r\n\r\nconst StyledTabs = withStyles({\r\n    root: {\r\n        background: '#f6f6f6'\r\n    },\r\n    indicator: {\r\n      backgroundColor: '#EEEEEE',\r\n    },\r\n})(Tabs);\r\n\r\nconst StyledTab = withStyles(() => ({\r\n    root: {\r\n        textTransform: 'none',\r\n        color: '#2C2C2C',\r\n        // fontSize: 16,\r\n        fontWeight: 'bold',\r\n        letterSpacing: '.5px',\r\n        '&:focus': {\r\n        outline: 'none'\r\n        }\r\n    },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    post_container: {\r\n        border: '.5px solid #EEEEEE',\r\n        background: '#FFFFFF',\r\n        borderRadius: 2,\r\n        marginBottom: 10,\r\n    },\r\n    form_container: {\r\n        position: 'relative',\r\n        width: '100%'\r\n    },\r\n    p_16: {\r\n        padding: 16\r\n    },\r\n    input_row_style: {\r\n        position: 'relative',\r\n        marginBottom: 10,\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n    },\r\n    iconButton: {\r\n        color: '#9E9E9E',\r\n        '&:hover': {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.08)',\r\n        },\r\n        '&:focus': {\r\n            outline: 'none',\r\n        },\r\n    },\r\n    button: {\r\n        color: '#FFFFFF',\r\n        borderRadius: 4,\r\n        minWidth: 140,\r\n        textTransform: 'none',\r\n    },\r\n    gc_button: {\r\n        marginLeft: 10,\r\n        marginRight: 10\r\n    },\r\n    add_emoji_img: {\r\n        width: 20,\r\n        height: 20\r\n    }\r\n}));\r\n\r\nconst impactLevels = [\r\n    {\r\n        goldLimit: 10,\r\n        label: \"🙂\",\r\n        value: \"small\"\r\n    },\r\n    {\r\n        goldLimit: 20,\r\n        label: \"😀\",\r\n        value: \"medium\"\r\n    },\r\n    {\r\n        goldLimit: 30,\r\n        label: \"👏\",\r\n        value: \"large\"\r\n    },\r\n    {\r\n        goldLimit: 40,\r\n        label: \"💪\",\r\n        value: \"huge\"\r\n    },\r\n    {\r\n        goldLimit: 50,\r\n        label: \"🚀\",\r\n        value: \"above\"\r\n    }\r\n];\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction PostRecognition (props) {\r\n    const classes = useStyles();\r\n    const [slideIndex, setSlideIndex] = useState(0);\r\n\r\n    //form value\r\n    const [selectedBadge, setSelectedBadge] = useState(null);\r\n    const [selectedUsers, setSelectedUsers] = useState([]);\r\n    const [carrots, setCarrots] = useState('');\r\n    const [impact, setImpact] = useState('');\r\n    const [userInputIconOn, setUserInputIconOn] = useState(false);\r\n    const [inputIconOn, setInputIconOn] = useState(false);\r\n    const [inputIconMessageOn, setInputIconMessageOn] = useState(false);\r\n    //end\r\n\r\n    const [carrotsTouched, setCarrotsTouched] = useState(false);\r\n    const [carrotError, setCarrotError] = useState(null);\r\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n    const [messageError, setMessageError] = useState(null);\r\n    const [isMessageTipsVisible, setIsMessageTipsVisible] = useState(false);\r\n    const [isRecognitionOpen, setIsRecognitionOpen] = useState(false);\r\n\r\n    const [selectedMentions, setSelectedMentions] = useState([]);\r\n    const [isFormSubmitting, setIsFormSubmitting] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    \r\n    //snackbar MAT\r\n    const [openMessage, setOpenMessage] = useState(false);\r\n\r\n    const handleCloseMessage = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setOpenMessage(false);\r\n    };\r\n\r\n    //store\r\n    const { token, setRemainingPoint } = React.useContext(StoreContext);\r\n    \r\n    //hardcode\r\n    const canGivePoints = true;\r\n\r\n    const canGiveCustomAmount = false;\r\n\r\n    const badgeAttachability = true;\r\n\r\n    const mePointsToGive = 200;\r\n\r\n    const carrotsPerPost = {\r\n        isSet: false,\r\n        value: 25\r\n    }\r\n\r\n    const customCurrency = {\r\n        NAME_PLURAL: \"Trophies\",\r\n        NAME_TITLEIZED: \"Trophy\",\r\n        NAME_TITLEIZED_PLURAL: \"Trophies\"\r\n    }\r\n\r\n    const customCompanyIcon = {\r\n        type: 'emoji',\r\n        value: {\r\n            hexCode: \"02764\",\r\n            id: \"heart\"\r\n        }\r\n    }\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setSlideIndex(newValue);\r\n    };\r\n\r\n    const getImageForBadgeIcon = () => {\r\n        if (selectedBadge) {\r\n            return getImageForBadge(selectedBadge, true);\r\n        }\r\n\r\n    };\r\n\r\n    const getImageTitleForBadge = () => {\r\n        \r\n        if (selectedBadge) {\r\n            return selectedBadge.displayName;\r\n        }\r\n        return 'Danh hiệu';\r\n    };\r\n\r\n    const handleTypeAheadUsers = (selectedUsers) => {\r\n        setSelectedUsers(selectedUsers);\r\n    };\r\n\r\n    const onUserInputFocus = () => {\r\n    }\r\n\r\n    const minMessageChar = {\r\n        isSet: false,\r\n        value: 25\r\n    }\r\n\r\n    const onImpactOpen = () => {\r\n        props.switchBalanceTab(1);\r\n    }\r\n\r\n    const onImpactClose = () => {\r\n        props.switchBalanceTab(0);\r\n    }\r\n\r\n    const handleImpactValueChange = (impact, carrots) => {\r\n        setImpact(impact);\r\n        setCarrots(carrots);\r\n        setCarrotsTouched(true);\r\n    }\r\n\r\n    const handleMessage = (editorStateProps) => {\r\n        setEditorState(editorStateProps);\r\n        setMessageError(null);\r\n    }\r\n\r\n    const handleMessageInputFocus = () => {\r\n        setIsMessageTipsVisible(true);\r\n      };\r\n\r\n    const onAddMention = (props) => {\r\n        selectedMentions.push(props.id);\r\n        setSelectedMentions(selectedMentions);\r\n    };\r\n\r\n    const messageInputHasText = editorState.getCurrentContent().hasText();\r\n    const mentionUsers = [\r\n        {\r\n            \"id\": \"5f60a577937a424a11ee2b36\",\r\n            \"_id\": \"5f60a577937a424a11ee2b36\",\r\n            \"name\" : \"Minh Y Nguyen\",\r\n            \"username\": \"minh-y-nguyen\",\r\n            \"profile\": {\r\n                \"firstName\": \"Minh Y\",\r\n                \"lastName\": \"Nguyen\",\r\n                \"username\": \"minh-y-nguyen\",\r\n                \"allowanceType\": \"regular\",\r\n                \"status\": \"normal\"\r\n            },\r\n            \"role\": [\r\n                \"Employee\"\r\n            ]\r\n        }\r\n    ]\r\n\r\n    const shouldDisableGiveButton = () => {\r\n        let giveButtonDisabled = true;\r\n        \r\n        // const { canGivePoints, mePointsToGive } = props; //hardcode\r\n        \r\n        const blocks = convertToRaw(editorState.getCurrentContent()).blocks;\r\n        const value = blocks[0].text.trim();\r\n        \r\n        const hasText = editorState.getCurrentContent().hasText();\r\n\r\n        if (isFormSubmitting) {\r\n            giveButtonDisabled = true;\r\n        } else if (selectedUsers.length > 0  && hasText && value !== '') {\r\n            if(!carrotError) {\r\n                if(!canGivePoints || Number(mePointsToGive) === 0) {\r\n                    giveButtonDisabled = true;\r\n                }\r\n                else if(canGivePoints && carrotsTouched) {\r\n                    if (selectedUsers.length * carrots <= mePointsToGive) {\r\n                        giveButtonDisabled = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return giveButtonDisabled;\r\n    }\r\n\r\n    const giveButtonDisabled = shouldDisableGiveButton();\r\n\r\n    const onUpdateSelectedBadge = (badge) => {\r\n        if(selectedBadge) {\r\n            if(selectedBadge.name === badge.name) {\r\n                setSelectedBadge(null);\r\n                setAnchorEl(null);\r\n                return\r\n            }\r\n        }\r\n        setSelectedBadge(badge);\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const onAddBadgeClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    \r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleRecognitionTipsToggle = () => {\r\n        setIsRecognitionOpen(!isRecognitionOpen);\r\n    }\r\n\r\n    const handleRecognitionTipsToggleKeypress = (event) => {\r\n        if(event.key === 0) {\r\n            handleRecognitionTipsToggle()\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e, values={}) => {\r\n        e.preventDefault();\r\n\r\n        const mentionsToReplace = getMentionsToReplace(selectedMentions, mentionUsers)\r\n\r\n        const message = getTextFromEditor(editorState, mentionsToReplace)\r\n        // const literalMessage = getLiteralTextFromEditor(editorState);\r\n\r\n        //mapping data\r\n        \r\n        const giveCarrots = {\r\n            to: selectedUsers,\r\n            carrots_each: Number(carrots),\r\n            message,\r\n        }\r\n\r\n        if (selectedBadge) {\r\n            giveCarrots.badges = [selectedBadge.name];\r\n        }\r\n        \r\n        //call API\r\n        axios.post('https://camon.twgroup.vn/api/v1/feed', giveCarrots , {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token\r\n            }\r\n        }).then((res) => {\r\n            if (res.data.data) {\r\n                resetForm();\r\n                //ER-54\r\n                setRemainingPoint(res.data.data.remaining_point);\r\n\r\n                setOpenMessage(true);\r\n\r\n                //temporative reload page\r\n                setTimeout(() => {\r\n                    window.location.reload()\r\n                }, 1000)\r\n            }\r\n        })\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setSelectedUsers([]);\r\n        setCarrots('');\r\n        setImpact('');\r\n        setSelectedBadge(null);\r\n        setUserInputIconOn(false);\r\n        setInputIconOn(false);\r\n        setInputIconMessageOn(false);\r\n        setEditorState(EditorState.createEmpty());\r\n    }\r\n\r\n    return (\r\n        <div className={classes.post_container}>\r\n            <div style={{overflow: 'hidden', width: 'calc(100% - 1px)'}}>\r\n                <StyledTabs\r\n                    centered\r\n                    variant='fullWidth'\r\n                    value={slideIndex}\r\n                    onChange={handleTabChange}>\r\n                    <StyledTab disableRipple label= {GIVE_RECOGNITION_HEADER} />\r\n                </StyledTabs>\r\n            </div>\r\n            <form onSubmit={handleSubmit} className={classes.form_container}>\r\n                <div className={classes.p_16}>\r\n                    <div\r\n                        className={classNames(\r\n                            'row',\r\n                            'shoutout-user-select',\r\n                            classes.input_row_style,\r\n                        )}\r\n                    >\r\n                        <DSTypeAhead\r\n                            handleUsers={handleTypeAheadUsers}\r\n                            onFocus={onUserInputFocus}\r\n                            selectedItem={selectedUsers}\r\n                            userInputIconOn={userInputIconOn}\r\n                            onUserInputIconOn={(toggle) => setUserInputIconOn(toggle)}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        canGivePoints && (\r\n                            <div className={classNames(\r\n                                'row',\r\n                                'shoutout-user-select',\r\n                                classes.input_row_style,\r\n                            )}>\r\n                                <ImpactValueSelector\r\n                                    carrots={carrots}\r\n                                    impact={impact}\r\n                                    onChange={handleImpactValueChange}\r\n                                    options={impactLevels}\r\n                                    selectedUsers={selectedUsers}\r\n                                    mePointsToGive={mePointsToGive}\r\n                                    carrotsPerPost={carrotsPerPost}\r\n                                    error={carrotError}\r\n                                    canGiveCustomAmount={canGiveCustomAmount && canGivePoints}\r\n                                    canGivePoints={canGivePoints}\r\n                                    onImpactOpen={onImpactOpen}\r\n                                    onImpactClose={onImpactClose}\r\n                                    customCurrency={customCurrency}\r\n                                    customCompanyIcon={customCompanyIcon}\r\n                                    inputIconOn={inputIconOn}\r\n                                    onInputIconOn={(toggle) => setInputIconOn(toggle)}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    }\r\n                    <div className={classNames(\r\n                                'row',\r\n                                'shoutout-user-select',\r\n                                classes.input_row_style,\r\n                    )}>\r\n                        <MessageInput\r\n                            handleMessage={handleMessage}\r\n                            editorState={editorState}\r\n                            error={messageError}\r\n                            minMessageChar={minMessageChar}\r\n                            hasText={messageInputHasText}\r\n                            mentionUsers={mentionUsers}\r\n                            onAddMention={onAddMention}\r\n                            onFocus={handleMessageInputFocus}\r\n                            inputIconMessageOn={inputIconMessageOn}\r\n                            onInputIconMessageOn={(toggle) => setInputIconMessageOn(toggle)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {\r\n                    isMessageTipsVisible && (\r\n                        <div className={classes.p_16}>\r\n                            <GiveRecognitionTips\r\n                                isOpen={isRecognitionOpen}\r\n                                onToggleClick={handleRecognitionTipsToggle}\r\n                                onToggleKeyPress={handleRecognitionTipsToggleKeypress}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                <div className=\"justify-content-end align-items-center\" style={{display: 'flex', padding: 14}}>\r\n                    <div style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                        {\r\n                            badgeAttachability && (\r\n                                <Tooltip title='Danh hiệu' placement='top'>\r\n                                    <IconButton\r\n                                        className={classes.iconButton}\r\n                                        aria-label='Danh hiệu'\r\n                                        onClick={onAddBadgeClick}\r\n                                    >\r\n                                        {\r\n                                            selectedBadge ? (\r\n                                                <img\r\n                                                    className={classes.add_emoji_img}\r\n                                                    alt='badges'\r\n                                                    title={getImageTitleForBadge(selectedBadge)}\r\n                                                    src={getImageForBadgeIcon(selectedBadge)} />\r\n                                            ) : (\r\n                                            <AdjustIcon /> )\r\n                                        }\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className={classes.gc_button}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            type=\"submit\"\r\n                            disabled={giveButtonDisabled}\r\n                        >\r\n                            {\r\n                            /* {givePrivately\r\n                            ? 'Give Privately'\r\n                            : titleize(GIVE_RECOGNITION)} */\r\n\r\n                            titleize('gửi lời cảm ơn')}\r\n                        </Button>\r\n                        <Snackbar open={openMessage} autoHideDuration={2000} onClose={handleCloseMessage}>\r\n                            <Alert onClose={handleCloseMessage} severity=\"success\">\r\n                                Bạn đã gửi thành công...\r\n                            </Alert>\r\n                        </Snackbar>\r\n                    </div>\r\n                </div>\r\n                <Popover\r\n                    open={open}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'center',\r\n                    }}\r\n                >\r\n                    <BadgesSelector \r\n                        updateSelected={(badge) => onUpdateSelectedBadge(badge)}\r\n                        selectedBadge={selectedBadge}\r\n                    />\r\n                </Popover>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostRecognition","import React from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport CarrotIcon from './CarrotIcon';\r\nimport moment from 'moment';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { StoreContext } from '../store/StoreContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    balance_container: {\r\n        border: '.5px solid #EEEEEE',\r\n        background: '#FFFFFF',\r\n        borderRadius: 2,\r\n        marginBottom: 10,\r\n    },\r\n    redeem_container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        padding: '16px 25px'\r\n    },\r\n    balance_carrots: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        fontSize: 34,\r\n        color: '#2c2c2c',\r\n        alignItems: 'center'\r\n    },\r\n    giving_container: {\r\n        paddingLeft: 10\r\n    },\r\n    remaining_container: {\r\n        color: '#2c2c2c',\r\n        fontSize: 12,\r\n        fontWeight: 700\r\n    },\r\n    date_container: {\r\n        color: '#2c2c2c',\r\n        fontSize: 12\r\n    }\r\n}));\r\n\r\nconst StyledTabs = withStyles({\r\n    root: {\r\n        background: '#f6f6f6'\r\n    },\r\n    indicator: {\r\n      backgroundColor: '#EEEEEE',\r\n    },\r\n})(Tabs);\r\n  \r\nconst StyledTab = withStyles(() => ({\r\n    root: {\r\n        textTransform: 'none',\r\n        color: '#2C2C2C',\r\n        // fontSize: 16,\r\n        fontWeight: 'bold',\r\n        letterSpacing: '.5px',\r\n        '&:focus': {\r\n        outline: 'none'\r\n        },\r\n    },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nfunction Balance (props) {\r\n    const classes = useStyles();\r\n    let showEarnedBalance = true;\r\n    let showAllowance = true;\r\n    const { points_earned } = React.useContext(StoreContext);\r\n    const { remaining_point } = React.useContext(StoreContext);\r\n    \r\n    const { slideIndex, onHandleChange } = props;\r\n    const customCompanyIcon = {\r\n        type: 'emoji',\r\n        value: {\r\n            hexCode: \"02764\",\r\n            id: \"heart\"\r\n        }\r\n    }\r\n\r\n    const handleChange = (event, newValue) => {\r\n        onHandleChange(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.balance_container}>\r\n            <StyledTabs value={slideIndex}\r\n                variant='fullWidth'\r\n                onChange={handleChange}\r\n            >\r\n                {\r\n                    showEarnedBalance && <StyledTab value={0} label=\"Số ❤️ nhận được\" />\r\n                }\r\n                {\r\n                    showAllowance && <StyledTab value={1} label=\"Số ❤️ còn lại\" />\r\n                }\r\n            </StyledTabs>\r\n            {\r\n                slideIndex === 0 && (\r\n                    <div className={classes.redeem_container}>\r\n                        <div className={classes.balance_carrots}>\r\n                            {points_earned}\r\n                            <CarrotIcon\r\n                                style={{fontSize: 24, fontFamily: 'Segoe UI Emoji'}}\r\n                                active\r\n                                url={customCompanyIcon}/>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            {\r\n                slideIndex === 1 && (\r\n                    <div className={classes.redeem_container}>\r\n                        <div className={classes.balance_carrots}>\r\n                            <div>\r\n                                {remaining_point}\r\n                            </div>\r\n                            <CarrotIcon\r\n                                style={{ fontSize: 24, fontFamily: 'Segoe UI Emoji' }}\r\n                                active\r\n                                url={customCompanyIcon}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.giving_container}>\r\n                            <div className={classes.remaining_container}>\r\n                                Số dư\r\n                            </div>\r\n                            <div className={classes.date_container}>\r\n                                Được làm mới vào ngày:{' '}\r\n                                {moment()\r\n                                .add(1, 'months')\r\n                                .startOf('month')\r\n                                .format('D/M/YY')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Balance","export const getter = (keys, hash) => {\r\n    keys.reduce((newHash, key) => ((newHash && newHash[key]) ? newHash[key] : null), hash);\r\n}","import React from 'react';\r\nimport ReactHoverObserver from 'react-hover-observer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport classNames from 'classnames';\r\nimport { getProfileFullName } from '../assets/Util/text';\r\nimport { getBadgeObjectForName, getImageForBadge } from '../assets/Util/BadgesInfo';\r\nimport CarrotIcon from './CarrotIcon';\r\nimport { ProfilePic } from '../assets/Util/profilePic';\r\n\r\nconst useStyle = makeStyles({\r\n    feed_card_header_text: {\r\n        flexFlow: 'row wrap',\r\n        display: 'flex',\r\n        alignItems: 'baseline'\r\n    },\r\n    username_clickable: {\r\n        cursor: 'pointer',\r\n        color: '#2c2c2c'\r\n    },\r\n    feed_card_from: {\r\n        fontWeight: 600,\r\n        whiteSpace: 'normal',\r\n        // fontSize: 14\r\n    },\r\n    feed_card_to: {\r\n        fontWeight: 600,\r\n        whiteSpace: 'normal',\r\n        // fontSize: 14\r\n    },\r\n    feed_card_badge_img: {\r\n        width: 20,\r\n        height: 20,\r\n        margin: '0 3px',\r\n        whiteSpace: 'normal'\r\n    },\r\n    username_clickable_to_span: {\r\n        color: '#f40',\r\n        cursor: 'pointer'\r\n    },\r\n    feed_card_carrots: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        margin: '16px 0',\r\n        padding: 12,\r\n        color: '#2c2c2c'\r\n    },\r\n    users_list_container: {\r\n        position: 'relative',\r\n        cursor: 'pointer',\r\n        color: '#2C2C2C'\r\n    },\r\n    users_list_hover : {\r\n        position: 'absolute',\r\n        width: 300,\r\n        top: 20,\r\n        left: -10,\r\n        zIndex: 99,\r\n        borderRadius: 2,\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        backgroundColor: 'white',\r\n        transition: 'transform 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, opacity 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\r\n        boxSizing: 'border-box',\r\n        WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)',\r\n        boxShadow: 'rgba(0, 0, 0, 0.12) 0px 1px 6px, rgba(0, 0, 0, 0.12) 0px 1px 4px',\r\n        overflowY: 'auto'\r\n    }\r\n})\r\n\r\nconst ClickableFromUserName = ({ user }) => {\r\n    // const onClick = () => {\r\n    //   onUserClicked(user);\r\n    // };\r\n    const classes = useStyle();\r\n    return (\r\n      <p\r\n        // onClick={onClick}\r\n        className={\r\n          user.isDeleted\r\n            ? classNames(classes.username_clickable, classes.feed_card_from, classes.deactivated_user)\r\n            : classNames(classes.username_clickable , classes.feed_card_from)\r\n        }\r\n        style={{ marginBottom: 0 }}\r\n      >\r\n        {user.isDeleted ? 'Deactivated User' : getProfileFullName(user)}\r\n      </p>\r\n    );\r\n};\r\n\r\nconst ClickableUserName = ({ user }) => {\r\n    // const onClick = () => {\r\n    //     onUserClicked(user);\r\n    // };\r\n    const classes = useStyle();\r\n    return (\r\n        <p\r\n        // onClick={onClick}\r\n          className={\r\n            user.isDeleted ? 'deactivated_user' : classes.username_clickable_to_span\r\n          }\r\n          style={{ marginBottom: 0 }}\r\n        >\r\n          {user.isDeleted ? 'Deactivated User' : getProfileFullName(user)}\r\n        </p>\r\n    )\r\n}\r\n\r\nfunction FeedCardTitle(props) {\r\n    const classes = useStyle();\r\n    // const to = props.to.users;\r\n\r\n    const hasBadge = () => {\r\n        const badge = props.badges && props.badges.length > 0\r\n            ? getBadgeObjectForName(props.badges[0])\r\n            : null\r\n        if (badge) {\r\n            return (\r\n                <span className={classes.feed_card_gave}>\r\n                    &nbsp;đã cảm ơn và trao danh hiệu{' '}\r\n                    <img className={classes.feed_card_badge_img}\r\n                        alt={badge.displayName}\r\n                        title={badge.displayName}\r\n                        src={getImageForBadge(badge, true)}\r\n                    />\r\n                    {badge.displayName} cho&nbsp;\r\n                </span>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <span className={classes.feed_card_gave} style={{ display: 'contents', marginBottom: 0 }}>\r\n                    &nbsp;đã cảm ơn&nbsp;\r\n                </span>\r\n            )\r\n        }\r\n    }\r\n\r\n    const UserNameComponent = (props) => {\r\n        const onClickListItem = (user) => {\r\n            // onUserClicked(user)\r\n            console.log('onUserClicked')\r\n        }\r\n        const usersToShow = Array.from(props.users);\r\n        usersToShow.shift();\r\n        return (\r\n            <div className={classes.users_list_container} style={{display: 'flex'}}>\r\n                <ClickableUserName \r\n                    user={props.users[0]}\r\n                    isTo\r\n                    // onUserClicked={onUserClicked}\r\n                />\r\n                &nbsp;và {`${props.users.length - 1} người khác`}\r\n                {\r\n                    props.isHovering && (\r\n                        <div className={classes.users_list_hover}>\r\n                            <List>\r\n                                {\r\n                                    usersToShow.map((user) => (\r\n                                        <ListItem\r\n                                            button\r\n                                            key={user.id}\r\n                                            onClick={(user) => onClickListItem(user)}\r\n                                        >\r\n                                            <ListItemAvatar>\r\n                                                <ProfilePic size={40} user={user} />\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={getProfileFullName(user)} />\r\n                                        </ListItem>\r\n                                    ))\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.feed_card_header_text}>\r\n            <ClickableFromUserName \r\n                user={props.from}\r\n                // onUserClicked={onUserClicked()}\r\n            />\r\n            {hasBadge()}\r\n            {props.to.length > 2 ? (\r\n                <span className={classes.feed_card_to} style={{ display: 'flex' }}>\r\n                    <ReactHoverObserver>\r\n                        <UserNameComponent\r\n                            users={props.to}\r\n                            // onUserClicked={onUserClicked}\r\n                        />\r\n                    </ReactHoverObserver>\r\n                </span>\r\n            ) : Number(props.to.length) === 1 ? (\r\n                <span className={classes.feed_card_to} style={{display: 'flex'}}>\r\n                    <ClickableUserName\r\n                        user={props.to[0]}\r\n                        // isTo\r\n                        // onUserClicked={this.onUserClicked}\r\n                    />\r\n                </span>\r\n            ) : (\r\n                <span className={classes.feed_card_to} style={{display: 'flex'}}>\r\n                    <ClickableUserName\r\n                        user={props.to[0]}\r\n                        // isTo\r\n                        // onUserClicked={this.onUserClicked}\r\n                    />\r\n                    <span className=\"feed-card-gave\">&nbsp;and&nbsp;</span>\r\n                    <ClickableUserName\r\n                        user={props.to[1]}\r\n                        // isTo\r\n                        // onUserClicked={this.onUserClicked}\r\n                    />\r\n                </span>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeedCardTitle;\r\n\r\nexport const FeedValue = (props) => {\r\n    const classes = useStyle();\r\n    return (\r\n        <div className={classes.feed_card_carrots}>\r\n            <div>{props.value}</div>\r\n            <CarrotIcon\r\n                style={{ fontSize: 20, fontFamily: 'Segoe ui emoji' }}\r\n                active\r\n                url={props.customCompanyIcon}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport ReactHoverObserver from 'react-hover-observer';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { getter } from '../assets/Util/object';\r\nimport { ProfilePic } from '../assets/Util/profilePic';\r\nimport { getAgoTime } from '../assets/Util/time';\r\nimport { getPostFormattedMessage } from '../assets/Util/text';\r\nimport { getProfileFullName } from '../assets/Util/text';\r\nimport FeedCardTitle, { FeedValue } from './FeedComponent';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport classNames from 'classnames';\r\nimport axios from 'axios';\r\nimport { StoreContext } from '../store/StoreContext';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\n\r\nconst StyledCard = withStyles({\r\n    root: {\r\n        background: '#FFFFFF',\r\n        border: '0.5px solid #EEEEEE',\r\n        boxSizing: 'border-box',\r\n        borderRadius: 2,\r\n        boxShadow: 'none',\r\n        overflow: 'visible',\r\n    }\r\n})(Card);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        // marginLeft: '5px',\r\n        // marginRight: '5px',\r\n        marginBottom: '12px',\r\n    },\r\n    feed_card_header: {\r\n        display: 'flex',\r\n        padding: 16,\r\n        position: 'relative'\r\n    },\r\n    feed_card_title: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        paddingRight: 45,\r\n        marginLeft: 16\r\n    },\r\n    feed_carrot_value: {\r\n        display: 'inline-block',\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 4,\r\n        color: '#000',\r\n        fontSize: 18,\r\n        fontWeight: 700\r\n    },\r\n    feed_card_carrots: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        margin: '16px 0',\r\n        padding: 12,\r\n        color: '#2c2c2c'\r\n    },\r\n    feed_carrot_time: {\r\n        color: 'rgba(0,0,0,.54)',\r\n        // fontSize: 14\r\n    },\r\n    feed_card_message: {\r\n        color: '#2c2c2c',\r\n        padding: '0 16px 16px',\r\n        whiteSpace: 'pre-wrap',\r\n        fontWeight: 400,\r\n        // fontSize: 14\r\n    },\r\n    feed_card_action: {\r\n        padding: '0 14px 6px',\r\n        display: 'flex',\r\n        justifyContent: 'flex-start'\r\n    },\r\n    iconButton: {\r\n        color: '#9E9E9E',\r\n        '&:focus': {\r\n          outline: 'none',\r\n        },\r\n    },\r\n    commentOn: {\r\n        color: '#0AD71C',\r\n    },\r\n    heartOn: {\r\n        color: '#2772FE',\r\n    },\r\n    privateIcon: {\r\n        marginRight: 5,\r\n    },\r\n    taggedUser: {\r\n        color: 'red',\r\n    },\r\n    username_clickable_to_span: {\r\n        color: '#f40',\r\n        cursor: 'pointer'\r\n    },\r\n    users_list_container: {\r\n        position: 'relative',\r\n        cursor: 'pointer',\r\n        color: '#2C2C2C'\r\n    },\r\n    users_list_hover : {\r\n        position: 'absolute',\r\n        width: 300,\r\n        top: 20,\r\n        left: -10,\r\n        zIndex: 99,\r\n        borderRadius: 2,\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        backgroundColor: 'white',\r\n        transition: 'transform 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, opacity 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\r\n        boxSizing: 'border-box',\r\n        WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)',\r\n        boxShadow: 'rgba(0, 0, 0, 0.12) 0px 1px 6px, rgba(0, 0, 0, 0.12) 0px 1px 4px',\r\n        overflowY: 'auto'\r\n    }\r\n}));\r\n\r\nconst renderAvatar = (card) => {\r\n    const feedType = getter(['card', 'type'], card) || 'recognition';\r\n    switch (feedType) {\r\n        case 'recognition':\r\n        default: {\r\n            return (\r\n            <div style={{width: 40, height: 40}}>\r\n                <ProfilePic size={40} user={card.from} />\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst customCompanyIcon = {\r\n    type: 'emoji',\r\n    value: {\r\n        hexCode: \"02764\",\r\n        id: \"heart\"\r\n    }\r\n}\r\n\r\nfunction FeedCard(props) {\r\n    const classes = useStyles();\r\n    const { card }= props;\r\n    \r\n    const feedType = getter(['card', 'type'], card) || 'recognition';\r\n    const [didILike, setDidILike] = useState(card.liked);\r\n    const { token } = React.useContext(StoreContext);\r\n    const onFavouriteClick = () => {\r\n        //callAPI\r\n        axios.get(`https://camon.twgroup.vn/api/v1/feed/${card.id}/like`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token\r\n            }\r\n        }).then((res) => {\r\n            //setCardState(res.data.data);\r\n            setDidILike(!didILike)\r\n\r\n        })\r\n    }\r\n\r\n    const UserNameComponent = (props) => {\r\n        const {isHovering, users, onUserClicked} = props;\r\n        const usersToShow = Array.from(users);\r\n        const classes = useStyles()\r\n    \r\n        const onClick = (user) => {\r\n            // onUserClicked(user);\r\n        }\r\n        \r\n        return (\r\n            <div className={classes.users_list_container}>\r\n                {card.likes.length > 0 && card.likes.length}\r\n                {\r\n                    isHovering && (\r\n                        <div className={classes.users_list_hover}>\r\n                            <List>\r\n                                {usersToShow.map((user) => (\r\n                                    <ListItem\r\n                                        button\r\n                                        key={user.id}\r\n                                        onClick={() => onClick(user)}\r\n                                    >\r\n                                        <ListItemAvatar>\r\n                                            <ProfilePic size={40} user={user} />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText primary={getProfileFullName(user)} />\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <StyledCard key={card.id} className={classes.card}>\r\n            <div className={classes.feed_card_header}>\r\n                {renderAvatar(card)}\r\n                <div className={classes.feed_card_title}>\r\n                    {\r\n                        feedType === 'recognition' ? (\r\n                            <FeedCardTitle\r\n                                to={card.to}\r\n                                from={card.from}\r\n                                badges={card.badges}\r\n                                coreValue={card.coreValue}\r\n                            />\r\n                        ) : (\r\n                            // <FeedAnniversaryTitle to={this.props.card.to} type={feedType} />\r\n                            <div>FeedAnniversaryTitle</div>\r\n                        )\r\n                    }\r\n                    <span className={classes.feed_carrot_time} style={{ display: 'flex', alignItems: 'center' }}>\r\n                        {getAgoTime(card.created_at)}\r\n                    </span>\r\n                </div>\r\n                {card.carrots_each > 0 && (\r\n                    <div className={classes.feed_carrot_value}>\r\n                    <FeedValue\r\n                        customCompanyIcon={customCompanyIcon}\r\n                        value={ card.carrots_each * card.to.length }\r\n                    />\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className={classes.feed_card_message}>\r\n                {getPostFormattedMessage(\r\n                    card.message,\r\n                    card.taggedUsers\r\n                    // this.onUserClicked,\r\n                )}\r\n            </div>\r\n            <div className={classes.feed_card_action}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between', width: '100%', }}>\r\n                    <div style={{ display: 'flex' }}>\r\n                        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                            <IconButton\r\n                                onClick={onFavouriteClick}\r\n                                className={\r\n                                    didILike\r\n                                    ? classNames(classes.iconButton, classes.heartOn)\r\n                                    : classes.iconButton\r\n                                }\r\n                                component=\"span\"\r\n                                aria-label=\"Favourite\"\r\n                            >\r\n                                <ThumbUpIcon />\r\n                            </IconButton>\r\n                            {\r\n                                card.likes.length > 0 && (\r\n                                    <ReactHoverObserver>\r\n                                        <UserNameComponent\r\n                                            users={card.likes}\r\n                                            // onUserClicked={onUserClicked}\r\n                                        />\r\n                                    </ReactHoverObserver>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </StyledCard>\r\n    )\r\n}\r\n\r\nexport default FeedCard","import moment from 'moment';\r\n\r\nexport const getAgoTime = (serTime) => {\r\n    const time = moment(serTime);\r\n\r\n    if (Math.abs(moment().diff(time)) < 1000) {\r\n        return 'just now';\r\n    }\r\n\r\n    return time.fromNow();\r\n}","import React, { useEffect, useState } from 'react';\r\nimport FeedCard from './FeedCard';\r\nimport axios from 'axios';\r\nimport { StoreContext } from '../store/StoreContext';\r\n\r\nfunction Feed() {\r\n    const [homeFeed, setHomeFeed] = useState([]);\r\n    const { token, me } = React.useContext(StoreContext);\r\n\r\n    useEffect(() => {\r\n        axios('https://camon.twgroup.vn/api/v1/feed', {\r\n            method: 'get',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token\r\n            }\r\n        }).then((res) => {\r\n            const data = res.data.data.map(card => ({\r\n                ...card,\r\n                liked: card.likes.some((user) => {\r\n                        if(user.id === me) {\r\n                            return true\r\n                        }\r\n                        return false\r\n                    }\r\n                )\r\n                \r\n            }))\r\n            setHomeFeed(data)\r\n        })\r\n    }, [me, token]);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                homeFeed.map((feed) => (\r\n                    <FeedCard key={feed.id} card={feed} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed;","import React from 'react';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n  toggleOverlay: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    right: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    zIndex: '99',\r\n  },\r\n  paper: {\r\n    background: '#fff',\r\n    boxShadow: '0px 2px 7px rgba(0, 0, 0, 0.15)',\r\n    overflow: 'hidden',\r\n    zIndex: 9999,\r\n  },\r\n};\r\n\r\nfunction DropdownMenu (props) {\r\n    const {classes, open, onClose, anchorEl, children, placement} = props;\r\n\r\n    // const [dropdownMenu, setDropdownMenu] = useState(false);\r\n    // const [actionsPopover, setActionsPopover] = useState(null);\r\n  \r\n    // const onActionClick = (e) => {\r\n    //     e.preventDefault();\r\n    //     setDropdownMenu(!dropdownMenu);\r\n    // }\r\n\r\n    // const handleActionsPopoverClose = () => {\r\n    //     setActionsPopover(false)\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            {open && (\r\n                <div className={classes.toggleOverlay} onClick={onClose}></div>\r\n            )}\r\n            <Popper\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                style={{ zIndex: 9999 }}\r\n                placement={placement ? placement : 'bottom'}\r\n                transition\r\n            >\r\n                {({ TransitionProps }) => (\r\n                    <Fade {...TransitionProps} timeout={350}>\r\n                    <div className={classes.paper}>{children}</div>\r\n                    </Fade>\r\n                )}\r\n            </Popper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(DropdownMenu);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport DropIcon from '@material-ui/icons/ArrowDropDown';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DropdownMenu from '../components/DropdownMenu';\r\nimport { getProfileFullName } from '../assets/Util/text';\r\nimport classNames from 'classnames';\r\nimport axios from 'axios';\r\nimport { StoreContext } from '../store/StoreContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    right_column_box: {\r\n        position: 'relative',\r\n        background: '#FFFFFF',\r\n        border: '0.5px solid #EEEEEE',\r\n        borderRadius: 2,\r\n        padding: 20,\r\n        marginBottom: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap'\r\n    },\r\n    right_column_header: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        flexGrow: 1\r\n    },\r\n    right_column_header_text: {\r\n        fontWeight: 700,\r\n        // fontSize: 16,\r\n        color: '#2c2c2c',\r\n        flexGrow: 1\r\n    },\r\n    dropIcon: {\r\n        position: 'absolute',\r\n        right: 2,\r\n        color: '#4A4A4A',\r\n    },\r\n    top_receivers_row_div: {\r\n        position: 'relative',\r\n        borderBottom: '1px solid #e0e0e0',\r\n        paddingBottom: 5,\r\n        paddingTop: 5\r\n    },\r\n    top_receivers_name: {\r\n        color: '#2c2c2c',\r\n        // fontSize: 14,\r\n        paddingRight: 40,\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    top_receivers_carrots: {\r\n        display: 'flex',\r\n        position: 'absolute',\r\n        right: 0\r\n    },\r\n    top_receivers_carrots_text: {\r\n        color: '#212121',\r\n        // fontSize: 14,\r\n        fontWeight: 700\r\n    }\r\n}));\r\n\r\nconst StyledButton = withStyles({\r\n    root: {\r\n        textTransform: 'none',\r\n        // width: 160,\r\n        minHeight: 30,\r\n        padding: '5px 8px',\r\n        paddingRight: 28,\r\n        position: 'relative',\r\n        '&:focus': {\r\n            outline: 'none',\r\n        }\r\n    },\r\n    label: {\r\n        color: '#4A4A4A',\r\n        fontSize: 15,\r\n        justifyContent: 'start',\r\n        fontWeight: 'lighter',\r\n    },\r\n})(Button);\r\n\r\n\r\nfunction TopReceivers() {\r\n    const classes = useStyles();\r\n    const [topEarnedUsers , setTopEarnedUsers] = useState([])\r\n    const [value, setValue] = useState(1);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const { token } = React.useContext(StoreContext);\r\n\r\n    useEffect(()=> {\r\n        axios.get('https://camon.twgroup.vn/api/v1/home/sidebar', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token\r\n            }\r\n        }).then((res) => {\r\n            setTopEarnedUsers(res.data.data.top_earned_users)\r\n        })\r\n    },[token])\r\n\r\n    const handleOptionClick = (event) => {\r\n        setAnchorEl(anchorEl ? null : event.currentTarget);\r\n    }\r\n\r\n    const handleMenuItemClick = (e, idx) => {\r\n        let filterBy;\r\n        if (idx === 1) {\r\n            filterBy = 'monthly';\r\n        }\r\n\r\n        else if (idx === 2) {\r\n            filterBy = 'quarterly';\r\n        }\r\n\r\n        else {\r\n            filterBy = 'alltime';\r\n        }\r\n\r\n        //dispatch action\r\n        // this.props.dispatch(getSidebarInfoAction(filterBy));\r\n        setValue(idx);\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const onUserClicked = (user) => {\r\n        //call API\r\n        // this.props.dispatch(uiActions.showUserProfile(user));\r\n        alert(\"click user\");\r\n    }\r\n    \r\n    const getTopReceiversSorted = () => {\r\n        \r\n        let sorted = topEarnedUsers.sort((a, b) => a.count < b.count);\r\n        sorted = sorted.length > 5 ? sorted.slice(0, 5) : sorted;\r\n        return sorted;\r\n    };\r\n\r\n    let buttonLabel;\r\n\r\n    if (value === 1) {\r\n      buttonLabel = 'Tháng';\r\n    }\r\n\r\n    else if (value === 2) {\r\n      buttonLabel = 'Quý';\r\n    }\r\n\r\n    else {\r\n      buttonLabel = 'Tất cả';\r\n    }\r\n\r\n    const isEmpty = topEarnedUsers.length === 0;\r\n\r\n    const CarrotText = (props) => (\r\n      <div className={classes.top_receivers_carrots}>\r\n        <div\r\n          className={classes.top_receivers_carrots_text}\r\n          style={{ marginRight: 10 }}\r\n        >\r\n          {props.value}\r\n        </div>\r\n        {/* <img src={ic_gc_carrot} alt=\"carrot\" className=\"allowance-change-carrrot__img\" /> */}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.right_column_box}>\r\n            <div className={classes.right_column_header}>\r\n                <div className={classes.right_column_header_text}>\r\n                    Cá nhân có sức ảnh hưởng\r\n                </div>\r\n                <StyledButton\r\n                    aria-label='Options'\r\n                    aria-owns={anchorEl ? 'menu' : null}\r\n                    aria-haspopup='true'\r\n                    onClick={handleOptionClick}\r\n                >\r\n                    {buttonLabel}\r\n                    <DropIcon className={classes.dropIcon} />\r\n                </StyledButton>\r\n                <DropdownMenu\r\n                    id=\"menu\"\r\n                    anchorEl={anchorEl}\r\n                    open= {Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                    PaperProps={{\r\n                        style: {\r\n                            width: 150,\r\n                        },\r\n                    }}\r\n                >\r\n                    <MenuItem\r\n                        key={1}\r\n                        // selected={this.state.value === 1}\r\n                        onClick={(e) => handleMenuItemClick(e, 1)}\r\n                    >\r\n                        Tháng\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                        key={2}\r\n                        // selected={this.state.value === 1}\r\n                        onClick={(e) => handleMenuItemClick(e, 2)}\r\n                    >\r\n                        Quý\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                        key={3}\r\n                        // selected={this.state.value === 2}\r\n                        onClick={(e) => handleMenuItemClick(e, 3)}\r\n                    >\r\n                        Tất cả\r\n                    </MenuItem>\r\n                </DropdownMenu>\r\n            </div>\r\n            <div className='container' style={{marginTop: '10px'}}>\r\n            {!isEmpty ?\r\n            (\r\n                getTopReceiversSorted().map((receiver) => (\r\n                    <div key={receiver.user.id} className={classNames(\r\n                        'row',\r\n                        'justify-content-start',\r\n                        classes.top_receivers_row_div)}>\r\n                        <div className={classes.top_receivers_name} style={{cursor: 'pointer'}} \r\n                            onClick={() => onUserClicked(receiver.user)}>\r\n                            {getProfileFullName(receiver.user)}\r\n                        </div>\r\n                        <CarrotText value={receiver.count} />\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                    <div className=\"container top_receivers_noname_container\">\r\n                        <div className=\"row justify-content-center medium_icon_popovers\">\r\n                            <span role=\"img\" aria-label=\"Smirking Face\">\r\n                            😏\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"row justify-content-center top_receivers_noname\">\r\n                            No top receivers, yet\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopReceivers","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport { getBadgeObjectForName, getImageForBadge } from '../assets/Util/BadgesInfo';\r\nimport axios from 'axios';\r\nimport { StoreContext } from '../store/StoreContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    right_column_box: {\r\n        position: 'relative',\r\n        background: '#FFFFFF',\r\n        border: '0.5px solid #EEEEEE',\r\n        borderRadius: 2,\r\n        padding: 20,\r\n        marginBottom: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap'\r\n    },\r\n    right_column_header: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        flexGrow: 1\r\n    },\r\n    right_column_header_text: {\r\n        fontWeight: 700,\r\n        // fontSize: 16,\r\n        color: '#2c2c2c',\r\n        flexGrow: 1\r\n    },\r\n    top_receivers_row_div: {\r\n        position: 'relative',\r\n        borderBottom: '1px solid #e0e0e0',\r\n        paddingBottom: 5,\r\n        paddingTop: 5\r\n    },\r\n    top_receivers_name: {\r\n        color: '#2c2c2c',\r\n        // fontSize: 14,\r\n        paddingRight: 40,\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    top_receivers_carrots: {\r\n        display: 'flex',\r\n        position: 'absolute',\r\n        right: 0\r\n    },\r\n    top_receivers_carrots_text: {\r\n        color: '#212121',\r\n        fontSize: 14,\r\n        fontWeight: 700\r\n    },\r\n    top_badges_names: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    top_badges_img: {\r\n        width: 20,\r\n        height: 20,\r\n        marginRight: 5\r\n    }\r\n}));\r\n\r\nfunction TopBadges() {\r\n    const { token } = React.useContext(StoreContext);\r\n    const classes = useStyles();\r\n\r\n    const [topBadges, setTopBadges] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('https://camon.twgroup.vn/api/v1/home/sidebar', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token\r\n            }\r\n        }).then((res) => {\r\n            setTopBadges(res.data.data.top_badges)\r\n        })\r\n    }, [token])\r\n\r\n    const BadgeText = (props) => {\r\n        const badgeObj = getBadgeObjectForName(props.name);\r\n        const badgeImg = getImageForBadge(badgeObj, true);\r\n        return (\r\n          <div className={classes.top_badges_names}>\r\n            <img src={badgeImg} alt={badgeObj.displayName} className={classes.top_badges_img} />\r\n            <div className={classes.top_receivers_name}>{badgeObj.displayName}</div>\r\n          </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={classes.right_column_box}>\r\n            <div className={classes.right_column_header}>\r\n                <div className={classes.right_column_header_text}>\r\n                    Danh hiệu đứng đầu\r\n                </div>\r\n            </div>\r\n            <div className='container' style={{marginTop: '10px'}}>\r\n                <div>\r\n                    {\r\n                        (topBadges && topBadges.length > 0) ?\r\n                            topBadges.map((badge) => (\r\n                                <div key={badge.name} className={classNames(\r\n                                    'row',\r\n                                    'justify-content-start',\r\n                                    classes.top_receivers_row_div)}>\r\n                                        <BadgeText name={badge.name} />\r\n                                        <div className={classNames(classes.top_receivers_carrots, classes.top_receivers_carrots_text)}>\r\n                                            {badge.count}\r\n                                        </div>\r\n                                </div>\r\n                        ))\r\n                        : \r\n                        (\r\n                            <div className=\"container top_receivers_noname_container\">\r\n                                <div className=\"row justify-content-center medium_icon_popovers\">\r\n                                    <span role=\"img\" aria-label=\"Smirking Face\">\r\n                                    🤔\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"row justify-content-center top_receivers_noname\">\r\n                                    No top badges, yet\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBadges","import React, { useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PostRecognition from '../components/PostRecognition';\r\nimport InfoRecognition from '../components/InfoRecognition';\r\nimport Feed from '../components/Feed';\r\nimport TopReceivers from '../components/TopReceivers';\r\nimport TopBadges from '../components/TopBadges';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    fixed_right_panel: {\r\n        position: 'fixed',\r\n        top: 16,\r\n        right: 0,\r\n        overflowY: 'auto',\r\n        maxHeight: 'calc(100vh - 16px)'\r\n    },\r\n}));\r\n\r\nfunction Home () {\r\n    const classes = useStyles();\r\n    const [balanceTabToShow, setBalanceTabToShow] = useState(0);\r\n    const badgeSetStatus = true;\r\n\r\n    const onHandleTabChange = (tabIndex) => {\r\n        setBalanceTabToShow(tabIndex);\r\n    }\r\n    \r\n    return (\r\n        <Container>\r\n            <Row className='position-relative justify-content-start'>\r\n                <Col xs={6} md={6} lg={8} style={{padding: '0px'}}>\r\n                    <PostRecognition\r\n                        switchBalanceTab={onHandleTabChange}\r\n                    />\r\n                    <Feed />\r\n                </Col>\r\n                <Col xs={6} md={6} lg={4} style={{padding: '0 32px'}} className={classes.fixed_right_panel}>\r\n                    <InfoRecognition \r\n                        slideIndex={balanceTabToShow}\r\n                        onHandleChange={onHandleTabChange}\r\n                    />\r\n                    <TopReceivers />\r\n                    {badgeSetStatus && <TopBadges />}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport './sass/main.scss';\r\nimport Home from './pages/Home';\r\n// import NavigationBar from './components/NavigationBar';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n        {/* <NavigationBar /> */}\r\n        <main className=\"main-content\">\r\n            <section>\r\n                <Home />\r\n            </section>\r\n        </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport StoreProvider from './store/StoreContext';\r\n\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\r\nimport { CssBaseline } from '@material-ui/core';\r\n\r\nconst LIGHT = 300;\r\nconst REGULAR = 400;\r\nconst SEMIBOLD = 500;\r\nconst BOLD = 600;\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#FF4400',\r\n    },\r\n    secondary: {\r\n      main: '#0AD71C',\r\n    },\r\n    text: {\r\n      main: 'red',\r\n    },\r\n  },\r\n  props: {\r\n    MuiDialogTitle: {\r\n      disableTypography: true,\r\n    },\r\n    MuiButtonBase: {\r\n      disableRipple: true,\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      '@global': {\r\n        button: {\r\n          '&:focus': {\r\n            outline: 'none !important',\r\n          },\r\n        },\r\n        body: {\r\n          backgroundColor: '#f6f6f6',\r\n        },\r\n      },\r\n    },\r\n    MuiIconButton: {\r\n      root: {\r\n        '&:focus': {\r\n          outline: 'none !important',\r\n        },\r\n        padding: 4\r\n      },\r\n    },\r\n    MuiFormLabel: {\r\n      // Name of the component ⚛️ / style sheet\r\n      root: {\r\n        // Name of the rule\r\n        color: 'rgb(0,0,0,0.38)', // Some CSS\r\n      },\r\n    },\r\n    MuiInput: {\r\n      root: {\r\n        fontSize: '1rem',\r\n      },\r\n      underline: {\r\n        '&:after': {\r\n          borderBottom: '2px solid #FF4400',\r\n          transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\r\n        },\r\n        '&:before': {\r\n          borderBottom: '1px solid rgb(224, 224, 224)',\r\n        },\r\n        '&:hover:before': {\r\n          borderBottom: '1px solid rgb(224, 224, 224) !important',\r\n        },\r\n      },\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        boxShadow: 'none',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        },\r\n      },\r\n      containedPrimary: {\r\n        boxShadow: 'none',\r\n        color: '#FFF',\r\n        minWidth: 80,\r\n        backgroundColor: '#FF704C',\r\n        '&:hover': {\r\n          color: '#FFF',\r\n          backgroundColor: '#FF9D78',\r\n          boxShadow: 'none'\r\n        },\r\n        '&:focus': {\r\n            backgroundColor: '#DB4C37'\r\n        }\r\n      },\r\n      containedSecondary: {\r\n        boxShadow: 'none',\r\n        color: '#FFF',\r\n        '&:hover': {\r\n          color: '#FFF',\r\n        },\r\n      },\r\n    },\r\n    MuiDialogTitle: {\r\n      root: {\r\n        color: '#000',\r\n        fontSize: 20,\r\n        fontWeight: 500,\r\n      },\r\n    },\r\n  },\r\n  typography: {\r\n    fontWeightLight: LIGHT,\r\n    fontWeightRegular: REGULAR,\r\n    fontWeightSemibold: SEMIBOLD,\r\n    fontWeightBold: BOLD,\r\n    fontSize: 16,\r\n    htmlFontSize: 16,\r\n    fontFamily: ['IBM Plex Sans', 'sans-serif'].join(','),\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <MuiThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <StoreProvider>\r\n                <App />\r\n            </StoreProvider>\r\n        </MuiThemeProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}