{"version":3,"sources":["assets/images/badges/closer_badge.png","assets/images/badges/creativity_badge.png","assets/images/badges/culture_badge.png","assets/images/badges/detail_master_badge.png","assets/images/badges/goal_smasher_badge.png","assets/images/badges/idea_maker_badge.png","assets/images/badges/initiative_badge.png","assets/images/badges/innovator_badge.png","assets/images/badges/launcher_badge.png","assets/images/badges/leadership_badge.png","assets/images/badges/lifesaver_badge.png","assets/images/badges/motivator_badge.png","assets/images/badges/navigator_badge.png","assets/images/badges/obstacle_badge.png","assets/images/badges/problem_solver_badge.png","assets/images/badges/teamwork_badge.png","assets/images/badges/top_earner_badge.png","assets/Util/text.js","assets/Util/profilePic.js","store/StoreContext.js","components/give-carrot/DSTypeAhead.jsx","components/V2/StyledModal.jsx","components/V2/theme.js","components/V2/StyledCloseButton.jsx","components/V2/StyledButton.jsx","components/V2/CustomTypography.jsx","components/V2/HelpText.jsx","components/CarrotIcon.jsx","components/V2/CustomCarrotInputField.jsx","components/give-carrot/CustomImpactModal.jsx","components/give-carrot/ImpactSelectorItem.jsx","components/give-carrot/ImpactValueSelector.jsx","components/V2/CustomMentionSuggesstions.jsx","components/V2/CustomEditor.jsx","components/give-carrot/MessageInput.jsx","components/atom/Body.jsx","assets/Util/constants.js","components/give-carrot/GiveRecognitionTips.jsx","assets/Util/BadgesInfo.js","components/give-carrot/BadgesItem.jsx","components/give-carrot/BadgesSelector.jsx","assets/Util/mention.js","components/atom/StyledTabs.jsx","components/PostRecognition.jsx","components/Balance.jsx","assets/Util/object.js","components/FeedComponent.js","components/FeedCard.jsx","assets/Util/time.js","components/Feed.jsx","components/DropdownMenu.jsx","components/TopReceivers.jsx","components/TopBadges.jsx","pages/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MENTION_REGEX","getProfileFullName","user","profile","first_name","last_name","useStyles","makeStyles","avatar","margin","avatarColor","props","color","backgroundColor","fontWeight","width","size","height","fontSize","avatarImage","UserNameAvatar","firstLetter","isDeleted","slice","toUpperCase","getFirstLetterOfName","colorProp","bg","getColor","styleProps","classes","Avatar","className","ProfilePic","src","lastChar","id","substr","length","charCodeAt","StoreContext","React","createContext","queryString","window","location","search","emailLogin","URLSearchParams","get","sessionStorage","getItem","children","useState","token","setToken","me","setMe","points_earned","setPointEarned","remaining_point","setRemainingPoint","useEffect","axios","post","then","res","data","store","Provider","value","theme","root","display","position","zIndex","paper","left","right","maxHeight","overflowY","marginTop","marginLeft","background","boxShadow","borderRadius","iconWrapper","justifyContent","alignItems","iconStyle","cursor","iconInactiveStyle","filter","chip","chipAvatar","chipRoot","chipLabel","palette","text","main","paddingLeft","chipDeleteIcon","inputRoot","flexWrap","inputStyle","flexGrow","menuSelected","autocomplete_user_fullname","letterSpacing","autocomplete_user_username_focus","autocomplete_user_username","DSTypeAhead","handleUsers","onFocus","selectedItem","userInputIconOn","onUserInputIconOn","inputValue","setInputValue","employees","setEmployees","useContext","a","headers","fetchEmployees","handleInputChange","e","target","handleDelete","item","postSelectedItem","splice","indexOf","handleUserInputIconStyleOff","onUserInputFocus","selectedUsers","handleKeyDown","keycode","renderOption","index","itemProps","highlightedIndex","disabled","isHighlighted","MenuItem","key","selected","user_name","findUsers","count","firstName","email","keep","toLowerCase","onChange","getInputProps","getItemProps","isOpen","inputValue2","openMenu","closeMenu","classNames","iconActiveStyle","onClick","inputRef","focus","role","aria-label","style","inputProps","InputProps","ref","other","TextField","autoComplete","input","underline","renderInput","fullWidth","startAdornment","map","find","u","Chip","tabIndex","label","deleteIcon","onDelete","onKeyDown","placeholder","event","onBlur","Paper","square","renderOptions","top","transform","padding","breakpoints","down","StyledModal","Modal","aria-labelledby","aria-describedby","open","onClose","handleClose","BackdropProps","mixBlendMode","opacity","customClass","blue","60","primary","secondary","gray","0","10","20","white","typography","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightSemibold","fontWeightBold","breakPoints","lg","md","sm","xs","animations","AdminMain","prop","y","duration","stagger","modalCloseButton","fill","ThemeV2","lightGray1","transition","darkGray3","StyledCloseButton","rest","viewBox","xmlns","d","StyledButton","withStyles","contained","themeV2","greenLight","drakGray2","textDecoration","green","containedPrimary","darken","containedSecondary","textTransform","fontFamily","fontStyle","fontStretch","lineHeight","textAlign","Button","styles","darkText","adminRoot","adminFontFamily","getFontWeight","weight","CustomTypography","Typography","defaultProps","userSelect","red2","error","FormHelperText","classnames","CarrotIcon","active","url","currency","blendMode","type","emojiType","_","String","fromCodePoint","parseInt","hexCode","alt","SvgIcon","stroke","strokeWidth","fillRule","cx","cy","r","textFieldWrapper","borderTop","borderBottom","borderLeft","helperText","inputWrapper","flexDirection","marginBottom","border","outline","borderColor","CustomCarrotInputField","errorClass","inputChar","customCompanyIcon","textField","buttonHolder","button","CustomImpactModal","maxGivingAllowance","availablePoints","availablePointsToGive","maxPointsToGive","Math","floor","maxPointsToGiveText","carrots","setCarrots","invalidValue","setInvalidValue","formtouched","setFormtouched","closeModal","openModal","variant","gutterBottom","match","reduce","sum","marginRight","nestedSelect","amountSelector","visibility","CarrotIconHover","listCarrotIconWrapper","paddingRight","menuDiv","flex","innerDefaultValues","innerDropdownStyle","ImpactSelectorItem","carrotAmount","defaultValue","innerSelectValues","range","Number","customCurrencyDisp","multipleUserText","onOptionSelect","onValueChange","impact","toggleSelect","onSubSelectToggle","selectOpen","setSelectOpen","handleChange","handleOpen","ReactHoverObserver","isHovering","option","canGivePoint","Select","SelectDisplayProps","onOpen","MenuProps","innerSelectValue","formControl","placeholderStyle","emoticonStyle","nestedFormControl","impactSelector","impactSelectorDisabled","ImpactValueSelector","inputIconOn","onInputIconOn","mePointsToGive","menuOpen","setMenuOpen","subSelectOpen","setSubSelectOpen","customImpactModalOpen","setCustomImpactModalOpen","impactValueSelector","setImpactValueSelector","disableSelect","filterOptions","options","preOption","goldLimit","onImpactOpen","onImpactSelected","closeSelect","toggle","onImpactClose","closeCustomImpactModal","values","customCurrency","NAME","FormControl","Tooltip","title","placement","name","displayEmpty","itemClicked","Input","renderValue","goldSelected","total","remaining","excessAlert","dispText","impactObj","canGivePoints","canGiveCustomAmount","userName","b","userId","Entry","parentProps","mention","username","CustomMentionSuggesstions","onSearchChange","suggestions","onOpenSuggestions","onCloseSuggestions","onAddMention","MentionComponent","entryComponent","CustomEditor","mentionPlugin","createMentionPlugin","entityMutability","mentionTrigger","supportWhitespace","MentionSuggestions","editorState","plugins","editorRef","inputDiv","verticalAlign","overflow","errorhelper","textarea__input","MessageInput","inputIconMessageOn","onInputIconMessageOn","editor","setEditor","handleMessage","hasText","getErrorMessage","variantMap","body2","body2SemiBold","body2Bold","body2Medium","Body","parentClassName","inline","dataTestId","fontColor","variantFromMap","paletteColor","bodyStyle","useMemo","data-testid","MemoizedBody","memo","displayName","RECOGNITION_TIPS","body","collapsingHeader","toggleButton","tip","gridTemplateColumns","tipsWrapper","indexHolder","tipIndex","content","contentWrapper","paddingTop","expandOpen","transitions","create","short","GiveRecognitionTips","onToggleClick","IconButton","aria-expanded","Collapse","in","timeout","unmountOnExit","icon","badges","getBadgeObjectForName","badgeName","badge","getImageForBadge","creativity_badge","culture_badge","detail_master_badge","goal_smasher_badge","idea_maker_badge","initiative_badge","innovator_badge","launcher_badge","leadership_badge","lifesaver_badge","motivator_badge","navigator_badge","obstacle_badge","problem_solver_badge","teamwork_badge","top_earner_badge","closer_badge","badge_selector_item","badge_selector_img","badge_selector_name","wordWrap","BadgesItem","onSelect","badge_selector_wrapper","badge_selector_body","badge_selected_image","BadgesSelector","selectedBadge","updateSelected","getLiteralTextFromEditor","blocks","convertToRaw","getCurrentContent","mappedBlocks","block","trim","newText","i","getTextFromEditor","mentionsToReplace","forEach","replace","RegExp","getMentionsToReplace","selectedMentions","employee","emp","StyledTabs","indicator","Tabs","StyledTab","Tab","disableRipple","post_container","form_container","p_16","input_row_style","iconButton","minWidth","gc_button","add_emoji_img","impactLevels","Alert","elevation","PostRecognition","slideIndex","setSlideIndex","setSelectedBadge","setSelectedUsers","setImpact","setUserInputIconOn","setInputIconOn","setInputIconMessageOn","carrotsTouched","setCarrotsTouched","carrotError","EditorState","createEmpty","setEditorState","messageError","setMessageError","isMessageTipsVisible","setIsMessageTipsVisible","isRecognitionOpen","setIsRecognitionOpen","setSelectedMentions","isFormSubmitting","anchorEl","setAnchorEl","anchorElEmoji","setAnchorElEmoji","anchorElGIF","setAnchorElGIF","openMessage","setOpenMessage","handleCloseMessage","reason","messageInputHasText","mentionUsers","giveButtonDisabled","shouldDisableGiveButton","handleCloseEmoji","Boolean","openEmoji","openGIF","resetForm","centered","newValue","onSubmit","preventDefault","message","giveCarrots","to","carrots_each","setTimeout","reload","carrotsPerPost","isSet","switchBalanceTab","NAME_PLURAL","NAME_TITLEIZED","NAME_TITLEIZED_PLURAL","editorStateProps","minMessageChar","push","currentTarget","getImageForBadgeIcon","TypeError","x","titleize","Snackbar","autoHideDuration","severity","Popover","anchorOrigin","vertical","horizontal","onUpdateSelectedBadge","emoji","contentState","targetRange","getSelection","newContentState","Modifier","insertText","native","newEditorState","sheetSize","set","requestRating","requestKey","onEntrySelect","entry","mediaAdded","images","downsized_medium","original","balance_container","redeem_container","balance_carrots","giving_container","remaining_container","date_container","Balance","onHandleChange","moment","add","startOf","format","getter","keys","hash","newHash","useStyle","feed_card_header_text","flexFlow","username_clickable","feed_card_from","whiteSpace","feed_card_to","feed_card_badge_img","username_clickable_to_span","feed_card_carrots","users_list_container","users_list_hover","boxSizing","WebkitTapHighlightColor","ClickableFromUserName","deactivated_user","ClickableUserName","FeedCardTitle","UserNameComponent","usersToShow","Array","from","users","shift","isTo","List","ListItem","console","log","ListItemAvatar","ListItemText","feed_card_gave","hasBadge","FeedValue","StyledCard","Card","card","feed_card_header","feed_card_title","feed_carrot_value","feed_carrot_time","feed_card_message","feed_card_action","commentOn","heartOn","privateIcon","taggedUser","FeedCard","setCard","feedType","liked","didILike","setDidILike","onUserClicked","likes","renderAvatar","coreValue","serTime","time","abs","diff","fromNow","getAgoTime","created_at","taggedUsers","replacedText","reactStringReplace","getPostFormattedMessage","component","Feed","homeFeed","setHomeFeed","method","some","feed","toggleOverlay","bottom","Popper","TransitionProps","Fade","right_column_box","right_column_header","right_column_header_text","dropIcon","top_receivers_row_div","paddingBottom","top_receivers_name","textOverflow","top_receivers_carrots","top_receivers_carrots_text","minHeight","TopReceivers","topEarnedUsers","setTopEarnedUsers","top_earned_users","isEmpty","CarrotText","sorted","sort","getTopReceiversSorted","receiver","alert","top_badges_names","top_badges_img","TopBadges","topBadges","setTopBadges","top_badges","BadgeText","badgeObj","badgeImg","fixed_right_panel","Home","balanceTabToShow","setBalanceTabToShow","onHandleTabChange","Container","Row","Col","App","hostname","createMuiTheme","MuiDialogTitle","disableTypography","MuiButtonBase","overrides","MuiCssBaseline","MuiIconButton","MuiFormLabel","MuiInput","MuiButton","htmlFontSize","join","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4d4b9635.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/closer_badge.543edc90.png\";","module.exports = __webpack_public_path__ + \"static/media/creativity_badge.51da00a7.png\";","module.exports = __webpack_public_path__ + \"static/media/culture_badge.d4ee91eb.png\";","module.exports = __webpack_public_path__ + \"static/media/detail_master_badge.299614d1.png\";","module.exports = __webpack_public_path__ + \"static/media/goal_smasher_badge.2ccd5746.png\";","module.exports = __webpack_public_path__ + \"static/media/idea_maker_badge.73420e58.png\";","module.exports = __webpack_public_path__ + \"static/media/initiative_badge.25ea3150.png\";","module.exports = __webpack_public_path__ + \"static/media/innovator_badge.f2cad379.png\";","module.exports = __webpack_public_path__ + \"static/media/launcher_badge.ca08a56a.png\";","module.exports = __webpack_public_path__ + \"static/media/leadership_badge.25ff00e8.png\";","module.exports = __webpack_public_path__ + \"static/media/lifesaver_badge.98e7f9ad.png\";","module.exports = __webpack_public_path__ + \"static/media/motivator_badge.19706b25.png\";","module.exports = __webpack_public_path__ + \"static/media/navigator_badge.739e52a5.png\";","module.exports = __webpack_public_path__ + \"static/media/obstacle_badge.18d58301.png\";","module.exports = __webpack_public_path__ + \"static/media/problem_solver_badge.4b93eeb6.png\";","module.exports = __webpack_public_path__ + \"static/media/teamwork_badge.1f291e2c.png\";","module.exports = __webpack_public_path__ + \"static/media/top_earner_badge.3a628322.png\";","import React from 'react';\r\nimport reactStringReplace from 'react-string-replace';\r\nimport { Emoji } from 'emoji-mart';\r\n// import _ from 'lodash';\r\n\r\nexport const CASHOUT_TITLE_TEXT_MAX_LENGTH = 35;\r\nexport const MENTION_REGEX = /@__(.*?)__@/;\r\n\r\nexport const getProfileFullName = (user) => {\r\n    if (user && user.profile) {\r\n        if (user.profile.first_name !== null && user.profile.last_name === null) {\r\n            return `${user.profile.first_name}`;\r\n        }\r\n\r\n        if (user.profile.last_name !== null && user.profile.first_name === null) {\r\n            return `${user.profile.last_name}`;\r\n        }\r\n\r\n        if (user.profile.last_name && user.profile.first_name ) {\r\n            return `${user.profile.first_name} ${user.profile.last_name}`;\r\n        }\r\n\r\n    }\r\n    return '';\r\n};\r\n\r\nexport const getFirstLetterOfName = (user) => {\r\n  if (user && user.profile && user.profile.first_name) {\r\n    return `${user.profile.first_name.slice(0, 1).toUpperCase()}`;\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const titleize = (input) => {\r\n  if (typeof input !== 'string') {\r\n\t\tthrow new TypeError('Expected a string');\r\n\t}\r\n\r\n\treturn input.toLowerCase().replace(/(?:^|\\s|-)\\S/g, x => x.toUpperCase());\r\n}\r\n\r\nexport const getPostFormattedMessage = (text, taggedUsers) => {\r\n    let replacedText = text;\r\n    \r\n    replacedText = reactStringReplace(replacedText, /#(\\w+)/g, (match, i) => (\r\n        <span key={match + i} className=\"feed-card-hashtag\">\r\n        #{match}\r\n        </span>\r\n    ));\r\n\r\n    replacedText = reactStringReplace(replacedText, /:(.*?):/g, (match, i) => (\r\n        <Emoji key={match + i} emoji={`:${match}:`} size={16} />\r\n    ));\r\n  \r\n    if (taggedUsers) {\r\n        if (taggedUsers.length > 0) {\r\n            replacedText = reactStringReplace(\r\n            replacedText,\r\n            MENTION_REGEX,\r\n            (match, i) => {\r\n                const filteredEmployeeArr = taggedUsers.filter((employee) => employee.id === match).map((employee) => {\r\n                // if (onUserClicked) {\r\n                //   return (\r\n                //     <span\r\n                //       key={match + i}\r\n                //       className={\r\n                //         employee.isDeleted\r\n                //           ? 'noEvent deactivated_user'\r\n                //           : 'feed-card-mention'\r\n                //       }\r\n                //       onClick={\r\n                //         !employee.isDeleted\r\n                //           ? () => {\r\n                //               onUserClicked(employee);\r\n                //             }\r\n                //           : null\r\n                //       }\r\n                //     >\r\n                //       {employee.isDeleted\r\n                //         ? 'Deactivated User'\r\n                //         : getProfileFullName(employee)}\r\n                //     </span>\r\n                //   );\r\n                // }\r\n                    return (\r\n                        <span key={match + i}>\r\n                            <b>\r\n                                {employee.isDeleted\r\n                                    ? 'Deactivated User'\r\n                                    : getProfileFullName(employee)\r\n                                }\r\n                            </b>\r\n                        </span>\r\n                    );\r\n                });\r\n                    return filteredEmployeeArr;\r\n                },\r\n            );\r\n        }\r\n    }\r\n    return replacedText;\r\n};","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getFirstLetterOfName } from './text';\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        margin: 10,\r\n    },\r\n\r\n    avatarColor: (props) => ({\r\n    color: props.color,\r\n    backgroundColor: props.backgroundColor,\r\n    fontWeight: '600',\r\n    width: props.size ? props.size : 40,\r\n    height: props.size ? props.size : 40,\r\n    fontSize: props.fontSize,\r\n    }),\r\n\r\n    avatarImage: (props) => ({\r\n    width: props.size ? props.size : 40,\r\n    height: props.size ? props.size : 40,\r\n    }),\r\n})\r\n\r\nconst UserNameAvatar = (props) => {\r\n    const { user, size } = props;\r\n    const firstLetter = user.isDeleted ? 'D' : getFirstLetterOfName(user);\r\n    const colorProp = user.isDeleted ? { bg: '#FFF0A2', color: '#FFE145' } : getColor(user);\r\n    let fontSize = 18;\r\n\r\n    if (size === 30 || size === 32) {\r\n      fontSize = 14;\r\n    } else if (size === 88) {\r\n      fontSize = 36;\r\n    }\r\n\r\n    const styleProps = {\r\n      backgroundColor: colorProp.bg,\r\n      color: colorProp.color,\r\n      size,\r\n      fontSize,\r\n    };\r\n\r\n    const classes = useStyles(styleProps);\r\n  \r\n    return <Avatar className={classes.avatarColor}>{firstLetter}</Avatar>;\r\n};\r\n\r\nexport const ProfilePic = (props) =>  {\r\n    const { user, size } = props;\r\n    const classes = useStyles({ size });\r\n    // if (user &&\r\n    //     user.profile &&\r\n    //     user.profile.image &&\r\n    //     user.profile.image.original.relativeUrl) {\r\n    //         return (\r\n    //             <Avatar src={user.profile.image.original.relativeUrl} className={classes.avatarImage} />\r\n    //         )\r\n    // }\r\n    \r\n    if (user &&\r\n        user.profile &&\r\n        user.profile.avatar) {\r\n            return (\r\n                <Avatar src={user.profile.avatar} className={classes.avatarImage} />\r\n            )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <UserNameAvatar user={user} size={size} />\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport const getColor = (user) => {\r\n    let lastChar = 'p';\r\n    if (user && user.id) {\r\n        lastChar = user.id.substr(user.id.length - 1);\r\n    }\r\n    const charCode = lastChar.charCodeAt(0);\r\n    let bg = '#FFBBA2';\r\n    let color = '#FF7745';\r\n    switch (charCode) {\r\n        case 97:\r\n        case 113:\r\n        case 103:\r\n        case 119:\r\n        case 49:\r\n        case 111:\r\n        bg = '#FFBBA2';\r\n        color = '#FF7745';\r\n        break;\r\n        case 98:\r\n        case 114:\r\n        case 104:\r\n        case 120:\r\n        case 50:\r\n        case 57:\r\n        bg = '#E6D3FD';\r\n        color = '#CDA7FC';\r\n        break;\r\n        case 99:\r\n        case 115:\r\n        case 106:\r\n        case 122:\r\n        case 52:\r\n        case 112:\r\n        bg = '#A6F8AD';\r\n        color = '#4DF15A';\r\n        break;\r\n        case 100:\r\n        case 116:\r\n        case 105:\r\n        case 121:\r\n        case 51:\r\n        case 108:\r\n        bg = '#FFF0A2';\r\n        color = '#FFE145';\r\n        break;\r\n        case 101:\r\n        case 117:\r\n        case 107:\r\n        case 53:\r\n        case 110:\r\n        case 56:\r\n        case 54:\r\n        bg = '#FFA3C7';\r\n        color = '#FF478F';\r\n        break;\r\n        case 102:\r\n        case 118:\r\n        case 48:\r\n        case 109:\r\n        case 55:\r\n        bg = '#A2F5FF';\r\n        color = '#45EBFF';\r\n        break;\r\n        default:\r\n        bg = '#A2F5FF';\r\n        color = '#45EBFF';\r\n        break;\r\n    }\r\n    return {\r\n        bg,\r\n        color,\r\n    };\r\n}","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const StoreContext = React.createContext(null);\r\nconst queryString = window.location.search;\r\n\r\nconst urlParams = new URLSearchParams(queryString);\r\n\r\nconst emailLogin = urlParams.get('email') || sessionStorage.getItem('email');\r\n\r\nexport default ({children}) => {\r\n    const [token, setToken] = useState('');\r\n    const [me, setMe] = useState(null);\r\n    const [points_earned, setPointEarned] = useState();\r\n    const [remaining_point, setRemainingPoint] = useState();\r\n\r\n    useEffect(() => {\r\n        axios.post(`https://camon.twgroup.vn/api/v1/auth/user?email=${emailLogin}`)\r\n        .then((res) =>{\r\n            setToken(res.data.data.token);\r\n            setMe(res.data.data.user.id);\r\n            setPointEarned(res.data.data.user.points_earned);\r\n            setRemainingPoint(res.data.data.user.remaining_point);\r\n        })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[emailLogin])\r\n\r\n    const store = {\r\n        token,\r\n        me,\r\n        points_earned,\r\n        remaining_point,\r\n        setRemainingPoint\r\n    }\r\n\r\n    return (\r\n        <StoreContext.Provider value={store}>\r\n            { ( token && me ) ? children : null}\r\n        </StoreContext.Provider>\r\n    )\r\n}\r\n","import React, { useState, useEffect} from 'react';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport { getProfileFullName } from '../../assets/Util/text';\r\nimport { ProfilePic } from '../../assets/Util/profilePic';\r\nimport keycode from 'keycode';\r\nimport Downshift from 'downshift';\r\nimport axios from 'axios';\r\nimport { StoreContext } from '../../store/StoreContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        position: 'relative',\r\n        zIndex: 3\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        left: 0,\r\n        right: 0,\r\n        maxHeight: '260px',\r\n        overflowY: 'auto',\r\n        marginTop: 45,\r\n        marginLeft: 48,\r\n        background: '#FFFFFF',\r\n        boxShadow:\r\n          '0px 2px 2px rgba(0, 0, 0, 0.24), 0px 0px 2px rgba(0, 0, 0, 0.12)',\r\n        borderRadius: 2,\r\n    },\r\n    iconWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '50px',\r\n        height: '31px'\r\n    },\r\n    iconStyle: {\r\n        fontSize: '16px',\r\n        cursor: 'pointer'\r\n    },\r\n    // iconActiveStyle: {\r\n    //     color: 'red',\r\n    //     filter: 'grayscale(0)'\r\n    // },\r\n    iconInactiveStyle: {\r\n        color: '#9e9e9e',\r\n        filter: 'grayscale(1)'\r\n    },\r\n    chip: {\r\n        margin: '4px 2px'\r\n    },\r\n    chipAvatar: {\r\n        height: '22px !important',\r\n        width: '22px !important',\r\n        marginLeft: 5,\r\n        // marginTop: 5,\r\n    },\r\n    chipRoot: {\r\n        backgroundColor: '#F6F6F6',\r\n    },\r\n    chipLabel: {\r\n        color: theme.palette.text.main,\r\n        fontWeight: 600,\r\n        fontSize: 12,\r\n        paddingLeft: 8,\r\n    },\r\n    chipDeleteIcon: {\r\n        color: '#E2E2E2',\r\n    },\r\n    inputRoot: {\r\n        flexWrap: 'wrap',\r\n    },\r\n    inputStyle: {\r\n        width: 'auto !important',\r\n        flexGrow: 1,\r\n        // marginTop : 12,\r\n        // marginBottom : 7,\r\n    },\r\n    menuSelected: {\r\n        backgroundColor: '#F8F8F8 !important',\r\n    },\r\n    autocomplete_user_fullname: {\r\n        paddingLeft: 8,\r\n        fontSize: 12,\r\n        color: '#2C2C2C',\r\n        fontWeight: 600,\r\n        letterSpacing: 0.2\r\n    },\r\n    autocomplete_user_username_focus: {\r\n        fontSize: 15,\r\n        color: '#e2e2e2'\r\n    },\r\n    autocomplete_user_username: {\r\n        fontSize: 15,\r\n        color: '#e2e2e2'\r\n    }\r\n}))\r\n\r\nfunction DSTypeAhead(props) {\r\n    const { handleUsers, onFocus, selectedItem, userInputIconOn, onUserInputIconOn } = props;\r\n    const [ inputValue, setInputValue ] = useState('');\r\n    //const [ userInputIconOn, setUserInputIconOn ] = useState(false);\r\n\r\n    const [ employees, setEmployees] = useState();\r\n    const { token } = React.useContext(StoreContext);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        async function fetchEmployees() {\r\n            const res = await axios.get('https://camon.twgroup.vn/api/v1/home', {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            setEmployees(res.data.data.employees);\r\n            \r\n        }\r\n        fetchEmployees()\r\n    }, [token])\r\n    \r\n    const renderInput = (inputProps) => {\r\n        const { InputProps, classes, ref, ...other } = inputProps;\r\n        return (\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            InputProps={{\r\n                inputRef: ref,\r\n                classes: {\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputStyle,\r\n                    underline: classes.underline,\r\n                },\r\n                ...InputProps,\r\n                // inputProps: {\r\n                //   className: classes.inputStyle\r\n                // },\r\n            }}\r\n            {...other}\r\n          />\r\n        );\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        if (inputValue && inputValue.length > 3) {\r\n          //this.debounceGetHomeInfo(); lodash\r\n        }\r\n        setInputValue(inputValue)\r\n    };\r\n\r\n    const handleChange = (item) => {\r\n        if (!item) {\r\n          setInputValue('');\r\n          return;\r\n        }\r\n    \r\n        if (selectedItem.indexOf(item) === -1) {//not found\r\n            let postSelectedItem = [...selectedItem, item];\r\n            setInputValue('');\r\n            handleUsers(postSelectedItem);\r\n        }\r\n    };\r\n\r\n    const handleDelete = (item) => () => {\r\n        const postSelectedItem = [...selectedItem];\r\n        postSelectedItem.splice(selectedItem.indexOf(item), 1);\r\n        handleUsers(postSelectedItem);\r\n        handleUserInputIconStyleOff(postSelectedItem);\r\n    };\r\n\r\n    const onUserInputFocus = () => {\r\n        onUserInputIconOn(true);\r\n        onFocus();\r\n    }\r\n\r\n    const onUserInputBlur = () => {\r\n        handleUserInputIconStyleOff(selectedItem);\r\n    };\r\n\r\n    const handleUserInputIconStyleOff = (selectedUsers) => {\r\n        if( selectedUsers.length === 0 ) {\r\n            onUserInputIconOn(false);\r\n        }\r\n    }\r\n\r\n    const handleKeyDown = (e) => {\r\n        if ( selectedItem.length && !inputValue.length && keycode(e) === 'backspace' ) {\r\n            const postSelectedItem = selectedItem.slice(0, selectedItem.length - 1);\r\n            handleUsers(postSelectedItem)\r\n        }\r\n    };\r\n\r\n    const renderOptions = (inputValue, getItemProps, highlightedIndex) => {\r\n        const users = findUsers(inputValue);\r\n        return users.map(\r\n            (user, index) => renderOption({\r\n                user,\r\n                index,\r\n                itemProps: getItemProps({item: user.id}),\r\n                highlightedIndex,\r\n                disabled: false\r\n            })\r\n        )\r\n    }\r\n\r\n    const renderOption = ({ user, index, itemProps, highlightedIndex, disabled }) => {\r\n        const isHighlighted = highlightedIndex === index;\r\n        return (\r\n            <MenuItem\r\n                {...itemProps}\r\n                disabled={disabled}\r\n                key={user.id}\r\n                selected={isHighlighted}\r\n                classes={\r\n                    { selected: classes.menuSelected}\r\n                }\r\n            >\r\n                <ProfilePic size={30} user={user} />\r\n                <span className={classes.autocomplete_user_fullname}>\r\n                    {getProfileFullName(user)}\r\n                </span>\r\n                <span className={isHighlighted ? classes.autocomplete_user_username_focus\r\n                    : classes.autocomplete_user_username }\r\n                >\r\n                    { user.profile.user_name ? `@${user.profile.user_name}` : `@${user.profile.first_name}`}\r\n                </span>\r\n            </MenuItem>\r\n        )\r\n    }\r\n\r\n    const findUsers = (inputValue) => {\r\n        let count = 0;\r\n        return employees.filter((user) => {\r\n            \r\n            const firstName = user.profile.first_name || '';\r\n            // const lastName = user.profile.last_name || '';\r\n            // const userName = user.profile.user_name || '';\r\n            const email = user.email || '';\r\n            let keep = (\r\n                !inputValue ||\r\n                firstName.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1 ||\r\n                email.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1\r\n            ) && (count < 20);\r\n            if (selectedItem.indexOf(user.id) !== -1) {\r\n                keep = false;\r\n            }\r\n            if (keep) {\r\n                count += 1;\r\n            }\r\n            return keep;\r\n        })\r\n    }\r\n    return (\r\n        <Downshift\r\n            inputValue={inputValue}\r\n            onChange={handleChange}\r\n            selectedItem={selectedItem}\r\n        >\r\n            {\r\n                (\r\n                    {\r\n                        getInputProps,\r\n                        getItemProps,\r\n                        isOpen,\r\n                        inputValue: inputValue2,\r\n                        //selectedItem: selectedItem2,\r\n                        highlightedIndex,\r\n                        openMenu,\r\n                        closeMenu\r\n                    }\r\n                ) => (\r\n                    <div className={classes.root}>\r\n                        <div className={classes.iconWrapper}>\r\n                            <div className={classNames(\r\n                                classes.iconStyle,\r\n                                userInputIconOn ? classes.iconActiveStyle : classes.iconInactiveStyle\r\n                            )}\r\n                                onClick={() => {\r\n                                    this.inputRef.focus();\r\n                                }}\r\n                            >\r\n                                <span role=\"img\" aria-label=\"icon\">\r\n                                    😎\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ width: '100%' }}>\r\n                            {\r\n                                renderInput({\r\n                                    fullWidth: true,\r\n                                    classes,\r\n                                    ref: (inputRef) => {\r\n                                        return inputRef\r\n                                    },\r\n                                    InputProps: getInputProps({\r\n                                        startAdornment: selectedItem.map((item) => { //selectedItem state\r\n                                            const user = employees.find((u) => u.id === item); //employee props\r\n                                            if (user) {\r\n                                                return (\r\n                                                    <Chip\r\n                                                        avatar = {\r\n                                                            <ProfilePic size={32} user={user} />\r\n                                                        }\r\n                                                        key={item}\r\n                                                        tabIndex={-1}\r\n                                                        label={getProfileFullName(user)}\r\n                                                        className={classes.chip}\r\n                                                        classes={{\r\n                                                            root: classes.chipRoot,\r\n                                                            avatar: classes.chipAvatar,\r\n                                                            label: classes.chipLabel,\r\n                                                            deleteIcon: classes.chipDeleteIcon,\r\n                                                        }}\r\n                                                        onDelete={handleDelete(item)}\r\n                                                    />\r\n                                                )\r\n                                            }\r\n                                            return null;\r\n                                        }),\r\n                                        onChange: handleInputChange,\r\n                                        onKeyDown: handleKeyDown,\r\n                                        placeholder: 'Người được nhận',\r\n                                        id: 'integration-downshift-multiple',\r\n                                        onFocus: (event) => {\r\n                                            openMenu();\r\n                                            onUserInputFocus();\r\n                                        },\r\n                                        onBlur: (event) => {\r\n                                            closeMenu();\r\n                                            onUserInputBlur();\r\n                                        }\r\n                                    })\r\n                                })\r\n                            }\r\n                        </div>\r\n                        {\r\n                            isOpen ? (\r\n                                <Paper className={classes.paper} square>\r\n                                    {\r\n                                        renderOptions(\r\n                                            inputValue2,\r\n                                            getItemProps,\r\n                                            highlightedIndex\r\n                                        )\r\n                                    }\r\n                                </Paper>\r\n                            ) : null\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        </Downshift>\r\n\r\n    )\r\n}\r\n\r\nexport default DSTypeAhead","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        position: 'absolute',\r\n        width: 520,\r\n        padding: 54,\r\n        [theme.breakpoints.down('xs')]: {\r\n          width: 350,\r\n          padding: '20px 22px',\r\n        },\r\n        background: '#FFFFFF',\r\n        border: '1px solid #F6F6F6',\r\n        boxSizing: 'border-box',\r\n        borderRadius: 10,\r\n        outline: 'none',\r\n    },\r\n}))\r\n\r\nexport default function StyledModal(props) {\r\n    const classes = useStyles();\r\n  \r\n    return (\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={props.open}\r\n        onClose={props.handleClose}\r\n        BackdropProps={{\r\n          style: {\r\n            background: '#000000',\r\n            mixBlendMode: 'normal',\r\n            opacity: 0.8,\r\n          },\r\n        }}\r\n      >\r\n        <div className={props.customClass ? props.customClass : classes.paper}>\r\n          {props.children}\r\n        </div>\r\n      </Modal>\r\n    );\r\n}  \r\n\r\n","const LIGHT = 300;\r\nconst REGULAR = 400;\r\nconst MEDIUM = 500;\r\nconst SEMIBOLD = 600;\r\nconst BOLD = 700;\r\n\r\nexport default {\r\n    palette: {\r\n        blue: {\r\n            60: '#014CDA'\r\n        },\r\n        primary: {\r\n            main: '#FF4400',\r\n        },\r\n        secondary: {\r\n            main: '#0AD71C',\r\n        },\r\n        gray: {\r\n            0: '#F4F5F6',\r\n            10: '#DBDDE0',\r\n            20: '#C3C6CB'\r\n        },\r\n        white: {\r\n            0: '#FFFFFF'\r\n        }\r\n    },\r\n    typography: {\r\n        fontWeightLight: LIGHT,\r\n        fontWeightRegular: REGULAR,\r\n        fontWeightMedium: MEDIUM,\r\n        fontWeightSemibold: SEMIBOLD,\r\n        fontWeightBold: BOLD\r\n    },\r\n    breakPoints: {\r\n        lg: '1199.98px', // Large devices (desktops)\r\n        md: '991.98px', // Medium devices (tablets)\r\n        sm: '767.98px', // Small devices (landscape phones)\r\n        xs: '575.98px', // Extra small devices (portrait phones)\r\n    },\r\n    animations: {\r\n        AdminMain: {\r\n          prop: {\r\n            opacity: 0,\r\n            y: 20,\r\n          },\r\n          duration: 0.3,\r\n          stagger: 0.1,\r\n        },\r\n    },\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ThemeV2 from '../V2/theme';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    modalCloseButton: {\r\n        position: 'absolute',\r\n        top: 15,\r\n        right: 15,\r\n        cursor: 'pointer',\r\n        padding: '5px',\r\n        '& svg': {\r\n          '& path': {\r\n            fill: ThemeV2.palette.lightGray1,\r\n            transition: '0.3s ease',\r\n          },\r\n        },\r\n        '&:hover': {\r\n          '& svg': {\r\n            '& path': {\r\n              fill: ThemeV2.palette.darkGray3,\r\n            },\r\n          },\r\n        },\r\n    }\r\n}))\r\n\r\nfunction StyledCloseButton(props) {//props: classes,onClick\r\n    const classes = useStyles();\r\n    const { onClick, ...rest} = props;\r\n    return (\r\n        <div className={classes.modalCloseButton} onClick={onClick} {...rest}>\r\n          <svg\r\n            width=\"14\"\r\n            height=\"14\"\r\n            viewBox=\"0 0 14 14\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M13.3 0.709971C12.91 0.319971 12.28 0.319971 11.89 0.709971L6.99997 5.58997L2.10997 0.699971C1.71997 0.309971 1.08997 0.309971 0.699971 0.699971C0.309971 1.08997 0.309971 1.71997 0.699971 2.10997L5.58997 6.99997L0.699971 11.89C0.309971 12.28 0.309971 12.91 0.699971 13.3C1.08997 13.69 1.71997 13.69 2.10997 13.3L6.99997 8.40997L11.89 13.3C12.28 13.69 12.91 13.69 13.3 13.3C13.69 12.91 13.69 12.28 13.3 11.89L8.40997 6.99997L13.3 2.10997C13.68 1.72997 13.68 1.08997 13.3 0.709971Z\"\r\n              fill=\"#E2E2E2\"\r\n            />\r\n          </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledCloseButton","import Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { darken } from '@material-ui/core/styles/colorManipulator';\r\nimport themeV2 from './theme';\r\n\r\nconst StyledButton = withStyles({\r\n    contained: {\r\n        height: 44,\r\n        borderRadius: 10,\r\n        backgroundColor: themeV2.palette.greenLight,\r\n        color: themeV2.palette.white,\r\n        '&:$disabled': {\r\n            backgroundColor: `${themeV2.palette.drakGray2} !important`\r\n        },\r\n        '&:hover': {\r\n            textDecoration: 'none',\r\n            color: themeV2.palette.white,\r\n            backgroundColor: themeV2.palette.green,\r\n            // Reset on touch devices, it doesn't add specificity\r\n            '@media (hover: none)': {\r\n                backgroundColor: 'transparent',\r\n            },\r\n            boxShadow: 'none !important',\r\n        }   \r\n    },\r\n    containedPrimary: {\r\n        backgroundColor: themeV2.palette.primary.main,\r\n        color: themeV2.palette.white,\r\n        '&:hover': {\r\n          backgroundColor: darken(themeV2.palette.primary.main, 0.3),\r\n          // Reset on touch devices, it doesn't add specificity\r\n          '@media (hover: none)': {\r\n            backgroundColor: darken(themeV2.palette.primary.main, 0.3),\r\n          },\r\n        },\r\n        boxShadow: 'none !important',\r\n    },\r\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\r\n    containedSecondary: {\r\n        backgroundColor: themeV2.palette.secondary.main,\r\n        color: themeV2.palette.white,\r\n        '&:hover': {\r\n        color: `${themeV2.palette.white} !important`,\r\n        backgroundColor: darken(themeV2.palette.secondary.main, 0.3),\r\n            // Reset on touch devices, it doesn't add specificity\r\n            '@media (hover: none)': {\r\n                backgroundColor: darken(themeV2.palette.secondary.main, 0.3),\r\n            },\r\n        },\r\n        boxShadow: 'none !important',\r\n    },\r\n    label: {\r\n        textTransform: 'none',\r\n        fontFamily: themeV2.typography.fontFamily,\r\n        fontSize: 14,\r\n        fontWeight: themeV2.typography.fontWeightMedium,\r\n        fontStyle: 'normal',\r\n        fontStretch: 'normal',\r\n        lineHeight: 'normal',\r\n        letterSpacing: 'normal',\r\n        textAlign: 'center',\r\n    }\r\n})(Button)\r\n\r\nexport default StyledButton","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport classNames from 'classnames';\r\nimport themeV2 from './theme';\r\n\r\nconst styles = {\r\n  root: {\r\n    fontFamily: themeV2.typography.fontFamily,\r\n    color: themeV2.palette.darkText,\r\n  },\r\n  adminRoot: {\r\n    fontFamily: themeV2.typography.adminFontFamily,\r\n    color: themeV2.palette.darkText,\r\n  },\r\n};\r\n\r\nfunction getFontWeight(weight) {\r\n  switch (weight) {\r\n    case 'bold':\r\n      return themeV2.typography.fontWeightBold;\r\n    case 'medium':\r\n      return themeV2.typography.fontWeightMedium;\r\n    case 'semiBold':\r\n      return themeV2.typography.fontWeightSemibold;\r\n    default:\r\n      return themeV2.typography.fontWeightRegular;\r\n  }\r\n}\r\n\r\nfunction CustomTypography(props) {\r\n  const { classes, children, weight, style, className, ...rest } = props;\r\n  // const bull = <span className={classes.bullet}>•</span>;\r\n  return (\r\n    <Typography\r\n      className={classNames(classes.root, className)}\r\n      style={{ ...style, fontWeight: getFontWeight(weight) }}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction AdminTypographyComponent(props) {\r\n  const { classes, children, weight, style, className, ...rest } = props;\r\n  // const bull = <span className={classes.bullet}>•</span>;\r\n  return (\r\n    <Typography\r\n      className={classNames(classes.adminRoot, className)}\r\n      style={{ ...style, fontWeight: getFontWeight(weight) }}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n}\r\nexport const AdminTypography = withStyles(styles)(AdminTypographyComponent);\r\n\r\nCustomTypography.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  weight: PropTypes.string,\r\n  style: PropTypes.object,\r\n};\r\n\r\nCustomTypography.defaultProps = {\r\n  weight: 'Regular',\r\n  style: {},\r\n};\r\n\r\nexport default withStyles(styles)(CustomTypography);\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport ThemeV2 from './theme';\r\n\r\nconst styles = () => ({\r\n    root: {\r\n      fontFamily: ThemeV2.typography.fontFamily,\r\n      fontWeight: ThemeV2.typography.fontWeightMedium,\r\n      color: ThemeV2.palette.darkGray3,\r\n      lineHeight: '15px',\r\n      fontSize: '11px',\r\n      '&.disabled': {\r\n        opacity: '0.24',\r\n        userSelect: 'none',\r\n      },\r\n      '&.error': {\r\n        color: ThemeV2.palette.red2,\r\n      },\r\n    },\r\n});\r\nfunction HelperText(props) {\r\n    const { classes, text, disabled, error, children, ...rest } = props;\r\n    return (\r\n        <FormHelperText\r\n          className={classnames(\r\n            classes.root,\r\n            disabled ? 'disabled' : '',\r\n            error ? 'error' : '',\r\n          )}\r\n          {...rest}\r\n        >\r\n          {children}\r\n        </FormHelperText>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(HelperText);","import React from 'react';\r\nimport _ from 'lodash';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nfunction CarrotIcon(props) {\r\n  // style={{ fontSize: 73 }}\r\n  const { active, onClick, size, url, currency } = props;\r\n  if (url) {\r\n    const blendMode = active ? 'normal' : 'luminosity';\r\n    if (url.type === 'emoji') {\r\n      const emojiType = _.get(url, ['value', 'type'], 'REGULAR');\r\n      if (emojiType === 'REGULAR') {\r\n        return (\r\n          <span\r\n            className={props.className}\r\n            style={{\r\n              fontSize: size ? `${size}px` : '20px',\r\n              mixBlendMode: blendMode,\r\n              ...props.style,\r\n            }}\r\n            role=\"img\"\r\n            aria-label=\"custom-icon\"\r\n          >\r\n            {String.fromCodePoint(parseInt(url.value.hexCode, 16))}\r\n          </span>\r\n        );\r\n      }\r\n      if (emojiType === 'CUSTOM') {\r\n        return (\r\n          <img\r\n            src={url.value.url}\r\n            alt={currency}\r\n            className={props.className}\r\n            style={{\r\n              width: size ? `${size}px` : '20px',\r\n              mixBlendMode: blendMode,\r\n              ...props.style,\r\n            }}\r\n          />\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <img\r\n        src={url.value}\r\n        alt={currency}\r\n        className={props.className}\r\n        style={{\r\n          width: size ? `${size}px` : '20px',\r\n          mixBlendMode: blendMode,\r\n          ...props.style,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SvgIcon\r\n      className={props.className}\r\n      style={props.style || { fontSize: size ? size : '24' }}\r\n      viewBox=\"0 0 20 20\"\r\n      onClick={onClick}\r\n    >\r\n      <title>Gold</title>\r\n      <desc>Icon for gold</desc>\r\n      <g id=\"Logo\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n        <g id=\"coin-copy-2\">\r\n          <circle\r\n            id=\"Oval\"\r\n            fill={active ? '#FFCF40' : '#C0C0C0'}\r\n            fillRule=\"nonzero\"\r\n            cx=\"10\"\r\n            cy=\"10\"\r\n            r=\"10\"\r\n          />\r\n          <path\r\n            d=\"M5.55578364,15.4442164 C3.98747343,14.1698866 3,12.2196023 3,10 C3,6.07999038 6.07999038,3 10,3 C12.2196023,3 14.1698866,3.98747343 15.4442164,5.55578364 C14.2427551,4.57953682 12.7004073,4 11,4 C7.07999038,4 4,7.07999038 4,11 C4,12.7004073 4.57953682,14.2427551 5.55578364,15.4442164 Z\"\r\n            id=\"Combined-Shape\"\r\n            fill={active ? '#FFBF00' : '#9E9E9E'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M10,0 C4.4285802,0 0,4.4285802 0,10 C0,15.5714198 4.4285802,20 10,20 C15.5714198,20 20,15.5714198 20,10 C20,4.4285802 15.5714198,0 10,0 Z M10,17 C6.07999038,17 3,13.9200096 3,10 C3,6.07999038 6.07999038,3 10,3 C13.9200096,3 17,6.07999038 17,10 C17,13.9200096 13.9200096,17 10,17 Z\"\r\n            id=\"Shape\"\r\n            fill={active ? '#FFDB70' : '#CDCDCD'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M10,19.9966916 L10,19.9966916 C15.5714198,20.1416163 20,15.5053955 20,10 L19.857099,10 C19.1428396,10 18.5713584,10.5795743 18.4285802,11.3039488 C18.142901,13.332272 17.1428396,15.2156706 15.7143208,16.5196193 C14.5714812,17.6786434 13.0000614,18.4030179 11.2857406,18.6928673 C10.5714812,18.6927428 10,19.2721926 10,19.9966916 Z\"\r\n            id=\"Path\"\r\n            fill={active ? '#FFBF00' : '#9E9E9E'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M10,0.00330843364 L10,0.00330843364 C4.4285802,-0.141616265 0,4.49460453 0,10 L0.142900988,10 C0.857160395,10 1.42864158,9.42042571 1.5714198,8.69605123 C1.85709901,6.66772798 2.8571604,4.78432942 4.28567921,3.48038065 C5.42851881,2.32135658 6.99993862,1.5969821 8.71425941,1.3071327 C9.42864158,1.3072572 10,0.727682916 10,0.00330843364 Z\"\r\n            id=\"Path\"\r\n            fill={active ? '#FFD24F' : '#B1B1B1'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M14.2239024,14.4323171 C14.0819512,14.4323171 13.940122,14.4323171 13.7981707,14.2903659 C13.5143902,14.0065854 13.5143902,13.5808537 13.7981707,13.2970732 C14.6496341,12.4456098 15.0753659,11.1684146 15.0753659,10.0331707 C15.0753659,9.60743902 15.3591463,9.32365854 15.784878,9.32365854 C16.2106098,9.32365854 16.4943902,9.60743902 16.4943902,10.0331707 C16.4943902,11.5941463 15.9267073,13.155122 14.9334146,14.2903659 C14.6496341,14.4323171 14.3658537,14.4323171 14.2239024,14.4323171 Z\"\r\n            id=\"Path\"\r\n            fill={active ? '#FFD24F' : '#B1B1B1'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M8.5,7.5 C8.5,6.67157288 9.17157288,6 10,6 C10.8284271,6 11.5,6.67157288 11.5,7.5 L11.5,12.5 C11.5,13.3284271 10.8284271,14 10,14 C9.17157288,14 8.5,13.3284271 8.5,12.5 L8.5,7.5 Z\"\r\n            id=\"Combined-Shape\"\r\n            fill={active ? '#FFBF00' : '#9E9E9E'}\r\n          />\r\n        </g>\r\n      </g>\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nexport default CarrotIcon;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport themeV2 from './theme';\r\nimport classNames from 'classnames';\r\nimport HelperText from './HelpText';\r\nimport CarrotIcon from '../CarrotIcon';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textFieldWrapper: {\r\n      display: 'flex',\r\n      alignItems: 'start',\r\n    },\r\n    iconWrapper: {\r\n      height: '44px',\r\n      width: '44px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      background: '#F6F6F6',\r\n      borderTop: `1px solid ${themeV2.palette.lightGray1}`,\r\n      borderBottom: `1px solid ${themeV2.palette.lightGray1}`,\r\n      borderLeft: `1px solid ${themeV2.palette.lightGray1}`,\r\n      borderRadius: '3px 0 0 3px',\r\n      '&.invalid-value': {\r\n        borderTop: `1px solid ${themeV2.palette.red2}`,\r\n        borderBottom: `1px solid ${themeV2.palette.red2}`,\r\n        borderLeft: `1px solid ${themeV2.palette.red2}`,\r\n      },\r\n    },\r\n    helperText: {\r\n      marginTop: '4px',\r\n      marginLeft: -40,\r\n    },\r\n    inputWrapper: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      width: '100%',\r\n      marginBottom: '6px',\r\n      '& input': {\r\n        borderRadius: '0 3px 3px 0',\r\n        padding: '0px 14px',\r\n        height: 44,\r\n        border: `1px solid ${themeV2.palette.lightGray1}`,\r\n        fontFamily: themeV2.typography.fontFamily,\r\n        // fontSize: 16,\r\n        '&:focus': {\r\n          outline: '0',\r\n        },\r\n        '&.invalid-value': {\r\n          borderColor: themeV2.palette.red2,\r\n        },\r\n      },\r\n    },\r\n}));\r\n\r\nfunction CustomCarrotInputField(props) {\r\n\r\n    const errorClass = () => {\r\n        if (props.error) {\r\n          return 'invalid-value';\r\n        } else {\r\n          return '';\r\n        }\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const {...rest} = props;\r\n    // const {\r\n    //     id,\r\n    //     placeholder,\r\n    //     helperText,\r\n    //     inputProps,\r\n    //     error,\r\n    //     customCompanyIcon,\r\n    //     inputChar,\r\n    //     ...rest\r\n    //   } = props;\r\n    return (\r\n        <div className={classNames(classes.textFieldWrapper, errorClass())}>\r\n            <div className={classNames(classes.iconWrapper, errorClass())}>\r\n                {props.inputChar ?\r\n                    (\r\n                        props.inputChar\r\n                    ) : (\r\n                        <CarrotIcon active size='20' url= {props.customCompanyIcon} />\r\n                    )\r\n                }\r\n            </div>\r\n            <div className={classes.inputWrapper}>\r\n                <input \r\n                    id={props.id}\r\n                    className={classNames(classes.textField, errorClass())}\r\n                    autoComplete=\"off\"\r\n                    placeholder={props.placeholder}\r\n                    {...rest}\r\n                />\r\n                <HelperText\r\n                    error={props.error}\r\n                    style={{ marginLeft: -40 }}\r\n                >\r\n                    {props.error ? `🚨 ${props.helperText}` : `👉 ${props.helperText}`}\r\n                </HelperText>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomCarrotInputField","import React, { useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport StyledModal from '../V2/StyledModal';\r\nimport StyledCloseButton from '../V2/StyledCloseButton';\r\nimport StyledButton from '../V2/StyledButton';\r\nimport CustomTypography from '../V2/CustomTypography';\r\nimport CustomCarrotInputField from '../V2/CustomCarrotInputField';\r\nimport themeV2 from '../V2/theme';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    Modal: {\r\n        '& .MuiDialogContent-root': {\r\n          width: '500px',\r\n          padding: '44px 54px 24px 54px',\r\n        },\r\n    },\r\n    buttonHolder: {\r\n        marginTop: 30,\r\n        display: 'flex',\r\n    },\r\n    button: {\r\n        display: 'block',\r\n        borderRadius: 3,\r\n        width: '50%',\r\n    }\r\n}));\r\n\r\nfunction CustomImpactModal(props) {\r\n    \r\n    // const { classes, openModal, customCompanyIcon } = this.props;\r\n\r\n    const maxGivingAllowance = () => {\r\n        if (props.selectedUsers.length <= 1) {\r\n          return {\r\n            availablePoints: props.availablePointsToGive,\r\n          };\r\n        }\r\n\r\n        const maxPointsToGive = Math.floor(\r\n          props.availablePointsToGive / props.selectedUsers.length,\r\n        );\r\n\r\n        const maxPointsToGiveText = `${maxPointsToGive} each`;\r\n        return { availablePoints: maxPointsToGive, maxPointsToGiveText };\r\n    \r\n    }\r\n\r\n    const { availablePoints, maxPointsToGiveText } = maxGivingAllowance();\r\n\r\n    //const [impact, setImpact] = useState('');\r\n    const [carrots, setCarrots] = useState('');\r\n    const [invalidValue, setInvalidValue] = useState(false);\r\n    const [formtouched, setFormtouched] = useState(false);\r\n    //const [selectTouched, setSelectTouched] = useState(false);\r\n\r\n    const classes = useStyles();\r\n    \r\n    const onCarrotInputChange = (e) => {\r\n        const { value } = e.target;\r\n        const { availablePoints } = maxGivingAllowance();\r\n        if (!value || value.match(/^\\d{1,}$/)) {\r\n            const total = props.selectedUsers.length > 0 ? props.selectedUsers.reduce(\r\n                (sum, user) => sum + parseInt(value, 10),\r\n                    0,\r\n                )\r\n                : value;\r\n\r\n            const remaining = availablePoints - value;\r\n\r\n            let invalidValue = false;\r\n\r\n            if (total > 0) {\r\n              if (remaining < 0) {\r\n                invalidValue = true;\r\n              }\r\n            }\r\n\r\n            if (value !== '') {\r\n              setFormtouched(true)\r\n            }\r\n\r\n            else {\r\n              setFormtouched(false)\r\n            }\r\n            \r\n            setCarrots(value)\r\n            setInvalidValue(invalidValue);\r\n            // this.setState(() => ({\r\n            //   carrots: value,\r\n            //   invalidValue,\r\n            // }));\r\n            // this.props.handleCarrots(value);\r\n        }\r\n    }\r\n    const closeModal = () => {\r\n        // this.resetState();\r\n        // this.props.closeModal();\r\n        // this.setState({ selectTouched: false, formtouched: false });\r\n    }\r\n\r\n    const onConfirmClick = () => {\r\n        \r\n    }\r\n\r\n    return (\r\n        (\r\n            <StyledModal\r\n                className={classes.Modal}\r\n                open={props.openModal}\r\n                onClose={closeModal}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <StyledCloseButton onClick={closeModal} />\r\n                <CustomTypography variant=\"h5\" weight=\"bold\" gutterBottom>\r\n                    Give a custom amount.\r\n                </CustomTypography>\r\n                <CustomTypography variant=\"body2\" style={{ marginTop: 10 }} gutterBottom>\r\n                    Giving a custom amount still requires an impact selection. Select an impact and enter an amount.\r\n                </CustomTypography>\r\n                <div style={{ marginTop: '16px' }}>\r\n                    <CustomCarrotInputField \r\n                        placeholder=\"Enter custom amount...\"\r\n                        helperText={`You can give up to:  ${\r\n                          maxPointsToGiveText ? maxPointsToGiveText : availablePoints\r\n                        }`}\r\n                        error={invalidValue}\r\n                        onChange={onCarrotInputChange}\r\n                        value={carrots}\r\n                        customCompanyIcon={props.customCompanyIcon}\r\n                    />\r\n                </div>\r\n                <div className={classes.buttonHolder}>\r\n                    <StyledButton\r\n                        variant=\"contained\"\r\n                        style={{\r\n                            boxShadow: 'none',\r\n                            marginRight: 16,\r\n                            border: `1px solid ${themeV2.palette.lightGray1}`,\r\n                            backgroundColor: '#F6F6F6',\r\n                            color: themeV2.palette.darkGray3\r\n                        }}\r\n                        onClick={closeModal}\r\n                        className={classes.button}\r\n                    >\r\n                        Cancel\r\n                    </StyledButton>\r\n                    <StyledButton\r\n                        variant='contained'\r\n                        color='primary'\r\n                        className={classes.button}\r\n                        disabled={ !formtouched || invalidValue }\r\n                        onClick= {onConfirmClick}\r\n                    >\r\n                        Enter\r\n                    </StyledButton>\r\n                </div>\r\n            </StyledModal>\r\n        )\r\n    )\r\n}\r\n\r\nexport default CustomImpactModal","import React, { useState } from 'react';\r\nimport _ from 'lodash';\r\nimport ReactHoverObserver from 'react-hover-observer';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport themeV2 from '../V2/theme';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    nestedSelect: {\r\n      position: 'relative',\r\n      left: 25,\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      marginLeft: 'auto',\r\n      color: '#00BBD1',\r\n      fontWeight: themeV2.typography.fontWeightMedium,\r\n      '& .MuiSelect-selectMenu': {\r\n        marginLeft: '5px',\r\n        fontWeight: themeV2.typography.fontWeightMedium,\r\n      },\r\n      '& .MuiInput-underline:before,.MuiInput-underline:after,.MuiInput-underline:hover:before': {\r\n        borderBottom: 'none !important',\r\n      },\r\n      '& .MuiSelect-select:focus': {\r\n        background: 'transparent',\r\n      },\r\n    },\r\n    amountSelector: {\r\n      position: 'relative',\r\n      left: -65,\r\n      visibility: 'hidden',\r\n    },\r\n    CarrotIcon: {\r\n      opacity: '0.25',\r\n    },\r\n    CarrotIconHover: {\r\n      opacity: '1',\r\n    },\r\n    MenuItem: {\r\n      height: '46px',\r\n      display: 'flex',\r\n      padding: '0 0 0 16px',\r\n      cursor: 'pointer',\r\n      '&:hover': {\r\n        background: '#F8F8F8',\r\n        '& .MuiSvgIcon-root': {\r\n          opacity: 1,\r\n        },\r\n      },\r\n    },\r\n    listCarrotIconWrapper: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      height: '100%',\r\n      paddingRight: '18px',\r\n    },\r\n    menuDiv: {\r\n      display: 'flex',\r\n      flex: 1,\r\n      height: '100%',\r\n      alignItems: 'center',\r\n    },\r\n    innerDefaultValues: {\r\n      fontFamily: themeV2.typography.adminFontFamily,\r\n      fontSize: '16px',\r\n      fontWeight: themeV2.typography.fontWeightSemibold,\r\n      marginBottom: '0px',\r\n      opacity: '0.25',\r\n      marginRight: '5px',\r\n    },\r\n    innerDropdownStyle: {\r\n      maxHeight: '300px',\r\n    },\r\n}));\r\n\r\nfunction ImpactSelectorItem(props) {//props: impact,onValueChange,defaultValue,availablePointsToGive\r\n  // const {\r\n  //   classes,\r\n  //   option,\r\n  //   impact,\r\n  //   defaultValue,\r\n  //   onSubSelectToggle,\r\n  //   availablePointsToGive,\r\n  //   onValueChange,\r\n  //   canGivePoints,\r\n  //   customCompanyIcon,\r\n  //   customCurrency,\r\n  //   selectedUsers,\r\n  //   ...rest\r\n  // } = this.props;\r\n    let carrotAmount = props.defaultValue;\r\n    let innerSelectValues = _.range(0, Number(props.defaultValue) + 1);\r\n    \r\n    if(props.defaultValue > props.availablePointsToGive) {\r\n        carrotAmount = props.availablePointsToGive;\r\n        innerSelectValues = _.range(0, Number(props.availablePointsToGive) + 1);\r\n    }\r\n\r\n    const value = carrotAmount || 0;\r\n    // let customCurrencyDisp = props.customCurrency.NAME_TITLEIZED_PLURAL;\r\n    let customCurrencyDisp = 'Tim';\r\n\r\n    if (value === 1) {\r\n        // customCurrencyDisp = props.customCurrency.NAME_TITLEIZED;\r\n        customCurrencyDisp = 'Trophy';\r\n    }\r\n\r\n    let multipleUserText = '';\r\n\r\n    if (props.selectedUsers.length > 1) {\r\n        multipleUserText = 'mỗi người';\r\n    }\r\n\r\n    const onOptionSelect = () => {\r\n        let carrotAmount = props.defaultValue;\r\n\r\n        if (props.defaultValue > props.availablePointsToGive) {\r\n            carrotAmount = props.availablePointsToGive;\r\n        }\r\n\r\n        props.onValueChange(props.impact, carrotAmount);\r\n    }\r\n\r\n    const toggleSelect = () => {\r\n        props.onSubSelectToggle(!selectOpen);\r\n        setSelectOpen(!selectOpen)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        props.onValueChange(props.impact, e.target.value);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setSelectOpen(false);\r\n        props.onSubSelectToggle(false);\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setSelectOpen(true);\r\n        props.onSubSelectToggle(true);\r\n    }\r\n    \r\n    const [selectOpen, setSelectOpen] = useState(false);\r\n    const classes = useStyles();\r\n    const {...rest} = props;\r\n    return (\r\n        <div id='impact'>\r\n            <ReactHoverObserver>\r\n                {({isHovering}) => (\r\n                    <div\r\n                        className={classes.MenuItem}\r\n                        key={props.impact}\r\n                        value={props.impact}\r\n                        {...rest}\r\n                    >\r\n                        <div className={classes.menuDiv} id='select-item' onClick={onOptionSelect}>\r\n                            {props.option} Tặng {carrotAmount} {customCurrencyDisp} {multipleUserText}\r\n                        </div>\r\n                        {\r\n                            props.canGivePoint && (\r\n                                <div\r\n                                    className={classes.nestedSelect}\r\n                                    onClick={toggleSelect}\r\n                                >\r\n                                    {\r\n                                        isHovering === true ? (\r\n                                            <div id='select-custom-item'>\r\n                                                <EditIcon fontSize='inherit' style={{position: 'relative', top: '2px'}} />\r\n                                                &nbsp;Edit amount\r\n                                                <Select\r\n                                                    SelectDisplayProps = {{id: 'select-custom-item'}}\r\n                                                    onChange={handleChange}\r\n                                                    value={carrotAmount}\r\n                                                    open={selectOpen}\r\n                                                    onClose={handleClose}\r\n                                                    onOpen={handleOpen}\r\n                                                    className={classes.amountSelector}\r\n                                                    MenuProps={{ classes: {\r\n                                                        paper: classes.innerDropdownStyle\r\n                                                     }}}\r\n                                                >\r\n                                                    {\r\n                                                        innerSelectValues.map(innerSelectValue => (\r\n                                                            <MenuItem value={innerSelectValue}\r\n                                                                key={innerSelectValue}\r\n                                                            >\r\n                                                                {innerSelectValue}\r\n                                                            </MenuItem>\r\n                                                        ))\r\n                                                    }\r\n                                                </Select>\r\n                                            </div>\r\n                                        ) : (\r\n                                            ''\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                )}\r\n            </ReactHoverObserver>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImpactSelectorItem;","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport CustomImpactModal from './CustomImpactModal';\r\nimport themeV2 from '../V2/theme';\r\nimport CarrotIcon from '../CarrotIcon';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Select from '@material-ui/core/Select';\r\nimport Input from '@material-ui/core/Input';\r\nimport ImpactSelectorItem from './ImpactSelectorItem';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    formControl: {\r\n        width: '100%',\r\n    },\r\n    placeholderStyle: {\r\n        color: 'rgba(223,223,223)',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        fontSize: '1rem'\r\n    },\r\n    underline: {\r\n        '&:after': {\r\n          borderBottom: '2px solid #FFD700',\r\n          transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\r\n        },\r\n        '&:before': {\r\n          borderBottom: '1px solid rgb(224, 224, 224)',\r\n        },\r\n        '&:hover:before': {\r\n          borderBottom: '1px solid rgb(224, 224, 224) !important',\r\n        },\r\n    },\r\n    iconWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '50px',\r\n        height: '31px',\r\n    },\r\n    iconStyle: {\r\n        justifyContent: 'center',\r\n        cursor: 'pointer',\r\n    },\r\n    emoticonStyle: {\r\n        justifyContent: 'center',\r\n        cursor: 'pointer',\r\n    },\r\n    nestedFormControl: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        marginLeft: 'auto',\r\n        '& .MuiInput-underline:before': {\r\n          borderBottom: 'none',\r\n        },\r\n    },\r\n    MenuItem: {\r\n        height: '46px',\r\n        display: 'flex',\r\n        padding: '5px 18px 5px 16px',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n          background: '#F8F8F8',\r\n        },\r\n    },\r\n    menuDiv: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        height: '100%',\r\n        alignItems: 'center',\r\n    },\r\n    impactSelector: {\r\n        '& .MuiSelect-select:focus': {\r\n          background: 'transparent',\r\n        },\r\n    },\r\n    impactSelectorDisabled: {\r\n        '& .MuiSelect-icon': {\r\n          visibility: 'hidden',\r\n        },\r\n    },\r\n}));\r\n\r\nfunction ImpactValueSelector(props) {//props: carrots,impact,onChange,options,selectedUsers,mePointsToGive,carrotsPerPost,error,canGiveCustomAmount,canGivePoints,onImpactOpen,onImpactClose,customCurrency,customCompanyIcon\r\n    const { inputIconOn, onInputIconOn, mePointsToGive } = props;\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [subSelectOpen, setSubSelectOpen] = useState(false);\r\n    const [customImpactModalOpen, setCustomImpactModalOpen] = useState(false);\r\n    const [impactValueSelector, setImpactValueSelector] = useState(props.impact);\r\n\r\n    const classes = useStyles();\r\n\r\n    //cpndidupdate\r\n    // useEffect(() => {\r\n    //     if(impactValueSelector) {\r\n    //         onInputIconOn(true)\r\n    //     }\r\n    //     else {\r\n    //         onInputIconOn(false)\r\n    //    }\r\n\r\n    \r\n    // }, [impactValueSelector, onInputIconOn]);\r\n\r\n    const placeholder = 'Tặng tim';\r\n    let maxPointsToGive = mePointsToGive;\r\n\r\n    if( props.selectedUsers.length > 0 ) {\r\n        maxPointsToGive = Math.floor(mePointsToGive / props.selectedUsers.length)\r\n    }\r\n\r\n    const disableSelect = Number(mePointsToGive) === 0;\r\n\r\n    const filterOptions = props.options.filter((option, index) => {\r\n        if(index > 0) {\r\n            const preOption = props.options[index - 1];\r\n            if (props.maxPointsToGive < preOption.goldLimit) {\r\n                return false;\r\n              }\r\n        }\r\n        return true;\r\n    })\r\n\r\n    const handleOpen = () => {\r\n        props.onImpactOpen();\r\n        onInputIconOn(true);\r\n        setMenuOpen(true);\r\n    }\r\n    \r\n    const handleClose = (e) => {\r\n        let itemClicked = false;\r\n        if (e) {\r\n            if (e.target.id === 'select-custom-item') {\r\n                itemClicked = true;\r\n            }\r\n        }\r\n\r\n        if (!itemClicked && !subSelectOpen) {\r\n            closeSelect();\r\n        }\r\n    }\r\n\r\n    const onImpactSelected = (impact, carrots) => {\r\n        props.onChange(impact, carrots);\r\n        setImpactValueSelector(impact);\r\n        closeSelect();\r\n    }\r\n\r\n    const onSubSelectToggle = toggle => {\r\n        setSubSelectOpen(toggle)\r\n    };\r\n\r\n    const closeSelect = () => {\r\n        props.onImpactClose();\r\n        setMenuOpen(false);\r\n        \r\n        if( impactValueSelector ) {\r\n            onInputIconOn(true);\r\n        } else {\r\n            onInputIconOn(false);\r\n        }\r\n        \r\n    };\r\n\r\n    const openCustomAmountModal = () => {\r\n        setCustomImpactModalOpen(true);\r\n    };\r\n\r\n    const closeCustomImpactModal = () => {\r\n        setCustomImpactModalOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CustomImpactModal \r\n                openModal={customImpactModalOpen}\r\n                closeModal={closeCustomImpactModal}\r\n                onClick={closeCustomImpactModal}\r\n                availablePointsToGive={mePointsToGive}\r\n                selectedUsers={props.selectedUsers}\r\n                values={props.options}\r\n                onImpactSelected={onImpactSelected}\r\n                customCompanyIcon={props.customCompanyIcon}\r\n            />\r\n            <div style={{display: 'flex'}}>\r\n                <div className={classes.iconWrapper}>\r\n                    <CarrotIcon\r\n                        className={props.customCompanyIcon && props.customCompanyIcon.type === 'emoji' ? classes.emoticonStyle : classes.iconStyle}\r\n                        size=\"16\"\r\n                        active={inputIconOn}\r\n                        onClick={handleOpen}\r\n                        url={props.customCompanyIcon}\r\n                        currency={props.customCurrency.NAME}\r\n                        style={{fontFamily: 'Segoe UI Emoji'}}\r\n                    />\r\n                </div>\r\n                <FormControl className={classes.formControl}>\r\n                    <Tooltip\r\n                        title={\r\n                            disableSelect\r\n                              ? `This field is disabled. You’ve used your allowance but you can still give recognitions`\r\n                              : ''\r\n                        }\r\n                        placement=\"top\"\r\n                    >\r\n                        <Select\r\n                            value={props.carrots}\r\n                            open={menuOpen}\r\n                            name='impactValue'\r\n                            displayEmpty\r\n                            fullWidth\r\n                            onOpen={handleOpen}\r\n                            onClose={(e) => handleClose(e)}\r\n                            className={classNames(classes.impactSelector, {\r\n                                [`${classes.impactSelectorDisabled}`] : disableSelect,\r\n                            })}\r\n                            disabled={disableSelect}\r\n                            input= {\r\n                                <Input\r\n                                    classes={{\r\n                                        underline: classes.underline\r\n                                    }}\r\n                                    name='impactValue'\r\n                                    id='impactValue'\r\n                                />\r\n                            }\r\n                            renderValue={() => {\r\n                                if(disableSelect) {\r\n                                    return (\r\n                                        <div className={classes.placeholderStyle}>\r\n                                            <div>\r\n                                                Your remaining allowance is 0 (zero), but you can still GIVERECOGNITIONs\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                if(!(props.impact) && !(props.carrots)) {\r\n                                    return (\r\n                                        <div className={classes.placeholderStyle}>\r\n                                            <div>{placeholder}</div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                const value = props.carrots || 0;\r\n                                let customCurrencyDisp = 'Tim';\r\n\r\n                                if( value === 1 ) {\r\n                                    customCurrencyDisp = 'Trophoy';\r\n                                }\r\n                                let goldSelected = value > 0 ? `${value} ${customCurrencyDisp}` : '';\r\n                                const total = props.selectedUsers.reduce((sum, user) => sum + parseInt(value, 10), 0);\r\n                                const remaining = mePointsToGive - (total > 0 ? total : value);\r\n                                let excessAlert = false;\r\n\r\n                                if(remaining < 0) {\r\n                                    excessAlert = true;\r\n                                }\r\n                                if(total > 0) {\r\n                                    if (remaining >= 0) {\r\n                                        if (Number(props.selectedUsers.length) === 1) {\r\n                                            goldSelected = `${total} ${customCurrencyDisp}`;\r\n                                        }\r\n                                        else {\r\n                                            goldSelected = `${value} ${customCurrencyDisp} mỗi người`;\r\n                                        }\r\n                                    } else {\r\n                                        goldSelected = `${value} ${customCurrencyDisp} each exceeds allowance`;\r\n                                    }\r\n                                }\r\n\r\n                                const impactObj = props.options.find(\r\n                                    option => option.value === props.impact,\r\n                                );\r\n\r\n                                let dispText;\r\n\r\n                                if (Number(value) === 0) {\r\n                                    dispText = 'No trophies';\r\n                                } \r\n                                else if (!(props.impact)) {\r\n                                    dispText = goldSelected;\r\n                                }\r\n                                else {\r\n                                    dispText = `${impactObj.label} ${goldSelected}`;\r\n                                }\r\n                                return (\r\n                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                        <div style={{ color: excessAlert ? themeV2.palette.red2 : '' }}>\r\n                                            {dispText}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }}\r\n                        >\r\n                            {\r\n                                filterOptions.map(option => (\r\n                                    <ImpactSelectorItem\r\n                                        option={option.label}\r\n                                        impact={option.value}\r\n                                        defaultValue={option.goldLimit}\r\n                                        canGivePoints={props.canGivePoints}\r\n                                        availablePointsToGive={maxPointsToGive}\r\n                                        onValueChange={onImpactSelected}\r\n                                        onSubSelectToggle={onSubSelectToggle}\r\n                                        key={option.label}\r\n                                        customCompanyIcon={props.customCompanyIcon}\r\n                                        customCurrency={props.customCurrency}\r\n                                        selectedUsers={props.selectedUsers}\r\n                                    >\r\n                                        {option.label}\r\n                                    </ImpactSelectorItem>\r\n                                ))\r\n                            }\r\n                            {props.canGiveCustomAmount && (\r\n                                <div className={classes.MenuItem}>\r\n                                    <div\r\n                                        className={classes.menuDiv}\r\n                                        onClick={openCustomAmountModal}\r\n                                    >\r\n                                        + Enter a custom amount\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </Select>\r\n                    </Tooltip>\r\n                </FormControl>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default ImpactValueSelector","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ProfilePic } from '../../assets/Util/profilePic';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    user: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    userName: {\r\n        fontSize: '16px',\r\n        fontWeight: 'normal',\r\n        b: {\r\n          fontWeight: 'normal',\r\n        },\r\n    },\r\n    userId: {\r\n        fontSize: '12px',\r\n        fontWeight: 'normal',\r\n    },\r\n    autocomplete_user_fullname: {\r\n        paddingLeft: 8,\r\n        fontSize: 12,\r\n        color: '#2C2C2C',\r\n        fontWeight: 600,\r\n        letterSpacing: 0.2\r\n    },\r\n}));\r\n\r\nconst Entry = (props) => {\r\n    const {...parentProps} = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <div {...parentProps}>\r\n            <div className={classes.user}>\r\n                <ProfilePic size={32} user={props.mention} />\r\n                <span className={classes.autocomplete_user_fullname}>\r\n                    <div className={classes.userName}>{props.mention.name}</div>\r\n                    <div className={classes.userId}>\r\n                        {`@${props.mention.username}`}\r\n                    </div>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nfunction CustomMentionSuggesstions(props) {\r\n    const { onSearchChange, suggestions, onOpenSuggestions, onCloseSuggestions, onAddMention, MentionComponent } = props;\r\n    return (\r\n        <MentionComponent \r\n            onSearchChange={onSearchChange}\r\n            suggestions={suggestions}\r\n            onOpen={onOpenSuggestions}\r\n            onClose={onCloseSuggestions}\r\n            entryComponent={Entry}\r\n            onAddMention={onAddMention}\r\n        />\r\n    )\r\n    \r\n    \r\n}\r\n\r\nexport default CustomMentionSuggesstions","import React from 'react';\r\nimport Editor from 'draft-js-plugins-editor';\r\nimport createMentionPlugin from 'draft-js-mention-plugin';\r\nimport CustomMentionSuggestions from './CustomMentionSuggesstions';\r\n\r\nfunction CustomEditor(props) {\r\n    // const {\r\n    //     editorState,\r\n    //     onChange,\r\n    //     editorRef,\r\n    //     onBlur,\r\n    //     onFocus,\r\n    //     placeholder,\r\n    //     onSearchChange,\r\n    //     suggestions,\r\n    //     onOpenSuggestions,\r\n    //     onCloseSuggestions,\r\n    //     onAddMention,\r\n    //   } = this.props;\r\n    const mentionPlugin = createMentionPlugin({\r\n        entityMutability: 'IMMUTABLE',\r\n        mentionTrigger: '@',\r\n        supportWhitespace: true,\r\n    })\r\n\r\n    const { MentionSuggestions } = mentionPlugin;\r\n\r\n    return (\r\n        <>\r\n            <Editor\r\n                editorState={props.editorState}\r\n                onChange={props.onChange}\r\n                plugins={[mentionPlugin]}\r\n                ref={props.editorRef}\r\n                onBlur={props.onBlur}\r\n                onFocus={props.onFocus}\r\n                placeholder={props.placeholder}\r\n            />\r\n            <CustomMentionSuggestions\r\n                onSearchChange={props.onSearchChange}\r\n                suggestions={props.suggestions}\r\n                MentionComponent={MentionSuggestions}\r\n                onOpenSuggestions={props.onOpenSuggestions}\r\n                onCloseSuggestions={props.onCloseSuggestions}\r\n                onAddMention={props.onAddMention}\r\n            />\r\n        </>\r\n    )\r\n}\r\nexport default CustomEditor;","import React, { useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport CustomEditor from '../V2/CustomEditor';\r\n\r\n// import Fuse from 'fuse.js';\r\n// import { getter } from '../../assets/Util/object';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        width: '100%',\r\n    },\r\n    iconWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '50px',\r\n        height: '31px',\r\n    },\r\n    iconStyle: {\r\n        fontSize: '16px',\r\n        cursor: 'pointer',\r\n    },\r\n    iconInactiveStyle: {\r\n        color: '#9e9e9e',\r\n        filter: 'grayscale(1)',\r\n    },\r\n    iconActiveStyle: {\r\n        color: theme.palette.secondary.main,\r\n        filter: 'grayscale(0)',\r\n    },\r\n    inputDiv: {\r\n        marginTop: 7,\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n        verticalAlign: 'top',\r\n        fontSize: '16px',\r\n        overflow: 'hidden',\r\n    },\r\n    errorhelper: {\r\n        color: '#f44336',\r\n        margin: 0,\r\n        fontSize: '0.75rem',\r\n        marginTop: 3,\r\n        textAlign: 'left',\r\n        fontWeight: 400,\r\n        lineHeight: 1.66,\r\n    },\r\n    textarea__input: {\r\n        width: '100%'\r\n    },\r\n    // textarea__input__input::-webkit-input-placeholder {\r\n    //     color: #e2e2e2 !important; }\r\n}))\r\n\r\nconst DIV_ID = 'gr_post_div';\r\n\r\nfunction MessageInput(props) {\r\n    //const [inputIconOn, setInputIconOn] = useState(false);\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const { inputIconMessageOn, onInputIconMessageOn } = props;\r\n    const [editor, setEditor] = useState();\r\n    const classes = useStyles();\r\n\r\n    const onFocus = () => {\r\n        onInputIconMessageOn(true);\r\n        editor.focus();\r\n        props.onFocus();\r\n    }\r\n\r\n    const onChange = (editorState) => {\r\n        props.handleMessage(editorState)\r\n    }\r\n\r\n    const onInputBlur = () => {\r\n\r\n        if(props.hasText) {\r\n            onInputIconMessageOn(true);\r\n        }\r\n        \r\n        else {\r\n            onInputIconMessageOn(false);\r\n        }\r\n    }\r\n\r\n    const onSearchChange = () => {\r\n\r\n    }\r\n\r\n    const onOpenSuggestions = () => {\r\n\r\n    }\r\n\r\n    const onCloseSuggestions = () => {\r\n\r\n    }\r\n\r\n    const onAddMention = () => {\r\n\r\n    }\r\n    \r\n    const getErrorMessage = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.iconWrapper}>\r\n                <div className={classNames(\r\n                    classes.iconStyle,\r\n                    inputIconMessageOn ? classes.iconActiveStyle : classes.iconInactiveStyle\r\n                )}\r\n                    onClick={onFocus}\r\n                >\r\n                    <span role=\"img\" aria-label=\"icon\">\r\n                        💌\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div\r\n                    onClick={onFocus}\r\n                    className={classNames(classes.textarea__input, DIV_ID)}\r\n                >\r\n                    <CustomEditor\r\n                        editorState={props.editorState}\r\n                        onChange={onChange}\r\n                        editorRef={(e) => {\r\n                            setEditor(e)\r\n                        }}\r\n                        onBlur={onInputBlur}\r\n                        onFocus={onFocus}\r\n                        placeholder=\"Hãy viết những lời ý nghĩa gửi đến người đó\"\r\n                        onSearchChange={onSearchChange}\r\n                        onAddMention={onAddMention}\r\n                        suggestions={suggestions}\r\n                        onOpenSuggestions={onOpenSuggestions}\r\n                        onCloseSuggestions={onCloseSuggestions}\r\n                    />\r\n                </div>\r\n                {props.error && (\r\n                    <div className={classes.errorhelper}>{getErrorMessage()}</div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MessageInput","import React , { useMemo } from 'react';\r\nimport { oneOf, string, bool, oneOfType, node, arrayOf, object, array } from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ThemeV2 from '../V2/theme';\r\n\r\nconst variantMap = {\r\n    body2: {\r\n        fontWeight: ThemeV2.typography.fontWeightRegular,\r\n    },\r\n    body2SemiBold: {\r\n        fontWeight: ThemeV2.typography.fontWeightSemibold,\r\n    },\r\n    body2Bold: {\r\n        fontWeight: ThemeV2.typography.fontWeightBold,\r\n    },\r\n    body2Medium: {\r\n        fontWeight: ThemeV2.typography.fontWeightMedium,\r\n    },\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: ({\r\n        fontFamily,\r\n        fontSize,\r\n        fontWeight,\r\n        fontStyle,\r\n        lineHeight,\r\n        color,\r\n    }) => ({\r\n        fontFamily,\r\n        fontSize,\r\n        fontWeight,\r\n        fontStyle,\r\n        lineHeight,\r\n        color,\r\n    }),\r\n})\r\n\r\nconst Body = ({\r\n    children,\r\n    className: parentClassName,\r\n    variant,\r\n    fontFamily,\r\n    color,\r\n    inline,\r\n    disabled,\r\n    style,\r\n    'data-testid': dataTestId\r\n}) => {\r\n    const fontColor = disabled ? 'gray6' : color;\r\n    const variantFromMap = variantMap[variant];\r\n    const { fontSize, fontWeight, fontStyle, lineHeight } = variantFromMap;\r\n    const paletteColor = ThemeV2.palette[fontColor];\r\n    const bodyStyle = useMemo(\r\n        () => ({\r\n            fontFamily,\r\n            fontSize,\r\n            fontWeight,\r\n            fontStyle,\r\n            lineHeight,\r\n            color: paletteColor\r\n        }),\r\n        [fontFamily, fontSize, fontStyle, fontWeight, lineHeight, paletteColor]\r\n    );\r\n    const classes = useStyles(bodyStyle);\r\n    const className = `${classes.root} ${parentClassName}`;\r\n\r\n    if(inline) {\r\n        return (\r\n            <span className={className} data-testid={dataTestId} style={style}>\r\n                {children}\r\n            </span>\r\n        )\r\n    }\r\n    return (\r\n        <div className={className} data-testid={dataTestId} style={style}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nBody.propTypes = {\r\n    variant: oneOf(Object.keys(variantMap)),\r\n    color: oneOf(Object.keys(ThemeV2.palette)),\r\n    fontFamily: string,\r\n    inline: bool,\r\n    className: string,\r\n    children: oneOfType([arrayOf(node), node]).isRequired,\r\n    disabled: bool,\r\n    'data-testid': string,\r\n    style: oneOfType([object, array]),\r\n};\r\n  \r\nBody.defaultProps = {\r\n    variant: 'body1',\r\n    className: '',\r\n    inline: false,\r\n    disabled: false,\r\n    'data-testid': '',\r\n    style: {},\r\n};\r\n\r\nconst MemoizedBody = React.memo(Body);\r\nMemoizedBody.displayName = 'Body';\r\n\r\nexport default MemoizedBody;","const GIVE_RECOGNITION_HEADER = 'Lời cảm ơn';\r\nconst RECOGNITION_TIPS_HEADER_TEXT = 'Những gợi ý để lời cảm ơn có ý nghĩa lan tỏa hơn';\r\nconst RECOGNITION_TIPS = [\r\n    {\r\n        title: 'Lời mở đầu',\r\n        body: 'Hãy bắt đầu với “Cảm ơn bạn vì...” hoặc “Tôi cảm thấy rất phấn khích với...”',\r\n    },\r\n    {\r\n        title: 'Nội dung',\r\n        body: 'Mô tả và xác định những gì họ đã làm được. Đôi khi bạn bày tỏ tấm lòng với những lời nhắn chung chung cũng không thành vấn để (ví dụ: Cảm ơn bạn đã luôn sẵn lòng hỗ trợ mỗi khi tôi cần bạn nhất. Mãi yêu...). Tuy nhiên, bạn hãy chỉ rõ một sự kiện nào đó để cho thấy sự ảnh hưởng lớn đến bạn như thế nào (ví dụ: “Cảm ơn bạn đã dành thêm chút thời gian quý báu để làm buổi thuyết trình được thành công tốt đẹp...”)'\r\n    },\r\n    {\r\n        title: 'Lời kết thúc',\r\n        body: 'Kết thúc lời nhắn với một dòng ngắn gọn xúc tích (ví dụ: “Tôi đánh giá rất cao [sự hợp tác] của bạn.”) là sự lựa chọn tốt.'\r\n    },\r\n    {\r\n        title: 'Ví dụ',\r\n        body: 'Tôi thật sự đánh giá rất cao sự giúp đỡ của bạn trong việc thúc đẩy sự hợp tác các bên để cho ra mắt sản phẩm mới của tập đoàn trong lĩnh vực R&D. Bạn luôn sẵn lòng giúp đỡ các thành viên trong dự án ngay cả khi trong tình huống cần gấp. Tôi rất biết ơn sự đóng góp ý kiến của bạn để tạo ra những trải nhiệm người dùng tốt hơn. Tôi đặc biệt thích cái nút bạn đã di chuyển ra ngoài màn hình chính để người dùng thuận tiện hơn. Ngoài ra, tôi còn đánh giá cao về sự tỉ mỉ trong việc thiết kế giao diện và cách bạn nhìn nhận vấn đề. Trân trọng...'\r\n    }\r\n]\r\n\r\nexport {\r\n    GIVE_RECOGNITION_HEADER,\r\n    RECOGNITION_TIPS_HEADER_TEXT,\r\n    RECOGNITION_TIPS\r\n}","import React from 'react';\r\n\r\nimport Body from '../atom/Body';\r\nimport ThemeV2 from '../V2/theme';\r\n\r\nimport { RECOGNITION_TIPS_HEADER_TEXT, RECOGNITION_TIPS }  from '../../assets/Util/constants';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExpandMoreIcon  from '@material-ui/icons/ExpandMore';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        background: ThemeV2.palette.gray[0],\r\n        borderRadius: 4,\r\n    },\r\n    collapsingHeader: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        padding: '8px 12px',\r\n        cursor: 'pointer',\r\n        outline: 0,\r\n        border: 'none',\r\n        '&:focus': {\r\n            background: ThemeV2.palette.gray[20],\r\n        },\r\n    },\r\n    toggleButton: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        right: 4,\r\n        transform: 'translateY(-50%)',\r\n    },\r\n    tip: {\r\n        display: 'grid',\r\n        gridTemplateColumns: '22px auto',\r\n        marginBottom: 8,\r\n        '&:last-child': {\r\n            // marginTop: 4,\r\n        },\r\n    },\r\n    tipsWrapper: {\r\n        padding: 12,\r\n    },\r\n    indexHolder: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: 32,\r\n        width: 44,\r\n    },\r\n    tipIndex: {\r\n        color: ThemeV2.palette.white[0],\r\n        zIndex: 0,\r\n        '&:after': {\r\n          content: \"''\",\r\n          height: 20,\r\n          width: 20,\r\n          position: 'absolute',\r\n          top: '50%',\r\n          right: 'auto',\r\n          left: 'auto',\r\n          margin: 'auto',\r\n          transform: 'translateY(-50%)',\r\n          background: ThemeV2.palette.blue[60],\r\n          borderRadius: '50%',\r\n          zIndex: -2,\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        paddingLeft: 20,\r\n        paddingTop: 4\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(-180deg)',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n    },\r\n}))\r\n\r\nfunction GiveRecognitionTips (props) {\r\n    const { isOpen, onToggleClick } = props;\r\n    \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div\r\n                className={classes.collapsingHeader}\r\n                role='button'\r\n                tabIndex={0}\r\n                onClick={onToggleClick}\r\n            >\r\n                <Body variant='body2Medium'>\r\n                    {RECOGNITION_TIPS_HEADER_TEXT}\r\n                </Body>\r\n                <IconButton \r\n                    className={classes.toggleButton}\r\n                    aria-expanded={isOpen}\r\n                    aria-label=\"show more\"\r\n                >\r\n                    <ExpandMoreIcon \r\n                        className={\r\n                            isOpen ? classes.expandOpen : ''\r\n                        }\r\n                    />\r\n                </IconButton>\r\n            </div>\r\n            <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\r\n                    <div className={classes.tipsWrapper}>\r\n                        {RECOGNITION_TIPS.map((tip, index) => (\r\n                            <div className={classes.tip} key={index}>\r\n                                <div\r\n                                    className={`${classes.indexHolder} ${index + 1 !== RECOGNITION_TIPS.length && classes.tipIndex}`}\r\n                                >\r\n                                    {index + 1 !== RECOGNITION_TIPS.length ? ( index + 1 ) : \r\n                                        ( \r\n                                            <StarIcon icon=\"star\" style={{color: '#F5D45F'}}/>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className={classes.contentWrapper}>\r\n                                    <Body variant=\"body2Medium\">{tip.title}</Body>\r\n                                    <Body variant=\"body2\">{tip.body}</Body>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GiveRecognitionTips","import closer_badge from '../images/badges/closer_badge.png';\r\n// import closer_badge_thumb from '../img/badges/thumb/closer_badge_thumb.png';\r\nimport creativity_badge from '../images/badges/creativity_badge.png';\r\n// import creativity_badge_thumb from '../img/badges/thumb/creativity_badge_thumb.png';\r\nimport culture_badge from '../images/badges/culture_badge.png';\r\n// import culture_badge_thumb from '../img/badges/thumb/culture_badge_thumb.png';\r\nimport detail_master_badge from '../images/badges/detail_master_badge.png';\r\n// import detail_master_badge_thumb from '../img/badges/thumb/detail_master_badge_thumb.png';\r\nimport goal_smasher_badge from '../images/badges/goal_smasher_badge.png';\r\n// import goal_smasher_badge_thumb from '../img/badges/thumb/goal_smasher_badge_thumb.png';\r\nimport idea_maker_badge from '../images/badges/idea_maker_badge.png';\r\n// import idea_maker_badge_thumb from '../img/badges/thumb/idea_maker_badge_thumb.png';\r\nimport initiative_badge from '../images/badges/initiative_badge.png';\r\n// import initiative_badge_thumb from '../img/badges/thumb/initiative_badge_thumb.png';\r\nimport innovator_badge from '../images/badges/innovator_badge.png';\r\n// import innovator_badge_thumb from '../img/badges/thumb/innovator_badge_thumb.png';\r\nimport launcher_badge from '../images/badges/launcher_badge.png';\r\n// import launcher_badge_thumb from '../img/badges/thumb/launcher_badge_thumb.png';\r\nimport leadership_badge from '../images/badges/leadership_badge.png';\r\n// import leadership_badge_thumb from '../images/badges/thumb/leadership_badge_thumb.png';\r\nimport lifesaver_badge from '../images/badges/lifesaver_badge.png';\r\n// import lifesaver_badge_thumb from '../images/badges/thumb/lifesaver_badge_thumb.png';\r\nimport motivator_badge from '../images/badges/motivator_badge.png';\r\n// import motivator_badge_thumb from '../images/badges/thumb/motivator_badge_thumb.png';\r\nimport navigator_badge from '../images/badges/navigator_badge.png';\r\n// import navigator_badge_thumb from '../images/badges/thumb/navigator_badge_thumb.png';\r\nimport obstacle_badge from '../images/badges/obstacle_badge.png';\r\n// import obstacle_badge_thumb from '../images/badges/thumb/obstacle_badge_thumb.png';\r\nimport problem_solver_badge from '../images/badges/problem_solver_badge.png';\r\n// import problem_solver_badge_thumb from '../images/badges/thumb/problem_solver_badge_thumb.png';\r\nimport teamwork_badge from '../images/badges/teamwork_badge.png';\r\n// import teamwork_badge_thumb from '../images/badges/thumb/teamwork_badge_thumb.png';\r\n import top_earner_badge from '../images/badges/top_earner_badge.png';\r\n// import top_earner_badge_thumb from '../images/badges/thumb/top_earner_badge_thumb.png';\r\n\r\nexport const badges = [\r\n  {\r\n    name: 'closer',\r\n    displayName: 'Closer',\r\n  },\r\n  {\r\n    name: 'creativity',\r\n    displayName: 'Creativity',\r\n  },\r\n  {\r\n    name: 'culture',\r\n    displayName: 'Culture Champ',\r\n  },\r\n  {\r\n    name: 'detail_master',\r\n    displayName: 'Detail Master',\r\n  },\r\n  {\r\n    name: 'goal_smasher',\r\n    displayName: 'Goal Smasher',\r\n  },\r\n  {\r\n    name: 'idea_maker',\r\n    displayName: 'Idea Maker',\r\n  },\r\n  {\r\n    name: 'initiative',\r\n    displayName: 'Initiative',\r\n  },\r\n  {\r\n    name: 'innovator',\r\n    displayName: 'Innovator',\r\n  },\r\n  {\r\n    name: 'launcher',\r\n    displayName: 'Launcher',\r\n  },\r\n  {\r\n    name: 'leadership',\r\n    displayName: 'Leadership',\r\n  },\r\n  {\r\n    name: 'life_saver',\r\n    displayName: 'Life Saver',\r\n  },\r\n  {\r\n    name: 'motivator',\r\n    displayName: 'Motivator',\r\n  },\r\n  {\r\n    name: 'navigator',\r\n    displayName: 'Navigator',\r\n  },\r\n  {\r\n    name: 'obstacle_eliminator',\r\n    displayName: 'Obstacle Eliminator',\r\n  },\r\n  {\r\n    name: 'problem_solver',\r\n    displayName: 'Problem Solver',\r\n  },\r\n  {\r\n    name: 'teamwork',\r\n    displayName: 'Teamwork',\r\n  },\r\n  {\r\n    name: 'top_earner',\r\n    displayName: 'Top Earner',\r\n  },\r\n];\r\n\r\nexport const getBadgeObjectForName = (badgeName) => badges.find(badge => badge.name === badgeName);\r\n\r\nexport const getImageForBadge = (badge, thumb = false) => {\r\n  switch (badge.name) {\r\n    case 'creativity':\r\n      return creativity_badge;\r\n    case 'culture':\r\n      return culture_badge;\r\n    case 'detail_master':\r\n      return detail_master_badge;\r\n    case 'goal_smasher':\r\n      return goal_smasher_badge;\r\n    case 'idea_maker':\r\n      return idea_maker_badge;\r\n    case 'initiative':\r\n      return initiative_badge;\r\n    case 'innovator':\r\n      return innovator_badge;\r\n    case 'launcher':\r\n      return launcher_badge;\r\n    case 'leadership':\r\n      return leadership_badge;\r\n    case 'life_saver':\r\n      return lifesaver_badge;\r\n    case 'motivator':\r\n      return motivator_badge;\r\n    case 'navigator':\r\n      return navigator_badge;\r\n    case 'obstacle_eliminator':\r\n      return obstacle_badge;\r\n    case 'problem_solver':\r\n      return problem_solver_badge;\r\n    case 'teamwork':\r\n      return teamwork_badge;\r\n    case 'top_earner':\r\n      return top_earner_badge;\r\n    case 'closer':\r\n      return closer_badge;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Img }  from 'react-image';\r\nimport { getImageForBadge } from '../../assets/Util/BadgesInfo';\r\n//import badge_selected from '../../../../img/badge_selected.png';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    badge_selector_item: {\r\n        height: 90,\r\n        padding: 10,\r\n        position: 'relative',\r\n        cursor: 'pointer'\r\n    },\r\n    badge_selector_img: {\r\n        width: 54,\r\n        height: 54\r\n    },\r\n    badge_selector_name: {\r\n        color: '#4b4f56',\r\n        fontSize: 8,\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        marginTop: 10,\r\n        wordWrap: 'break-word',\r\n        width: 54\r\n    },\r\n}))\r\nfunction BadgesItem(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div\r\n            className={classes.badge_selector_item}\r\n            onClick={props.onSelect}\r\n        >\r\n            <Img\r\n                className={classes.badge_selector_img}\r\n                alt={`badge-${props.badge.name}`}\r\n                src={getImageForBadge(props.badge)}\r\n            />\r\n            <div className={classes.badge_selector_name}>\r\n                {props.badge.displayName}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BadgesItem","import React from 'react';\r\nimport BadgesItem from './BadgesItem';\r\nimport { badges } from '../../assets/Util/BadgesInfo';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    badge_selector_wrapper: {\r\n        width: 320,\r\n        height: 230,\r\n        padding: 10\r\n    },\r\n    badge_selector_body: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    badge_selected_image: {\r\n        width: 60,\r\n        height: 61,\r\n        position: 'absolute',\r\n        top: 7,\r\n        left: 7\r\n    }\r\n}))\r\n\r\nfunction BadgesSelector(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.badge_selector_wrapper}>\r\n            <div className={classes.badge_selector_body}>\r\n                {\r\n                    badges.map((badge) => (\r\n                        <BadgesItem\r\n                            key={badge.name}\r\n                            badge={badge}\r\n                            selected={props.selectedBadge ? props.selectedBadge.name === badge.name : false}\r\n                            onSelect={() => { props.updateSelected(badge) }}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BadgesSelector;\r\n","import { convertToRaw } from 'draft-js';\r\n\r\nconst getLiteralTextFromEditor = (editorState = []) => {\r\n  const blocks = convertToRaw(editorState.getCurrentContent()).blocks;\r\n\r\n  const mappedBlocks = blocks.map(\r\n    (block) => (!block.text.trim() && '\\n') || block.text,\r\n  );\r\n\r\n  let newText = '';\r\n  for (let i = 0; i < mappedBlocks.length; i++) {\r\n    const block = mappedBlocks[i];\r\n\r\n    // handle last block\r\n    if (i === mappedBlocks.length - 1) {\r\n      newText += block;\r\n    } else {\r\n      // otherwise we join with \\n, except if the block is already a \\n\r\n      if (block === '\\n') newText += block;\r\n      else newText += block + '\\n';\r\n    }\r\n  }\r\n  return newText;\r\n};\r\n\r\nconst getTextFromEditor = (editorState, mentionsToReplace = []) => {\r\n  let newText = getLiteralTextFromEditor(editorState);\r\n  mentionsToReplace.forEach((mention) => {\r\n    newText = newText.replace(\r\n      new RegExp(mention.name, 'g'),\r\n      `@__${mention.id}__@`,\r\n    );\r\n  });\r\n  return newText;\r\n};\r\n\r\nconst getMentionsToReplace = (selectedMentions, employees) => {\r\n  \r\n  return selectedMentions.map((id) => {\r\n    const employee = employees.find((emp) => emp.id === id);\r\n    return {\r\n      id,\r\n      name: employee.name || '',\r\n    };\r\n  });\r\n};\r\n\r\nconst getMentionsFromEditorSate = (editorState, mentions) => {\r\n  const userIdsMentioned = [];\r\n  const message = getLiteralTextFromEditor(editorState);\r\n  mentions.forEach((mention) => {\r\n    if ((message.match(new RegExp(mention.name, 'g')) || []).length > 0) {\r\n      userIdsMentioned.push(mention.id);\r\n    }\r\n  });\r\n  return userIdsMentioned;\r\n};\r\n\r\nexport {\r\n  getTextFromEditor,\r\n  getMentionsToReplace,\r\n  getLiteralTextFromEditor,\r\n  getMentionsFromEditorSate,\r\n};\r\n","import React from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nexport const StyledTabs = withStyles({\r\n    root: {\r\n        background: '#f6f6f6'\r\n    },\r\n    indicator: {\r\n      backgroundColor: '#FF704C',\r\n    },\r\n})(Tabs);\r\n\r\nexport const StyledTab = withStyles(() => ({\r\n    root: {\r\n        textTransform: 'none',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        },\r\n    },\r\n}))((props) => <Tab disableRipple {...props} />)","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//lib\r\nimport { IconButton, Tooltip, Button, Popover, Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport AdjustIcon from '@material-ui/icons/Adjust';\r\nimport { EditorState, convertToRaw, Modifier } from 'draft-js';\r\nimport axios from 'axios';\r\nimport classNames from 'classnames';\r\n\r\n//emoji\r\nimport EmojiIcon from '@material-ui/icons/InsertEmoticon';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport { Picker } from 'emoji-mart';\r\n\r\n//GIF\r\nimport GifIcon from '@material-ui/icons/Gif';\r\nimport GiphySelect from 'react-giphy-select';\r\nimport 'react-giphy-select/lib/styles.css';\r\n\r\n//give-carrot\r\nimport DSTypeAhead from './give-carrot/DSTypeAhead';\r\nimport ImpactValueSelector from './give-carrot/ImpactValueSelector';\r\nimport MessageInput from './give-carrot/MessageInput';\r\nimport GiveRecognitionTips from './give-carrot/GiveRecognitionTips';\r\nimport BadgesSelector from './give-carrot/BadgesSelector';\r\n\r\n//assets\r\nimport { getTextFromEditor, getMentionsToReplace } from '../assets/Util/mention';\r\nimport { GIVE_RECOGNITION_HEADER } from '../assets/Util/constants';\r\nimport { titleize } from '../assets/Util/text';\r\nimport { getImageForBadge } from '../assets/Util/BadgesInfo';\r\nimport { StyledTabs, StyledTab } from '../components/atom/StyledTabs';\r\n\r\n//store\r\nimport { StoreContext } from '../store/StoreContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    post_container: {\r\n        border: '.5px solid #EEEEEE',\r\n        background: '#FFFFFF',\r\n        borderRadius: 2,\r\n        marginBottom: 10,\r\n    },\r\n    form_container: {\r\n        position: 'relative',\r\n        width: '100%'\r\n    },\r\n    p_16: {\r\n        padding: 16\r\n    },\r\n    input_row_style: {\r\n        position: 'relative',\r\n        marginBottom: 10,\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n    },\r\n    iconButton: {\r\n        color: '#9E9E9E',\r\n        '&:hover': {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.08)',\r\n        },\r\n        '&:focus': {\r\n            outline: 'none',\r\n        },\r\n    },\r\n    button: {\r\n        color: '#FFFFFF',\r\n        borderRadius: 4,\r\n        minWidth: 140,\r\n        textTransform: 'none',\r\n    },\r\n    gc_button: {\r\n        marginLeft: 10,\r\n        marginRight: 10\r\n    },\r\n    add_emoji_img: {\r\n        width: 20,\r\n        height: 20\r\n    }\r\n}));\r\n\r\nconst impactLevels = [\r\n    {\r\n        goldLimit: 10,\r\n        label: \"🙂\",\r\n        value: \"small\"\r\n    },\r\n    {\r\n        goldLimit: 20,\r\n        label: \"😀\",\r\n        value: \"medium\"\r\n    },\r\n    {\r\n        goldLimit: 30,\r\n        label: \"👏\",\r\n        value: \"large\"\r\n    },\r\n    {\r\n        goldLimit: 40,\r\n        label: \"💪\",\r\n        value: \"huge\"\r\n    },\r\n    {\r\n        goldLimit: 50,\r\n        label: \"🚀\",\r\n        value: \"above\"\r\n    }\r\n];\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction PostRecognition (props) {\r\n    const classes = useStyles();\r\n    const [slideIndex, setSlideIndex] = useState(0);\r\n\r\n    //form value\r\n    const [selectedBadge, setSelectedBadge] = useState(null);\r\n    const [selectedUsers, setSelectedUsers] = useState([]);\r\n    const [carrots, setCarrots] = useState('');\r\n    const [impact, setImpact] = useState('');\r\n    const [userInputIconOn, setUserInputIconOn] = useState(false);\r\n    const [inputIconOn, setInputIconOn] = useState(false);\r\n    const [inputIconMessageOn, setInputIconMessageOn] = useState(false);\r\n    //end\r\n\r\n    const [carrotsTouched, setCarrotsTouched] = useState(false);\r\n    const [carrotError, setCarrotError] = useState(null);\r\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n    const [messageError, setMessageError] = useState(null);\r\n    const [isMessageTipsVisible, setIsMessageTipsVisible] = useState(false);\r\n    const [isRecognitionOpen, setIsRecognitionOpen] = useState(false);\r\n\r\n    const [selectedMentions, setSelectedMentions] = useState([]);\r\n    const [isFormSubmitting, setIsFormSubmitting] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [anchorElEmoji, setAnchorElEmoji] = useState(null);\r\n    const [anchorElGIF, setAnchorElGIF] = useState(null);\r\n    \r\n    //snackbar MAT\r\n    const [openMessage, setOpenMessage] = useState(false);\r\n\r\n    const handleCloseMessage = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setOpenMessage(false);\r\n    };\r\n\r\n    //store\r\n    const { token, setRemainingPoint } = React.useContext(StoreContext);\r\n    \r\n    //hardcode\r\n    const canGivePoints = true;\r\n\r\n    const canGiveCustomAmount = false;\r\n\r\n    const badgeAttachability = true;\r\n\r\n    const mePointsToGive = 200;\r\n\r\n    const carrotsPerPost = {\r\n        isSet: false,\r\n        value: 25\r\n    }\r\n\r\n    const customCurrency = {\r\n        NAME_PLURAL: \"Trophies\",\r\n        NAME_TITLEIZED: \"Trophy\",\r\n        NAME_TITLEIZED_PLURAL: \"Trophies\"\r\n    }\r\n\r\n    const customCompanyIcon = {\r\n        type: 'emoji',\r\n        value: {\r\n            hexCode: \"02764\",\r\n            id: \"heart\"\r\n        }\r\n    }\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setSlideIndex(newValue);\r\n    };\r\n\r\n    const getImageForBadgeIcon = () => {\r\n        if (selectedBadge) {\r\n            return getImageForBadge(selectedBadge, true);\r\n        }\r\n\r\n    };\r\n\r\n    const getImageTitleForBadge = () => {\r\n        \r\n        if (selectedBadge) {\r\n            return selectedBadge.displayName;\r\n        }\r\n        return 'Danh hiệu';\r\n    };\r\n\r\n    const handleTypeAheadUsers = (selectedUsers) => {\r\n        setSelectedUsers(selectedUsers);\r\n    };\r\n\r\n    const onUserInputFocus = () => {\r\n    }\r\n\r\n    const minMessageChar = {\r\n        isSet: false,\r\n        value: 25\r\n    }\r\n\r\n    const onImpactOpen = () => {\r\n        props.switchBalanceTab(1);\r\n    }\r\n\r\n    const onImpactClose = () => {\r\n        props.switchBalanceTab(0);\r\n    }\r\n\r\n    const handleImpactValueChange = (impact, carrots) => {\r\n        setImpact(impact);\r\n        setCarrots(carrots);\r\n        setCarrotsTouched(true);\r\n    }\r\n\r\n    const handleMessage = (editorStateProps) => {\r\n        setEditorState(editorStateProps);\r\n        setMessageError(null);\r\n    }\r\n\r\n    const handleMessageInputFocus = () => {\r\n        setIsMessageTipsVisible(true);\r\n    };\r\n\r\n    const onAddMention = (props) => {\r\n        selectedMentions.push(props.id);\r\n        setSelectedMentions(selectedMentions);\r\n    };\r\n\r\n    const messageInputHasText = editorState.getCurrentContent().hasText();\r\n    const mentionUsers = [\r\n        {\r\n            \"id\": \"5f60a577937a424a11ee2b36\",\r\n            \"_id\": \"5f60a577937a424a11ee2b36\",\r\n            \"name\" : \"Minh Y Nguyen\",\r\n            \"username\": \"minh-y-nguyen\",\r\n            \"profile\": {\r\n                \"firstName\": \"Minh Y\",\r\n                \"lastName\": \"Nguyen\",\r\n                \"username\": \"minh-y-nguyen\",\r\n                \"allowanceType\": \"regular\",\r\n                \"status\": \"normal\"\r\n            },\r\n            \"role\": [\r\n                \"Employee\"\r\n            ]\r\n        }\r\n    ]\r\n\r\n    const shouldDisableGiveButton = () => {\r\n        let giveButtonDisabled = true;\r\n        \r\n        // const { canGivePoints, mePointsToGive } = props; //hardcode\r\n        \r\n        const blocks = convertToRaw(editorState.getCurrentContent()).blocks;\r\n        const value = blocks[0].text.trim();\r\n        \r\n        const hasText = editorState.getCurrentContent().hasText();\r\n\r\n        if (isFormSubmitting) {\r\n            giveButtonDisabled = true;\r\n        } else if (selectedUsers.length > 0  && hasText && value !== '') {\r\n            if(!carrotError) {\r\n                if(!canGivePoints || Number(mePointsToGive) === 0) {\r\n                    giveButtonDisabled = true;\r\n                }\r\n                else if(canGivePoints && carrotsTouched) {\r\n                    if (selectedUsers.length * carrots <= mePointsToGive) {\r\n                        giveButtonDisabled = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return giveButtonDisabled;\r\n    }\r\n\r\n    const giveButtonDisabled = shouldDisableGiveButton();\r\n\r\n    const onUpdateSelectedBadge = (badge) => {\r\n        if(selectedBadge) {\r\n            if(selectedBadge.name === badge.name) {\r\n                setSelectedBadge(null);\r\n                setAnchorEl(null);\r\n                return\r\n            }\r\n        }\r\n        setSelectedBadge(badge);\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const addEmoji = (emoji) => {\r\n\r\n        const contentState = editorState.getCurrentContent();\r\n        const targetRange = editorState.getSelection();\r\n        const newContentState = Modifier.insertText(\r\n            contentState,\r\n            targetRange,\r\n            emoji.native,\r\n        );\r\n        const newEditorState = EditorState.push(editorState, newContentState);\r\n        handleCloseEmoji();\r\n        setEditorState(newEditorState);\r\n    }\r\n\r\n    \r\n    const onAddBadgeClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const onEmojiClick = (event) => {\r\n        setAnchorElEmoji(event.currentTarget);\r\n    }\r\n\r\n    const onGIFClick = (event) => {\r\n        event.preventDefault();\r\n        setAnchorElGIF(event.currentTarget);\r\n    }\r\n\r\n    const onGIFSelected = (entry) => {\r\n        let mediaAdded = entry.images.downsized_medium.url;\r\n\r\n        if (mediaAdded.length === 0) {\r\n            mediaAdded = entry.images.original.url;\r\n        }\r\n\r\n        setAnchorElGIF(null);\r\n\r\n        // this.setState({\r\n        //     gifOpen: false,\r\n        //     mediaAdded,\r\n        //     mediaType: 'gif',\r\n        // });\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleCloseEmoji = () => {\r\n        setAnchorElEmoji(null);\r\n    };\r\n\r\n    const handleCloseGIF = () => {\r\n        setAnchorElGIF(null);\r\n    };\r\n    \r\n    const open = Boolean(anchorEl);\r\n    const openEmoji = Boolean(anchorElEmoji);\r\n    const openGIF = Boolean(anchorElGIF);\r\n\r\n    const handleRecognitionTipsToggle = () => {\r\n        setIsRecognitionOpen(!isRecognitionOpen);\r\n    }\r\n\r\n    const handleSubmit = (e, values={}) => {\r\n        e.preventDefault();\r\n\r\n        const mentionsToReplace = getMentionsToReplace(selectedMentions, mentionUsers)\r\n\r\n        const message = getTextFromEditor(editorState, mentionsToReplace)\r\n        // const literalMessage = getLiteralTextFromEditor(editorState);\r\n\r\n        //mapping data\r\n        const giveCarrots = {\r\n            to: selectedUsers,\r\n            carrots_each: Number(carrots),\r\n            message,\r\n        }\r\n\r\n        if (selectedBadge) {\r\n            giveCarrots.badges = [selectedBadge.name];\r\n        }\r\n        \r\n        //call API\r\n        axios.post('https://camon.twgroup.vn/api/v1/feed', giveCarrots , {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token\r\n            }\r\n        }).then((res) => {\r\n            if (res.data.data) {\r\n                resetForm();\r\n                //ER-54\r\n                setRemainingPoint(res.data.data.remaining_point);\r\n\r\n                setOpenMessage(true);\r\n\r\n                //temporative reload page\r\n                setTimeout(() => {\r\n                    window.location.reload()\r\n                }, 1000)\r\n            }\r\n        })\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setSelectedUsers([]);\r\n        setCarrots('');\r\n        setImpact('');\r\n        setSelectedBadge(null);\r\n        setUserInputIconOn(false);\r\n        setInputIconOn(false);\r\n        setInputIconMessageOn(false);\r\n        setIsMessageTipsVisible(false);\r\n        setIsRecognitionOpen(false);\r\n        setEditorState(EditorState.createEmpty());\r\n    }\r\n\r\n    return (\r\n        <div className={classes.post_container}>\r\n            <div style={{cursor: 'none'}}>\r\n                <StyledTabs\r\n                    centered\r\n                    variant='fullWidth'\r\n                    value={slideIndex}\r\n                    onChange={handleTabChange}>\r\n                    <StyledTab disableRipple label= {GIVE_RECOGNITION_HEADER} />\r\n                </StyledTabs>\r\n            </div>\r\n            <form onSubmit={handleSubmit} className={classes.form_container}>\r\n                <div className={classes.p_16}>\r\n                    <div\r\n                        className={classNames(\r\n                            'row',\r\n                            'shoutout-user-select',\r\n                            classes.input_row_style,\r\n                        )}\r\n                    >\r\n                        <DSTypeAhead\r\n                            handleUsers={handleTypeAheadUsers}\r\n                            onFocus={onUserInputFocus}\r\n                            selectedItem={selectedUsers}\r\n                            userInputIconOn={userInputIconOn}\r\n                            onUserInputIconOn={(toggle) => setUserInputIconOn(toggle)}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        canGivePoints && (\r\n                            <div className={classNames(\r\n                                'row',\r\n                                'shoutout-user-select',\r\n                                classes.input_row_style,\r\n                            )}>\r\n                                <ImpactValueSelector\r\n                                    carrots={carrots}\r\n                                    impact={impact}\r\n                                    onChange={handleImpactValueChange}\r\n                                    options={impactLevels}\r\n                                    selectedUsers={selectedUsers}\r\n                                    mePointsToGive={mePointsToGive}\r\n                                    carrotsPerPost={carrotsPerPost}\r\n                                    error={carrotError}\r\n                                    canGiveCustomAmount={canGiveCustomAmount && canGivePoints}\r\n                                    canGivePoints={canGivePoints}\r\n                                    onImpactOpen={onImpactOpen}\r\n                                    onImpactClose={onImpactClose}\r\n                                    customCurrency={customCurrency}\r\n                                    customCompanyIcon={customCompanyIcon}\r\n                                    inputIconOn={inputIconOn}\r\n                                    onInputIconOn={(toggle) => setInputIconOn(toggle)}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    }\r\n                    <div className={classNames(\r\n                                'row',\r\n                                'shoutout-user-select',\r\n                                classes.input_row_style,\r\n                    )}>\r\n                        <MessageInput\r\n                            handleMessage={handleMessage}\r\n                            editorState={editorState}\r\n                            error={messageError}\r\n                            minMessageChar={minMessageChar}\r\n                            hasText={messageInputHasText}\r\n                            mentionUsers={mentionUsers}\r\n                            onAddMention={onAddMention}\r\n                            onFocus={handleMessageInputFocus}\r\n                            inputIconMessageOn={inputIconMessageOn}\r\n                            onInputIconMessageOn={(toggle) => setInputIconMessageOn(toggle)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {\r\n                    isMessageTipsVisible && (\r\n                        <div className={classes.p_16}>\r\n                            <GiveRecognitionTips\r\n                                isOpen={isRecognitionOpen}\r\n                                onToggleClick={handleRecognitionTipsToggle}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                <div className=\"justify-content-end align-items-center\" style={{display: 'flex', padding: 8}}>\r\n                    <div style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                        {\r\n                            badgeAttachability && (\r\n                                <Tooltip title='Danh hiệu' placement='top'>\r\n                                    <IconButton\r\n                                        className={classes.iconButton}\r\n                                        aria-label='Danh hiệu'\r\n                                        onClick={onAddBadgeClick}\r\n                                    >\r\n                                        {\r\n                                            selectedBadge ? (\r\n                                                <img\r\n                                                    className={classes.add_emoji_img}\r\n                                                    alt='badges'\r\n                                                    title={getImageTitleForBadge(selectedBadge)}\r\n                                                    src={getImageForBadgeIcon(selectedBadge)} />\r\n                                            ) : (\r\n                                            <AdjustIcon /> )\r\n                                        }\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            )\r\n                        }\r\n                        <Tooltip title=\"Thêm cảm xúc\" placement=\"top\">\r\n                            <IconButton\r\n                                className={classes.iconButton}\r\n                                onClick={onEmojiClick}\r\n                                onClose={handleCloseEmoji}\r\n                                aria-label=\"Thêm cảm xúc\"\r\n                            >\r\n                                <EmojiIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        {/* <Tooltip title=\"Add Gif\" placement=\"top\">\r\n                            <IconButton\r\n                                onClick={onGIFClick}\r\n                                onClose={handleCloseGIF}\r\n                                className={classes.iconButton}\r\n                                aria-label=\"Add Gif\"\r\n                            >\r\n                                <GifIcon />\r\n                            </IconButton>\r\n                        </Tooltip> */}\r\n                    </div>\r\n                    <div className={classes.gc_button}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            type=\"submit\"\r\n                            disabled={giveButtonDisabled}\r\n                        >\r\n                            {\r\n                            /* {givePrivately\r\n                            ? 'Give Privately'\r\n                            : titleize(GIVE_RECOGNITION)} */\r\n\r\n                            titleize('gửi lời cảm ơn')}\r\n                        </Button>\r\n                        <Snackbar open={openMessage} autoHideDuration={2000} onClose={handleCloseMessage}>\r\n                            <Alert onClose={handleCloseMessage} severity=\"success\">\r\n                                Bạn đã gửi thành công...\r\n                            </Alert>\r\n                        </Snackbar>\r\n                    </div>\r\n                </div>\r\n                <Popover\r\n                    open={open}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'center',\r\n                    }}\r\n                >\r\n                    <BadgesSelector \r\n                        updateSelected={(badge) => onUpdateSelectedBadge(badge)}\r\n                        selectedBadge={selectedBadge}\r\n                    />\r\n                </Popover>\r\n                <Popover\r\n                    open={openEmoji}\r\n                    anchorEl={anchorElEmoji}\r\n                    onClose={handleCloseEmoji}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'center',\r\n                    }}\r\n                >\r\n                    <Picker\r\n                        onClick={addEmoji}\r\n                        native={false}\r\n                        sheetSize={16}\r\n                        set=\"google\"\r\n                        title=\"Pick your emoji…\"\r\n                        emoji=\"point_up\"\r\n                    />\r\n                </Popover>\r\n                <Popover\r\n                    open={openGIF}\r\n                    anchorEl={anchorElGIF}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'center',\r\n                    }}\r\n                    onClose={handleCloseGIF}\r\n                >\r\n                    <GiphySelect\r\n                        requestRating='pg-13'\r\n                        requestKey= 'jAE9Ya0RlClP2vSDqo8umIhz14JYKwy4'\r\n                        onEntrySelect={onGIFSelected}\r\n                    />\r\n                </Popover>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostRecognition","import React from 'react';\r\nimport CarrotIcon from './CarrotIcon';\r\nimport moment from 'moment';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { StyledTabs, StyledTab } from './atom/StyledTabs';\r\nimport { StoreContext } from '../store/StoreContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    balance_container: {\r\n        border: '.5px solid #EEEEEE',\r\n        background: '#FFFFFF',\r\n        borderRadius: 2,\r\n        marginBottom: 10,\r\n    },\r\n    redeem_container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        padding: '16px 25px'\r\n    },\r\n    balance_carrots: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        fontSize: 34,\r\n        color: '#2c2c2c',\r\n        alignItems: 'center'\r\n    },\r\n    giving_container: {\r\n        paddingLeft: 10\r\n    },\r\n    remaining_container: {\r\n        color: '#2c2c2c',\r\n        fontSize: 12,\r\n        fontWeight: 700\r\n    },\r\n    date_container: {\r\n        color: '#2c2c2c',\r\n        fontSize: 12\r\n    }\r\n}));\r\n\r\nfunction Balance (props) {\r\n    const classes = useStyles();\r\n    let showEarnedBalance = true;\r\n    let showAllowance = true;\r\n    const { points_earned } = React.useContext(StoreContext);\r\n    const { remaining_point } = React.useContext(StoreContext);\r\n    \r\n    const { slideIndex, onHandleChange } = props;\r\n    const customCompanyIcon = {\r\n        type: 'emoji',\r\n        value: {\r\n            hexCode: \"02764\",\r\n            id: \"heart\"\r\n        }\r\n    }\r\n\r\n    const handleChange = (event, newValue) => {\r\n        onHandleChange(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.balance_container}>\r\n            <StyledTabs value={slideIndex}\r\n                variant='fullWidth'\r\n                onChange={handleChange}\r\n            >\r\n                {\r\n                    showEarnedBalance && <StyledTab value={0} label=\"Số ❤️ nhận được\" />\r\n                }\r\n                {\r\n                    showAllowance && <StyledTab value={1} label=\"Số ❤️ còn lại\" />\r\n                }\r\n            </StyledTabs>\r\n            {\r\n                slideIndex === 0 && (\r\n                    <div className={classes.redeem_container}>\r\n                        <div className={classes.balance_carrots}>\r\n                            {points_earned}\r\n                            <CarrotIcon\r\n                                style={{fontSize: 24, fontFamily: 'Segoe UI Emoji'}}\r\n                                active\r\n                                url={customCompanyIcon}/>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            {\r\n                slideIndex === 1 && (\r\n                    <div className={classes.redeem_container}>\r\n                        <div className={classes.balance_carrots}>\r\n                            <div>\r\n                                {remaining_point}\r\n                            </div>\r\n                            <CarrotIcon\r\n                                style={{ fontSize: 24, fontFamily: 'Segoe UI Emoji' }}\r\n                                active\r\n                                url={customCompanyIcon}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.giving_container}>\r\n                            <div className={classes.remaining_container}>\r\n                                Số dư\r\n                            </div>\r\n                            <div className={classes.date_container}>\r\n                                Được làm mới vào ngày:{' '}\r\n                                {moment()\r\n                                .add(1, 'months')\r\n                                .startOf('month')\r\n                                .format('D/M/YY')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Balance","export const getter = (keys, hash) => {\r\n    keys.reduce((newHash, key) => ((newHash && newHash[key]) ? newHash[key] : null), hash);\r\n}","import React from 'react';\r\nimport ReactHoverObserver from 'react-hover-observer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport classNames from 'classnames';\r\nimport { getProfileFullName } from '../assets/Util/text';\r\nimport { getBadgeObjectForName, getImageForBadge } from '../assets/Util/BadgesInfo';\r\nimport CarrotIcon from './CarrotIcon';\r\nimport { ProfilePic } from '../assets/Util/profilePic';\r\n\r\nconst useStyle = makeStyles({\r\n    feed_card_header_text: {\r\n        flexFlow: 'row wrap',\r\n        display: 'flex',\r\n        alignItems: 'baseline'\r\n    },\r\n    username_clickable: {\r\n        cursor: 'pointer',\r\n        color: '#2c2c2c'\r\n    },\r\n    feed_card_from: {\r\n        fontWeight: 600,\r\n        whiteSpace: 'normal',\r\n        // fontSize: 14\r\n    },\r\n    feed_card_to: {\r\n        fontWeight: 600,\r\n        whiteSpace: 'normal',\r\n        // fontSize: 14\r\n    },\r\n    feed_card_badge_img: {\r\n        width: 20,\r\n        height: 20,\r\n        margin: '0 3px',\r\n        whiteSpace: 'normal'\r\n    },\r\n    username_clickable_to_span: {\r\n        color: '#f40',\r\n        cursor: 'pointer'\r\n    },\r\n    feed_card_carrots: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        margin: '16px 0',\r\n        padding: 12,\r\n        color: '#2c2c2c'\r\n    },\r\n    users_list_container: {\r\n        position: 'relative',\r\n        cursor: 'pointer',\r\n        color: '#2C2C2C'\r\n    },\r\n    users_list_hover : {\r\n        position: 'absolute',\r\n        width: 300,\r\n        top: 20,\r\n        left: -10,\r\n        zIndex: 99,\r\n        borderRadius: 2,\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        backgroundColor: 'white',\r\n        transition: 'transform 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, opacity 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\r\n        boxSizing: 'border-box',\r\n        WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)',\r\n        boxShadow: 'rgba(0, 0, 0, 0.12) 0px 1px 6px, rgba(0, 0, 0, 0.12) 0px 1px 4px',\r\n        overflowY: 'auto'\r\n    }\r\n})\r\n\r\nconst ClickableFromUserName = ({ user }) => {\r\n    // const onClick = () => {\r\n    //   onUserClicked(user);\r\n    // };\r\n    const classes = useStyle();\r\n    return (\r\n      <p\r\n        // onClick={onClick}\r\n        className={\r\n          user.isDeleted\r\n            ? classNames(classes.username_clickable, classes.feed_card_from, classes.deactivated_user)\r\n            : classNames(classes.username_clickable , classes.feed_card_from)\r\n        }\r\n        style={{ marginBottom: 0 }}\r\n      >\r\n        {user.isDeleted ? 'Deactivated User' : getProfileFullName(user)}\r\n      </p>\r\n    );\r\n};\r\n\r\nconst ClickableUserName = ({ user }) => {\r\n    // const onClick = () => {\r\n    //     onUserClicked(user);\r\n    // };\r\n    const classes = useStyle();\r\n    return (\r\n        <p\r\n        // onClick={onClick}\r\n          className={\r\n            user.isDeleted ? 'deactivated_user' : classes.username_clickable_to_span\r\n          }\r\n          style={{ marginBottom: 0 }}\r\n        >\r\n          {user.isDeleted ? 'Deactivated User' : getProfileFullName(user)}\r\n        </p>\r\n    )\r\n}\r\n\r\nfunction FeedCardTitle(props) {\r\n    const classes = useStyle();\r\n    // const to = props.to.users;\r\n\r\n    const hasBadge = () => {\r\n        const badge = props.badges && props.badges.length > 0\r\n            ? getBadgeObjectForName(props.badges[0])\r\n            : null\r\n        if (badge) {\r\n            return (\r\n                <span className={classes.feed_card_gave}>\r\n                    &nbsp;đã cảm ơn và trao danh hiệu{' '}\r\n                    <img className={classes.feed_card_badge_img}\r\n                        alt={badge.displayName}\r\n                        title={badge.displayName}\r\n                        src={getImageForBadge(badge, true)}\r\n                    />\r\n                    {badge.displayName} cho&nbsp;\r\n                </span>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <span className={classes.feed_card_gave} style={{ display: 'contents', marginBottom: 0 }}>\r\n                    &nbsp;đã cảm ơn&nbsp;\r\n                </span>\r\n            )\r\n        }\r\n    }\r\n\r\n    const UserNameComponent = (props) => {\r\n        const onClickListItem = (user) => {\r\n            // onUserClicked(user)\r\n            console.log('onUserClicked')\r\n        }\r\n        const usersToShow = Array.from(props.users);\r\n        usersToShow.shift();\r\n        return (\r\n            <div className={classes.users_list_container} style={{display: 'flex'}}>\r\n                <ClickableUserName \r\n                    user={props.users[0]}\r\n                    isTo\r\n                    // onUserClicked={onUserClicked}\r\n                />\r\n                &nbsp;và {`${props.users.length - 1} người khác`}\r\n                {\r\n                    props.isHovering && (\r\n                        <div className={classes.users_list_hover}>\r\n                            <List>\r\n                                {\r\n                                    usersToShow.map((user) => (\r\n                                        <ListItem\r\n                                            button\r\n                                            key={user.id}\r\n                                            onClick={(user) => onClickListItem(user)}\r\n                                        >\r\n                                            <ListItemAvatar>\r\n                                                <ProfilePic size={40} user={user} />\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={getProfileFullName(user)} />\r\n                                        </ListItem>\r\n                                    ))\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.feed_card_header_text}>\r\n            <ClickableFromUserName \r\n                user={props.from}\r\n                // onUserClicked={onUserClicked()}\r\n            />\r\n            {hasBadge()}\r\n            {props.to.length > 2 ? (\r\n                <span className={classes.feed_card_to} style={{ display: 'flex' }}>\r\n                    <ReactHoverObserver>\r\n                        <UserNameComponent\r\n                            users={props.to}\r\n                            // onUserClicked={onUserClicked}\r\n                        />\r\n                    </ReactHoverObserver>\r\n                </span>\r\n            ) : Number(props.to.length) === 1 ? (\r\n                <span className={classes.feed_card_to} style={{display: 'flex'}}>\r\n                    <ClickableUserName\r\n                        user={props.to[0]}\r\n                        // isTo\r\n                        // onUserClicked={this.onUserClicked}\r\n                    />\r\n                </span>\r\n            ) : (\r\n                <span className={classes.feed_card_to} style={{display: 'flex'}}>\r\n                    <ClickableUserName\r\n                        user={props.to[0]}\r\n                        // isTo\r\n                        // onUserClicked={this.onUserClicked}\r\n                    />\r\n                    <span className=\"feed-card-gave\">&nbsp;and&nbsp;</span>\r\n                    <ClickableUserName\r\n                        user={props.to[1]}\r\n                        // isTo\r\n                        // onUserClicked={this.onUserClicked}\r\n                    />\r\n                </span>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeedCardTitle;\r\n\r\nexport const FeedValue = (props) => {\r\n    const classes = useStyle();\r\n    return (\r\n        <div className={classes.feed_card_carrots}>\r\n            <div>{props.value}</div>\r\n            <CarrotIcon\r\n                style={{ fontSize: 20, fontFamily: 'Segoe ui emoji' }}\r\n                active\r\n                url={props.customCompanyIcon}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport ReactHoverObserver from 'react-hover-observer';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { getter } from '../assets/Util/object';\r\nimport { ProfilePic } from '../assets/Util/profilePic';\r\nimport { getAgoTime } from '../assets/Util/time';\r\nimport { getPostFormattedMessage } from '../assets/Util/text';\r\nimport { getProfileFullName } from '../assets/Util/text';\r\nimport FeedCardTitle, { FeedValue } from './FeedComponent';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport classNames from 'classnames';\r\nimport axios from 'axios';\r\nimport { StoreContext } from '../store/StoreContext';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\n\r\nconst StyledCard = withStyles({\r\n    root: {\r\n        background: '#FFFFFF',\r\n        border: '0.5px solid #EEEEEE',\r\n        boxSizing: 'border-box',\r\n        borderRadius: 2,\r\n        boxShadow: 'none',\r\n        overflow: 'visible',\r\n    }\r\n})(Card);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        // marginLeft: '5px',\r\n        // marginRight: '5px',\r\n        marginBottom: '12px',\r\n    },\r\n    feed_card_header: {\r\n        display: 'flex',\r\n        padding: 16,\r\n        position: 'relative'\r\n    },\r\n    feed_card_title: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        paddingRight: 45,\r\n        marginLeft: 16\r\n    },\r\n    feed_carrot_value: {\r\n        display: 'inline-block',\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 4,\r\n        color: '#000',\r\n        fontSize: 18,\r\n        fontWeight: 700\r\n    },\r\n    feed_card_carrots: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        margin: '16px 0',\r\n        padding: 12,\r\n        color: '#2c2c2c'\r\n    },\r\n    feed_carrot_time: {\r\n        color: 'rgba(0,0,0,.54)',\r\n        // fontSize: 14\r\n    },\r\n    feed_card_message: {\r\n        color: '#2c2c2c',\r\n        padding: '0 16px 16px',\r\n        whiteSpace: 'pre-wrap',\r\n        fontWeight: 400,\r\n        // fontSize: 14\r\n    },\r\n    feed_card_action: {\r\n        padding: '0 14px 6px',\r\n        display: 'flex',\r\n        justifyContent: 'flex-start'\r\n    },\r\n    iconButton: {\r\n        color: '#9E9E9E',\r\n        '&:focus': {\r\n          outline: 'none',\r\n        },\r\n    },\r\n    commentOn: {\r\n        color: '#0AD71C',\r\n    },\r\n    heartOn: {\r\n        color: '#2772FE',\r\n    },\r\n    privateIcon: {\r\n        marginRight: 5,\r\n    },\r\n    taggedUser: {\r\n        color: 'red',\r\n    },\r\n    username_clickable_to_span: {\r\n        color: '#f40',\r\n        cursor: 'pointer'\r\n    },\r\n    users_list_container: {\r\n        position: 'relative',\r\n        cursor: 'pointer',\r\n        color: '#2C2C2C'\r\n    },\r\n    users_list_hover : {\r\n        position: 'absolute',\r\n        width: 300,\r\n        top: 20,\r\n        left: -10,\r\n        zIndex: 99,\r\n        borderRadius: 2,\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        backgroundColor: 'white',\r\n        transition: 'transform 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, opacity 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\r\n        boxSizing: 'border-box',\r\n        WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)',\r\n        boxShadow: 'rgba(0, 0, 0, 0.12) 0px 1px 6px, rgba(0, 0, 0, 0.12) 0px 1px 4px',\r\n        overflowY: 'auto'\r\n    }\r\n}));\r\n\r\nconst renderAvatar = (card) => {\r\n    const feedType = getter(['card', 'type'], card) || 'recognition';\r\n    switch (feedType) {\r\n        case 'recognition':\r\n        default: {\r\n            return (\r\n            <div style={{width: 40, height: 40}}>\r\n                <ProfilePic size={40} user={card.from} />\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst customCompanyIcon = {\r\n    type: 'emoji',\r\n    value: {\r\n        hexCode: \"02764\",\r\n        id: \"heart\"\r\n    }\r\n}\r\n\r\nfunction FeedCard(props) {\r\n    const classes = useStyles();\r\n    const [card, setCard] = useState(props.card);\r\n    const feedType = getter(['card', 'type'], card) || 'recognition';\r\n    const [didILike, setDidILike] = useState(card.liked);\r\n    const { token } = React.useContext(StoreContext);\r\n    const onFavouriteClick = () => {\r\n        //callAPI\r\n        axios.get(`https://camon.twgroup.vn/api/v1/feed/${card.id}/like`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token\r\n            }\r\n        }).then((res) => {\r\n            setCard(res.data.data);\r\n            setDidILike(!didILike);\r\n        })\r\n    }\r\n\r\n    const UserNameComponent = (props) => {\r\n        const {isHovering, users, onUserClicked} = props;\r\n        const usersToShow = Array.from(users);\r\n        const classes = useStyles()\r\n    \r\n        const onClick = (user) => {\r\n            // onUserClicked(user);\r\n        }\r\n        \r\n        return (\r\n            <div className={classes.users_list_container}>\r\n                {card.likes.length > 0 && card.likes.length}\r\n                {\r\n                    isHovering && (\r\n                        <div className={classes.users_list_hover}>\r\n                            <List>\r\n                                {usersToShow.map((user) => (\r\n                                    <ListItem\r\n                                        button\r\n                                        key={user.id}\r\n                                        onClick={() => onClick(user)}\r\n                                    >\r\n                                        <ListItemAvatar>\r\n                                            <ProfilePic size={40} user={user} />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText primary={getProfileFullName(user)} />\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <StyledCard key={card.id} className={classes.card}>\r\n            <div className={classes.feed_card_header}>\r\n                {renderAvatar(card)}\r\n                <div className={classes.feed_card_title}>\r\n                    {\r\n                        feedType === 'recognition' ? (\r\n                            <FeedCardTitle\r\n                                to={card.to}\r\n                                from={card.from}\r\n                                badges={card.badges}\r\n                                coreValue={card.coreValue}\r\n                            />\r\n                        ) : (\r\n                            // <FeedAnniversaryTitle to={this.props.card.to} type={feedType} />\r\n                            <div>FeedAnniversaryTitle</div>\r\n                        )\r\n                    }\r\n                    <span className={classes.feed_carrot_time} style={{ display: 'flex', alignItems: 'center' }}>\r\n                        {getAgoTime(card.created_at)}\r\n                    </span>\r\n                </div>\r\n                {card.carrots_each > 0 && (\r\n                    <div className={classes.feed_carrot_value}>\r\n                    <FeedValue\r\n                        customCompanyIcon={customCompanyIcon}\r\n                        value={ card.carrots_each * card.to.length }\r\n                    />\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className={classes.feed_card_message}>\r\n                {getPostFormattedMessage(\r\n                    card.message,\r\n                    card.taggedUsers\r\n                    // this.onUserClicked,\r\n                )}\r\n            </div>\r\n            <div className={classes.feed_card_action}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between', width: '100%', }}>\r\n                    <div style={{ display: 'flex' }}>\r\n                        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                            <IconButton\r\n                                onClick={onFavouriteClick}\r\n                                className={\r\n                                    didILike\r\n                                    ? classNames(classes.iconButton, classes.heartOn)\r\n                                    : classes.iconButton\r\n                                }\r\n                                component=\"span\"\r\n                                aria-label=\"Favourite\"\r\n                            >\r\n                                <ThumbUpIcon />\r\n                            </IconButton>\r\n                            {\r\n                                card.likes.length > 0 && (\r\n                                    <ReactHoverObserver>\r\n                                        <UserNameComponent\r\n                                            users={card.likes}\r\n                                            // onUserClicked={onUserClicked}\r\n                                        />\r\n                                    </ReactHoverObserver>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </StyledCard>\r\n    )\r\n}\r\n\r\nexport default FeedCard","import moment from 'moment';\r\n\r\nexport const getAgoTime = (serTime) => {\r\n    const time = moment(serTime);\r\n\r\n    if (Math.abs(moment().diff(time)) < 1000) {\r\n        return 'just now';\r\n    }\r\n\r\n    return time.fromNow();\r\n}","import React, { useEffect, useState } from 'react';\r\nimport FeedCard from './FeedCard';\r\nimport axios from 'axios';\r\nimport { StoreContext } from '../store/StoreContext';\r\n\r\nfunction Feed() {\r\n    const [homeFeed, setHomeFeed] = useState([]);\r\n    const { token, me } = React.useContext(StoreContext);\r\n\r\n    useEffect(() => {\r\n        axios('https://camon.twgroup.vn/api/v1/feed', {\r\n            method: 'get',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token\r\n            }\r\n        }).then((res) => {\r\n            const data = res.data.data.map(card => ({\r\n                ...card,\r\n                liked: card.likes.some((user) => {\r\n                        if(user.id === me) {\r\n                            return true\r\n                        }\r\n                        return false\r\n                    }\r\n                )\r\n            }))\r\n            setHomeFeed(data)\r\n        })\r\n    }, [me, token]);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                homeFeed.map((feed) => (\r\n                    <FeedCard key={feed.id} card={feed} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed;","import React from 'react';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n  toggleOverlay: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    right: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    zIndex: '99',\r\n  },\r\n  paper: {\r\n    background: '#fff',\r\n    boxShadow: '0px 2px 7px rgba(0, 0, 0, 0.15)',\r\n    overflow: 'hidden',\r\n    zIndex: 9999,\r\n  },\r\n};\r\n\r\nfunction DropdownMenu (props) {\r\n    const {classes, open, onClose, anchorEl, children, placement} = props;\r\n\r\n    // const [dropdownMenu, setDropdownMenu] = useState(false);\r\n    // const [actionsPopover, setActionsPopover] = useState(null);\r\n  \r\n    // const onActionClick = (e) => {\r\n    //     e.preventDefault();\r\n    //     setDropdownMenu(!dropdownMenu);\r\n    // }\r\n\r\n    // const handleActionsPopoverClose = () => {\r\n    //     setActionsPopover(false)\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            {open && (\r\n                <div className={classes.toggleOverlay} onClick={onClose}></div>\r\n            )}\r\n            <Popper\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                style={{ zIndex: 9999 }}\r\n                placement={placement ? placement : 'bottom'}\r\n                transition\r\n            >\r\n                {({ TransitionProps }) => (\r\n                    <Fade {...TransitionProps} timeout={350}>\r\n                    <div className={classes.paper}>{children}</div>\r\n                    </Fade>\r\n                )}\r\n            </Popper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(DropdownMenu);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport DropIcon from '@material-ui/icons/ArrowDropDown';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DropdownMenu from '../components/DropdownMenu';\r\nimport { getProfileFullName } from '../assets/Util/text';\r\nimport classNames from 'classnames';\r\nimport axios from 'axios';\r\nimport { StoreContext } from '../store/StoreContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    right_column_box: {\r\n        position: 'relative',\r\n        background: '#FFFFFF',\r\n        border: '0.5px solid #EEEEEE',\r\n        borderRadius: 2,\r\n        padding: 20,\r\n        marginBottom: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap'\r\n    },\r\n    right_column_header: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        flexGrow: 1\r\n    },\r\n    right_column_header_text: {\r\n        fontWeight: 700,\r\n        // fontSize: 16,\r\n        color: '#2c2c2c',\r\n        flexGrow: 1\r\n    },\r\n    dropIcon: {\r\n        position: 'absolute',\r\n        right: 2,\r\n        color: '#4A4A4A',\r\n    },\r\n    top_receivers_row_div: {\r\n        position: 'relative',\r\n        borderBottom: '1px solid #e0e0e0',\r\n        paddingBottom: 5,\r\n        paddingTop: 5\r\n    },\r\n    top_receivers_name: {\r\n        color: '#2c2c2c',\r\n        // fontSize: 14,\r\n        paddingRight: 40,\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    top_receivers_carrots: {\r\n        display: 'flex',\r\n        position: 'absolute',\r\n        right: 0\r\n    },\r\n    top_receivers_carrots_text: {\r\n        color: '#212121',\r\n        // fontSize: 14,\r\n        fontWeight: 700\r\n    }\r\n}));\r\n\r\nconst StyledButton = withStyles({\r\n    root: {\r\n        textTransform: 'none',\r\n        // width: 160,\r\n        minHeight: 30,\r\n        padding: '5px 8px',\r\n        paddingRight: 28,\r\n        position: 'relative',\r\n        '&:focus': {\r\n            outline: 'none',\r\n        }\r\n    },\r\n    label: {\r\n        color: '#4A4A4A',\r\n        fontSize: 15,\r\n        justifyContent: 'start',\r\n        fontWeight: 'lighter',\r\n    },\r\n})(Button);\r\n\r\n\r\nfunction TopReceivers() {\r\n    const classes = useStyles();\r\n    const [topEarnedUsers , setTopEarnedUsers] = useState([])\r\n    const [value, setValue] = useState(1);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const { token } = React.useContext(StoreContext);\r\n\r\n    useEffect(()=> {\r\n        axios.get('https://camon.twgroup.vn/api/v1/home/sidebar', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token\r\n            }\r\n        }).then((res) => {\r\n            setTopEarnedUsers(res.data.data.top_earned_users)\r\n        })\r\n    },[token])\r\n\r\n    const handleOptionClick = (event) => {\r\n        setAnchorEl(anchorEl ? null : event.currentTarget);\r\n    }\r\n\r\n    const handleMenuItemClick = (e, idx) => {\r\n        let filterBy;\r\n        if (idx === 1) {\r\n            filterBy = 'monthly';\r\n        }\r\n\r\n        else if (idx === 2) {\r\n            filterBy = 'quarterly';\r\n        }\r\n\r\n        else {\r\n            filterBy = 'alltime';\r\n        }\r\n\r\n        //dispatch action\r\n        // this.props.dispatch(getSidebarInfoAction(filterBy));\r\n        setValue(idx);\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const onUserClicked = (user) => {\r\n        //call API\r\n        // this.props.dispatch(uiActions.showUserProfile(user));\r\n        alert(\"click user\");\r\n    }\r\n    \r\n    const getTopReceiversSorted = () => {\r\n        \r\n        let sorted = topEarnedUsers.sort((a, b) => a.count < b.count);\r\n        sorted = sorted.length > 5 ? sorted.slice(0, 5) : sorted;\r\n        return sorted;\r\n    };\r\n\r\n    // let buttonLabel;\r\n\r\n    // if (value === 1) {\r\n    //   buttonLabel = 'Tháng';\r\n    // }\r\n\r\n    // else if (value === 2) {\r\n    //   buttonLabel = 'Quý';\r\n    // }\r\n\r\n    // else {\r\n    //   buttonLabel = 'Tất cả';\r\n    // }\r\n\r\n    const isEmpty = topEarnedUsers.length === 0;\r\n\r\n    const CarrotText = (props) => (\r\n      <div className={classes.top_receivers_carrots}>\r\n        <div\r\n          className={classes.top_receivers_carrots_text}\r\n          style={{ marginRight: 10 }}\r\n        >\r\n          {props.value}\r\n        </div>\r\n        {/* <img src={ic_gc_carrot} alt=\"carrot\" className=\"allowance-change-carrrot__img\" /> */}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.right_column_box}>\r\n            <div className={classes.right_column_header}>\r\n                <div className={classes.right_column_header_text}>\r\n                    Cá nhân có sức ảnh hưởng\r\n                </div>\r\n                {/* <StyledButton\r\n                    aria-label='Options'\r\n                    aria-owns={anchorEl ? 'menu' : null}\r\n                    aria-haspopup='true'\r\n                    onClick={handleOptionClick}\r\n                >\r\n                    {buttonLabel}\r\n                    <DropIcon className={classes.dropIcon} />\r\n                </StyledButton>\r\n                <DropdownMenu\r\n                    id=\"menu\"\r\n                    anchorEl={anchorEl}\r\n                    open= {Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                    PaperProps={{\r\n                        style: {\r\n                            width: 150,\r\n                        },\r\n                    }}\r\n                >\r\n                    <MenuItem\r\n                        key={1}\r\n                        // selected={this.state.value === 1}\r\n                        onClick={(e) => handleMenuItemClick(e, 1)}\r\n                    >\r\n                        Tháng\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                        key={2}\r\n                        // selected={this.state.value === 1}\r\n                        onClick={(e) => handleMenuItemClick(e, 2)}\r\n                    >\r\n                        Quý\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                        key={3}\r\n                        // selected={this.state.value === 2}\r\n                        onClick={(e) => handleMenuItemClick(e, 3)}\r\n                    >\r\n                        Tất cả\r\n                    </MenuItem>\r\n                </DropdownMenu> */}\r\n            </div>\r\n            <div className='container' style={{marginTop: '10px'}}>\r\n            {!isEmpty ?\r\n            (\r\n                getTopReceiversSorted().map((receiver) => (\r\n                    <div key={receiver.user.id} className={classNames(\r\n                        'row',\r\n                        'justify-content-start',\r\n                        classes.top_receivers_row_div)}>\r\n                        <div className={classes.top_receivers_name} style={{cursor: 'pointer'}} \r\n                            onClick={() => onUserClicked(receiver.user)}>\r\n                            {getProfileFullName(receiver.user)}\r\n                        </div>\r\n                        <CarrotText value={receiver.count} />\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                    <div className=\"container top_receivers_noname_container\">\r\n                        <div className=\"row justify-content-center medium_icon_popovers\">\r\n                            <span role=\"img\" aria-label=\"Smirking Face\">\r\n                            😏\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"row justify-content-center top_receivers_noname\">\r\n                            No top receivers, yet\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopReceivers","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport { getBadgeObjectForName, getImageForBadge } from '../assets/Util/BadgesInfo';\r\nimport axios from 'axios';\r\nimport { StoreContext } from '../store/StoreContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    right_column_box: {\r\n        position: 'relative',\r\n        background: '#FFFFFF',\r\n        border: '0.5px solid #EEEEEE',\r\n        borderRadius: 2,\r\n        padding: 20,\r\n        marginBottom: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap'\r\n    },\r\n    right_column_header: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        flexGrow: 1\r\n    },\r\n    right_column_header_text: {\r\n        fontWeight: 700,\r\n        // fontSize: 16,\r\n        color: '#2c2c2c',\r\n        flexGrow: 1\r\n    },\r\n    top_receivers_row_div: {\r\n        position: 'relative',\r\n        borderBottom: '1px solid #e0e0e0',\r\n        paddingBottom: 5,\r\n        paddingTop: 5\r\n    },\r\n    top_receivers_name: {\r\n        color: '#2c2c2c',\r\n        // fontSize: 14,\r\n        paddingRight: 40,\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    top_receivers_carrots: {\r\n        display: 'flex',\r\n        position: 'absolute',\r\n        right: 0\r\n    },\r\n    top_receivers_carrots_text: {\r\n        color: '#212121',\r\n        fontSize: 14,\r\n        fontWeight: 700\r\n    },\r\n    top_badges_names: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    top_badges_img: {\r\n        width: 20,\r\n        height: 20,\r\n        marginRight: 5\r\n    }\r\n}));\r\n\r\nfunction TopBadges() {\r\n    const { token } = React.useContext(StoreContext);\r\n    const classes = useStyles();\r\n\r\n    const [topBadges, setTopBadges] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('https://camon.twgroup.vn/api/v1/home/sidebar', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token\r\n            }\r\n        }).then((res) => {\r\n            setTopBadges(res.data.data.top_badges)\r\n        })\r\n    }, [token])\r\n\r\n    const BadgeText = (props) => {\r\n        const badgeObj = getBadgeObjectForName(props.name);\r\n        const badgeImg = getImageForBadge(badgeObj, true);\r\n        return (\r\n          <div className={classes.top_badges_names}>\r\n            <img src={badgeImg} alt={badgeObj.displayName} className={classes.top_badges_img} />\r\n            <div className={classes.top_receivers_name}>{badgeObj.displayName}</div>\r\n          </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={classes.right_column_box}>\r\n            <div className={classes.right_column_header}>\r\n                <div className={classes.right_column_header_text}>\r\n                    Danh hiệu đứng đầu\r\n                </div>\r\n            </div>\r\n            <div className='container' style={{marginTop: '10px'}}>\r\n                <div>\r\n                    {\r\n                        (topBadges && topBadges.length > 0) ?\r\n                            topBadges.map((badge) => (\r\n                                <div key={badge.name} className={classNames(\r\n                                    'row',\r\n                                    'justify-content-start',\r\n                                    classes.top_receivers_row_div)}>\r\n                                        <BadgeText name={badge.name} />\r\n                                        <div className={classNames(classes.top_receivers_carrots, classes.top_receivers_carrots_text)}>\r\n                                            {badge.count}\r\n                                        </div>\r\n                                </div>\r\n                        ))\r\n                        : \r\n                        (\r\n                            <div className=\"container top_receivers_noname_container\">\r\n                                <div className=\"row justify-content-center medium_icon_popovers\">\r\n                                    <span role=\"img\" aria-label=\"Smirking Face\">\r\n                                    🤔\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"row justify-content-center top_receivers_noname\">\r\n                                    No top badges, yet\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBadges","import React, { useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PostRecognition from '../components/PostRecognition';\r\nimport Balance from '../components/Balance';\r\nimport Feed from '../components/Feed';\r\nimport TopReceivers from '../components/TopReceivers';\r\nimport TopBadges from '../components/TopBadges';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    fixed_right_panel: {\r\n        position: 'sticky',\r\n        top: 16,\r\n        right: 0,\r\n        overflowY: 'auto',\r\n        maxHeight: 'calc(100vh - 16px)'\r\n    },\r\n}));\r\n\r\nfunction Home () {\r\n    const classes = useStyles();\r\n    const [balanceTabToShow, setBalanceTabToShow] = useState(0);\r\n    const badgeSetStatus = true;\r\n\r\n    const onHandleTabChange = (tabIndex) => {\r\n        setBalanceTabToShow(tabIndex);\r\n    }\r\n    \r\n    return (\r\n        <Container>\r\n            <Row className='position-relative justify-content-start align-items-start'>\r\n                <Col xs={6} md={6} lg={8}>\r\n                    <PostRecognition\r\n                        switchBalanceTab={onHandleTabChange}\r\n                    />\r\n                    <Feed />\r\n                </Col>\r\n                <Col xs={6} md={6} lg={4} className={classes.fixed_right_panel}>\r\n                    <div>\r\n                        <Balance \r\n                            slideIndex={balanceTabToShow}\r\n                            onHandleChange={onHandleTabChange}\r\n                        />\r\n                        <TopReceivers />\r\n                        {badgeSetStatus && <TopBadges />}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport './sass/main.scss';\r\nimport Home from './pages/Home';\r\n// import NavigationBar from './components/NavigationBar';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n        {/* <NavigationBar /> */}\r\n        <main className=\"main-content\">\r\n            <section>\r\n                <Home />\r\n            </section>\r\n        </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport StoreProvider from './store/StoreContext';\r\n\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport ThemeV2 from './components/V2/theme';\r\n\r\nconst theme = createMuiTheme({\r\n    props: {\r\n        MuiDialogTitle: {\r\n            disableTypography: true,\r\n        },\r\n        MuiButtonBase: {\r\n            disableRipple: true,\r\n        },\r\n    },\r\n    overrides: {\r\n        MuiCssBaseline: {\r\n            '@global': {\r\n                button: {\r\n                    '&:focus': {\r\n                        outline: 'none !important',\r\n                    },\r\n                },\r\n                body: {\r\n                    backgroundColor: '#f6f6f6',\r\n                },\r\n            },\r\n        },\r\n        MuiIconButton: {\r\n            root: {\r\n                '&:focus': {\r\n                    outline: 'none !important',\r\n                },\r\n                padding: 4\r\n            },\r\n        },\r\n        MuiFormLabel: {\r\n            root: {\r\n                color: 'rgb(0,0,0,0.38)',\r\n            },\r\n        },\r\n        MuiInput: {\r\n            root: {\r\n                fontSize: '1rem',\r\n            },\r\n            underline: {\r\n                '&:after': {\r\n                    borderBottom: `2px solid ${ThemeV2.palette.primary.main}`,\r\n                    transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\r\n                },\r\n                '&:before': {\r\n                    borderBottom: '1px solid rgb(224, 224, 224)',\r\n                },\r\n                '&:hover:before': {\r\n                    borderBottom: '1px solid rgb(224, 224, 224) !important',\r\n                },\r\n            },\r\n        },\r\n        MuiButton: {\r\n            root: {\r\n                boxShadow: 'none',\r\n                '&:focus': {\r\n                    outline: 'none'\r\n                },\r\n            },\r\n            containedPrimary: {\r\n                boxShadow: 'none',\r\n                color: '#FFF',\r\n                minWidth: 80,\r\n                backgroundColor: '#FF704C',\r\n                '&:hover': {\r\n                    color: '#FFF',\r\n                    backgroundColor: '#FF9D78',\r\n                    boxShadow: 'none'\r\n                },\r\n                '&:focus': {\r\n                    backgroundColor: '#DB4C37'\r\n                }\r\n            },\r\n            containedSecondary: {\r\n                boxShadow: 'none',\r\n                color: '#FFF',\r\n                '&:hover': {\r\n                    color: '#FFF',\r\n                },\r\n            },\r\n        },\r\n        MuiDialogTitle: {\r\n            root: {\r\n                color: '#000',\r\n                fontSize: 20,\r\n                fontWeight: 500,\r\n            },\r\n        },\r\n    },\r\n    typography: {\r\n        fontWeightLight: 300,\r\n        fontWeightRegular: 400,\r\n        fontWeightSemibold: 500,\r\n        fontWeightBold: 600,\r\n        fontSize: 16,\r\n        htmlFontSize: 16,\r\n        fontFamily: ['IBM Plex Sans', 'sans-serif'].join(','),\r\n    }\r\n});\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <MuiThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <StoreProvider>\r\n                <App />\r\n            </StoreProvider>\r\n        </MuiThemeProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}