{"version":3,"sources":["assets/images/badges/closer_badge.png","assets/images/badges/creativity_badge.png","assets/images/badges/culture_badge.png","assets/images/badges/detail_master_badge.png","assets/images/badges/goal_smasher_badge.png","assets/images/badges/idea_maker_badge.png","assets/images/badges/initiative_badge.png","assets/images/badges/innovator_badge.png","assets/images/badges/launcher_badge.png","assets/images/badges/leadership_badge.png","assets/images/badges/lifesaver_badge.png","assets/images/badges/motivator_badge.png","assets/images/badges/navigator_badge.png","assets/images/badges/obstacle_badge.png","assets/images/badges/problem_solver_badge.png","assets/images/badges/teamwork_badge.png","assets/images/badges/top_earner_badge.png","assets/Util/text.js","assets/Util/BadgesInfo.js","assets/Util/profilePic.js","components/give-carrot/DSTypeAhead.jsx","components/V2/StyledModal.jsx","components/V2/theme.js","components/V2/StyledCloseButton.jsx","components/V2/StyledButton.jsx","components/V2/CustomTypography.jsx","components/V2/HelpText.jsx","components/CarrotIcon.jsx","components/V2/CustomCarrotInputField.jsx","components/give-carrot/CustomImpactModal.jsx","components/give-carrot/ImpactSelectorItem.jsx","components/give-carrot/ImpactValueSelector.jsx","assets/Util/object.js","components/V2/CustomMentionSuggesstions.jsx","components/V2/CustomEditor.jsx","components/give-carrot/MessageInput.jsx","assets/Util/mention.js","components/give-carrot/BadgesItem.jsx","components/give-carrot/BadgesSelector.jsx","components/PostRecognition.jsx","assets/Util/constants.js","components/InfoRecognition.jsx","components/FeedComponent.js","components/FeedCard.jsx","assets/Util/time.js","components/Feed.jsx","components/DropdownMenu.jsx","components/TopReceivers.jsx","components/TopBadges.jsx","pages/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MENTION_REGEX","getProfileFullName","user","profile","first_name","last_name","badges","name","displayName","getBadgeObjectForName","badgeName","find","badge","getImageForBadge","creativity_badge","culture_badge","detail_master_badge","goal_smasher_badge","idea_maker_badge","initiative_badge","innovator_badge","launcher_badge","leadership_badge","lifesaver_badge","motivator_badge","navigator_badge","obstacle_badge","problem_solver_badge","teamwork_badge","top_earner_badge","closer_badge","useStyles","makeStyles","avatar","margin","avatarColor","props","color","backgroundColor","fontWeight","width","size","height","fontSize","avatarImage","UserNameAvatar","firstLetter","isDeleted","slice","toUpperCase","getFirstLetterOfName","colorProp","bg","getColor","styleProps","classes","Avatar","className","ProfilePic","src","lastChar","id","substr","length","charCodeAt","theme","root","display","position","zIndex","paper","left","right","maxHeight","overflowY","marginTop","marginLeft","background","boxShadow","borderRadius","iconWrapper","justifyContent","alignItems","iconStyle","cursor","iconInactiveStyle","filter","chip","chipAvatar","chipRoot","chipLabel","palette","text","main","paddingLeft","chipDeleteIcon","inputRoot","flexWrap","inputStyle","flexGrow","menuSelected","autocomplete_user_fullname","letterSpacing","autocomplete_user_username_focus","autocomplete_user_username","DSTypeAhead","handleUsers","onFocus","useState","inputValue","setInputValue","selectedItem","setSelectedItem","userInputIconOn","setUserInputIconOn","employees","setEmployees","useEffect","updateUsersToParent","a","axios","get","headers","res","data","fetchEmployees","map","handleInputChange","e","target","value","handleDelete","item","postSelectedItem","splice","indexOf","handleUserInputIconStyleOff","onUserInputFocus","selectedUsers","handleKeyDown","keycode","renderOption","index","itemProps","highlightedIndex","disabled","isHighlighted","MenuItem","key","selected","user_name","findUsers","count","username","keep","toLowerCase","onChange","getInputProps","getItemProps","isOpen","inputValue2","openMenu","closeMenu","classNames","iconActiveStyle","onClick","inputRef","focus","role","aria-label","style","inputProps","InputProps","ref","other","TextField","autoComplete","input","underline","renderInput","fullWidth","startAdornment","u","Chip","tabIndex","label","deleteIcon","onDelete","onKeyDown","placeholder","event","onBlur","Paper","square","renderOptions","top","transform","padding","breakpoints","down","StyledModal","Modal","aria-labelledby","aria-describedby","open","onClose","handleClose","BackdropProps","mixBlendMode","opacity","customClass","children","primary","secondary","cyan1","cyan6","cyan7","gray1","gray2","gray3","gray4","gray5","gray6","gray7","gray8","gray9","gray10","athensGray","mischka","silver","dustRed6","dayBreakBlue2","volcano6","volcano7","sunriseYellow6","polarGreen6","polarGreen7","blue1","blue7","geekBlue1","geekBlue2","geekBlue3","geekBlue5","geekBlue6","geekBlue7","geekBlue8","gold1","gold5","gold6","gold7","purple1","purple7","darkText","greenLight","genoa","jetStream","lightGray1","lightGray2","lightGray3","lightGray4","lightGray5","lightGray6","drakGray2","darkGray3","darkGray7","fedora","darkGray9","alto","thunder","coffee","paleSlate","new","white","aqua","aqua2","blue","blue2","green","green1","green7","orange6","brown","azalea","skyblue","red","red1","red2","red6","ceriseRed","lightBlue","white2","white3","white4","yellow","yellow2","office365Logo","inherit","action","hoverOpacity","typography","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightSemibold","fontWeightBold","fontFamily","join","adminFontFamily","breakPoints","lg","md","sm","xs","animations","AdminMain","prop","y","duration","stagger","modalCloseButton","fill","ThemeV2","transition","StyledCloseButton","rest","viewBox","xmlns","d","StyledButton","withStyles","contained","themeV2","textDecoration","containedPrimary","darken","containedSecondary","textTransform","fontStyle","fontStretch","lineHeight","textAlign","Button","styles","adminRoot","getFontWeight","weight","CustomTypography","Typography","defaultProps","userSelect","error","FormHelperText","classnames","CarrotIcon","active","url","currency","blendMode","type","emojiType","_","String","fromCodePoint","parseInt","hexCode","alt","SvgIcon","stroke","strokeWidth","fillRule","cx","cy","r","textFieldWrapper","borderTop","borderBottom","borderLeft","helperText","inputWrapper","flexDirection","marginBottom","border","outline","borderColor","CustomCarrotInputField","errorClass","inputChar","customCompanyIcon","textField","buttonHolder","button","CustomImpactModal","maxGivingAllowance","availablePoints","availablePointsToGive","maxPointsToGive","Math","floor","maxPointsToGiveText","carrots","setCarrots","invalidValue","setInvalidValue","formtouched","setFormtouched","closeModal","openModal","variant","gutterBottom","match","reduce","sum","marginRight","nestedSelect","amountSelector","visibility","CarrotIconHover","listCarrotIconWrapper","paddingRight","menuDiv","flex","innerDefaultValues","innerDropdownStyle","ImpactSelectorItem","carrotAmount","defaultValue","innerSelectValues","range","Number","customCurrencyDisp","multipleUserText","onOptionSelect","onValueChange","impact","toggleSelect","onSubSelectToggle","selectOpen","setSelectOpen","handleChange","handleOpen","ReactHoverObserver","isHovering","option","canGivePoint","Select","SelectDisplayProps","onOpen","MenuProps","innerSelectValue","formControl","placeholderStyle","emoticonStyle","nestedFormControl","impactSelector","impactSelectorDisabled","ImpactValueSelector","inputIconOn","setInputIconOn","menuOpen","setMenuOpen","subSelectOpen","setSubSelectOpen","customImpactModalOpen","setCustomImpactModalOpen","mePointsToGive","disableSelect","filterOptions","options","preOption","goldLimit","onImpactOpen","onImpactSelected","closeSelect","toggle","onImpactClose","closeCustomImpactModal","values","customCurrency","NAME","FormControl","Tooltip","title","placement","displayEmpty","itemClicked","Input","renderValue","goldSelected","total","remaining","excessAlert","dispText","impactObj","canGivePoints","canGiveCustomAmount","getter","keys","hash","newHash","userName","b","userId","Entry","parentProps","mention","CustomMentionSuggesstions","onSearchChange","suggestions","onOpenSuggestions","onCloseSuggestions","onAddMention","MentionComponent","entryComponent","CustomEditor","mentionPlugin","createMentionPlugin","entityMutability","mentionTrigger","supportWhitespace","MentionSuggestions","editorState","plugins","editorRef","inputDiv","verticalAlign","overflow","errorhelper","textarea__input","MessageInput","editor","setEditor","handleMessage","hasText","getErrorMessage","getLiteralTextFromEditor","blocks","convertToRaw","getCurrentContent","mappedBlocks","block","trim","newText","i","getTextFromEditor","mentionsToReplace","forEach","replace","RegExp","getMentionsToReplace","selectedMentions","employee","emp","badge_selector_item","badge_selector_img","badge_selector_name","wordWrap","BadgesItem","onSelect","badge_selector_wrapper","badge_selector_body","badge_selected_image","BadgesSelector","selectedBadge","updateSelected","StyledTabs","indicator","Tabs","StyledTab","Tab","disableRipple","post_container","form_container","p_16","input_row_style","iconButton","minWidth","gc_button","add_emoji_img","impactLevels","PostRecognition","slideIndex","setSlideIndex","setSelectedBadge","setSelectedUsers","setImpact","carrotsTouched","setCarrotsTouched","carrotError","EditorState","createEmpty","setEditorState","messageError","setMessageError","setIsMessageTipsVisible","setSelectedMentions","isFormSubmitting","anchorEl","setAnchorEl","token","setToken","queryString","window","location","search","emailLogin","URLSearchParams","post","then","messageInputHasText","mentionUsers","giveButtonDisabled","shouldDisableGiveButton","Boolean","centered","newValue","onSubmit","preventDefault","message","giveCarrots","to","carrots_each","console","log","selectedUsersProps","carrotsPerPost","isSet","switchBalanceTab","NAME_PLURAL","NAME_TITLEIZED","NAME_TITLEIZED_PLURAL","editorStateProps","minMessageChar","push","IconButton","currentTarget","getImageForBadgeIcon","TypeError","x","titleize","Popover","anchorOrigin","vertical","horizontal","onUpdateSelectedBadge","balance_container","reem_container","balance_carrots","giving_container","remaining_container","date_container","Balance","onHandleChange","moment","add","startOf","format","useStyle","feed_card_header_text","flexFlow","username_clickable","feed_card_from","whiteSpace","feed_card_to","feed_card_badge_img","username_clickable_to_span","feed_card_carrots","users_list_container","user_list_hover","boxSizing","WebkitTapHighlightColor","ClickableFromUserName","deactivated_user","ClickableUserName","FeedCardTitle","UserNameComponent","usersToShow","Array","from","users","shift","isTo","List","ListItem","ListItemAvatar","ListItemText","feed_card_gave","hasBadge","FeedValue","StyledCard","Card","card","feed_card_header","feed_card_title","feed_carrot_value","feed_carrot_time","feed_card_message","FeedCard","feedType","renderAvatar","coreValue","serTime","time","abs","diff","fromNow","getAgoTime","created_at","taggedUsers","replacedText","reactStringReplace","emoji","getPostFormattedMessage","Feed","homeFeed","setHomeFeed","method","feed","toggleOverlay","bottom","Popper","TransitionProps","Fade","timeout","right_column_box","right_column_header","right_column_header_text","dropIcon","top_receivers_row_div","paddingBottom","paddingTop","top_receivers_name","textOverflow","top_receivers_carrots","top_receivers_carrots_text","minHeight","topReceivers","pointsEarned","pointsEarnedThisMonth","pointsGiven","totalPointsEarned","totalPointsGiven","TopReceivers","buttonLabel","setValue","handleMenuItemClick","idx","isEmpty","CarrotText","aria-owns","aria-haspopup","PaperProps","sorted","sort","getTopReceiversSorted","receiver","onUserClicked","top_badges_names","top_badges_img","topBadges","TopBadges","BadgeText","badgeObj","badgeImg","fixed_right_panel","Home","balanceTabToShow","setBalanceTabToShow","onHandleTabChange","Container","fluid","Row","Col","InfoRecognition","App","hostname","createMuiTheme","MuiDialogTitle","disableTypography","MuiButtonBase","overrides","MuiCssBaseline","body","MuiIconButton","MuiFormLabel","MuiInput","MuiButton","htmlFontSize","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"uHAAAA,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,kD,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,8C,wTCM9BC,EAAgB,cAEhBC,EAAqB,SAACC,GAC/B,GAAIA,GAAQA,EAAKC,QAAS,CACtB,GAAgC,OAA5BD,EAAKC,QAAQC,YAAkD,OAA3BF,EAAKC,QAAQE,UACjD,MAAM,GAAN,OAAUH,EAAKC,QAAQC,YAG3B,GAA+B,OAA3BF,EAAKC,QAAQE,WAAkD,OAA5BH,EAAKC,QAAQC,WAChD,MAAM,GAAN,OAAUF,EAAKC,QAAQE,WAG3B,GAAIH,EAAKC,QAAQE,WAAaH,EAAKC,QAAQC,WACvC,MAAM,GAAN,OAAUF,EAAKC,QAAQC,WAAvB,YAAqCF,EAAKC,QAAQE,WAI1D,MAAO,I,8TCYEC,GAAS,CACpB,CACEC,KAAM,SACNC,YAAa,UAEf,CACED,KAAM,aACNC,YAAa,cAEf,CACED,KAAM,UACNC,YAAa,iBAEf,CACED,KAAM,gBACNC,YAAa,iBAEf,CACED,KAAM,eACNC,YAAa,gBAEf,CACED,KAAM,aACNC,YAAa,cAEf,CACED,KAAM,aACNC,YAAa,cAEf,CACED,KAAM,YACNC,YAAa,aAEf,CACED,KAAM,WACNC,YAAa,YAEf,CACED,KAAM,aACNC,YAAa,cAEf,CACED,KAAM,aACNC,YAAa,cAEf,CACED,KAAM,YACNC,YAAa,aAEf,CACED,KAAM,YACNC,YAAa,aAEf,CACED,KAAM,sBACNC,YAAa,uBAEf,CACED,KAAM,iBACNC,YAAa,kBAEf,CACED,KAAM,WACNC,YAAa,YAEf,CACED,KAAM,aACNC,YAAa,eAIJC,GAAwB,SAACC,GAAD,OAAeJ,GAAOK,MAAK,SAAAC,GAAK,OAAIA,EAAML,OAASG,MAE3EG,GAAmB,SAACD,GAC/B,OAAQA,EAAML,MACZ,IAAK,aACH,OAAOO,IACT,IAAK,UACH,OAAOC,IACT,IAAK,gBACH,OAAOC,IACT,IAAK,eACH,OAAOC,IACT,IAAK,aACH,OAAOC,IACT,IAAK,aACH,OAAOC,IACT,IAAK,YACH,OAAOC,IACT,IAAK,WACH,OAAOC,IACT,IAAK,aACH,OAAOC,IACT,IAAK,aACH,OAAOC,IACT,IAAK,YACH,OAAOC,IACT,IAAK,YACH,OAAOC,IACT,IAAK,sBACH,OAAOC,KACT,IAAK,iBACH,OAAOC,KACT,IAAK,WACH,OAAOC,KACT,IAAK,aACH,OAAOC,KACT,IAAK,SACH,OAAOC,IACT,QACE,OAAO,O,6GC5IPC,GAAYC,YAAW,CACzBC,OAAQ,CACJC,OAAQ,IAGZC,YAAa,SAACC,GAAD,MAAY,CACzBC,MAAOD,EAAMC,MACbC,gBAAiBF,EAAME,gBACvBC,WAAY,MACZC,MAAOJ,EAAMK,KAAOL,EAAMK,KAAO,GACjCC,OAAQN,EAAMK,KAAOL,EAAMK,KAAO,GAClCE,SAAUP,EAAMO,WAGhBC,YAAa,SAACR,GAAD,MAAY,CACzBI,MAAOJ,EAAMK,KAAOL,EAAMK,KAAO,GACjCC,OAAQN,EAAMK,KAAOL,EAAMK,KAAO,OAIhCI,GAAiB,SAACT,GAAW,IACvBlC,EAAekC,EAAflC,KAAMuC,EAASL,EAATK,KACRK,EAAc5C,EAAK6C,UAAY,IFDL,SAAC7C,GACnC,OAAIA,GAAQA,EAAKC,SAAWD,EAAKC,QAAQC,WACjC,GAAN,OAAUF,EAAKC,QAAQC,WAAW4C,MAAM,EAAG,GAAGC,eAEzC,GEHsCC,CAAqBhD,GAC1DiD,EAAYjD,EAAK6C,UAAY,CAAEK,GAAI,UAAWf,MAAO,WAAcgB,GAASnD,GAC9EyC,EAAW,GAEF,KAATF,GAAwB,KAATA,EACjBE,EAAW,GACO,KAATF,IACTE,EAAW,IAGb,IAAMW,EAAa,CACjBhB,gBAAiBa,EAAUC,GAC3Bf,MAAOc,EAAUd,MACjBI,OACAE,YAGIY,EAAUxB,GAAUuB,GAE1B,OAAO,kBAACE,GAAA,EAAD,CAAQC,UAAWF,EAAQpB,aAAcW,IAGvCY,GAAa,SAACtB,GAAY,IAC3BlC,EAAekC,EAAflC,KAAMuC,EAASL,EAATK,KACRc,EAAUxB,GAAU,CAAEU,SAU5B,OAAIvC,GACAA,EAAKC,SACLD,EAAKC,QAAQ8B,OAEL,kBAACuB,GAAA,EAAD,CAAQG,IAAKzD,EAAKC,QAAQ8B,OAAQwB,UAAWF,EAAQX,cAMzD,kBAAC,GAAD,CAAgB1C,KAAMA,EAAMuC,KAAMA,KAMjCY,GAAW,SAACnD,GACrB,IAAI0D,EAAW,IACX1D,GAAQA,EAAK2D,KACbD,EAAW1D,EAAK2D,GAAGC,OAAO5D,EAAK2D,GAAGE,OAAS,IAE/C,IACIX,EAAK,UACLf,EAAQ,UACZ,OAHiBuB,EAASI,WAAW,IAIjC,KAAK,GACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,GACL,KAAK,IACLZ,EAAK,UACLf,EAAQ,UACR,MACA,KAAK,GACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,GACL,KAAK,GACLe,EAAK,UACLf,EAAQ,UACR,MACA,KAAK,GACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,GACL,KAAK,IACLe,EAAK,UACLf,EAAQ,UACR,MACA,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,GACL,KAAK,IACLe,EAAK,UACLf,EAAQ,UACR,MACA,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,GACL,KAAK,IACL,KAAK,GACL,KAAK,GACLe,EAAK,UACLf,EAAQ,UACR,MACA,KAAK,IACL,KAAK,IACL,KAAK,GACL,KAAK,IACL,KAAK,GAIL,QACAe,EAAK,UACLf,EAAQ,UAGZ,MAAO,CACHe,KACAf,U,mDCrIFN,GAAYC,aAAW,SAACiC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,OACT3B,MAAO,OACP4B,SAAU,WACVC,OAAQ,GAEZC,MAAO,CACHF,SAAU,WACVC,OAAQ,EACRE,KAAM,EACNC,MAAO,EACPC,UAAW,QACXC,UAAW,OACXC,UAAW,GACXC,WAAY,GACZC,WAAY,UACZC,UACE,mEACFC,aAAc,GAElBC,YAAa,CACTb,QAAS,OACTc,eAAgB,SAChBC,WAAY,SACZ1C,MAAO,OACPE,OAAQ,QAEZyC,UAAW,CACPxC,SAAU,OACVyC,OAAQ,WAMZC,kBAAmB,CACfhD,MAAO,UACPiD,OAAQ,gBAEZC,KAAM,CACFrD,OAAQ,WAEZsD,WAAY,CACR9C,OAAQ,kBACRF,MAAO,kBACPoC,WAAY,GAGhBa,SAAU,CACNnD,gBAAiB,WAErBoD,UAAW,CACPrD,MAAO4B,EAAM0B,QAAQC,KAAKC,KAC1BtD,WAAY,IACZI,SAAU,GACVmD,YAAa,GAEjBC,eAAgB,CACZ1D,MAAO,WAEX2D,UAAW,CACPC,SAAU,QAEdC,WAAY,CACR1D,MAAO,kBACP2D,SAAU,GAoBdC,aAAc,CACV9D,gBAAiB,sBAErB+D,2BAA4B,CACxBP,YAAa,EACbnD,SAAU,GACVN,MAAO,UACPE,WAAY,IACZ+D,cAAe,IAEnBC,iCAAkC,CAC9B5D,SAAU,GACVN,MAAO,WAEXmE,2BAA4B,CACxB7D,SAAU,GACVN,MAAO,eAoRAoE,OAhRf,SAAqBrE,GAAQ,IAAD,OAChBsE,EAAyBtE,EAAzBsE,YAAaC,EAAYvE,EAAZuE,QADG,EAEcC,mBAAS,IAFvB,mBAEhBC,EAFgB,KAEJC,EAFI,OAGkBF,mBAAS,IAH3B,mBAGhBG,EAHgB,KAGFC,EAHE,OAIwBJ,oBAAS,GAJjC,mBAIhBK,EAJgB,KAICC,EAJD,OAKWN,qBALX,mBAKhBO,EALgB,KAKLC,EALK,KAOxBC,qBAAU,WACNC,EAAoBP,KAErB,CAACA,IAEJM,qBAAU,WAAM,8CACZ,6BAAAE,EAAA,sEACsBC,KAAMC,IAAI,uCAAwC,CAChEC,QAAS,CACL,eAAgB,mBAChB,8BAA+B,IAC/B,cAAiB,yyBAL7B,OACUC,EADV,OAQIP,EAAaO,EAAIC,KAAKA,KAAKT,WAR/B,4CADY,uBAAC,WAAD,wBAYZU,KACD,IAEH,IAAMtE,EAAUxB,KAEVuF,EAAsB,SAACP,GACzBL,EACIK,EAAae,KAAI,SAACjE,GAAD,OAAQsD,EAAUxG,MAAK,SAACT,GAAD,OAAUA,EAAK2D,KAAOA,UA0BhEkE,EAAoB,SAACC,GACvB,IAAMnB,EAAamB,EAAEC,OAAOC,MACxBrB,GAAcA,EAAW9C,OAG7B+C,EAAcD,IAgBZsB,EAAe,SAACC,GAAD,OAAU,WAC3B,IAAMC,EAAgB,aAAOtB,GAC7BsB,EAAiBC,OAAOvB,EAAawB,QAAQH,GAAO,GACpDpB,EAAgBqB,GAChBG,EAA4BzB,KAG1B0B,EAAmB,WACrBvB,GAAmB,GACnBP,KAOE6B,EAA8B,SAACE,GACJ,IAAzBA,EAAc3E,QACdmD,GAAmB,IAIrByB,EAAgB,SAACX,GACnB,GAAKjB,EAAahD,SAAW8C,EAAW9C,QAAyB,cAAf6E,KAAQZ,GAAqB,CAC3E,IAAMK,EAAmBtB,EAAa/D,MAAM,EAAG+D,EAAahD,OAAS,GACrEiD,EAAgBqB,KAoBlBQ,EAAe,SAAC,GAA4D,IAA1D3I,EAAyD,EAAzDA,KAAM4I,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,iBAAkBC,EAAe,EAAfA,SACxDC,EAAgBF,IAAqBF,EAC3C,OACI,kBAACK,GAAA,EAAD,iBACQJ,EADR,CAEIE,SAAUA,EACVG,IAAKlJ,EAAK2D,GACVwF,SAAUH,EACV3F,QACI,CAAE8F,SAAU9F,EAAQ6C,gBAGxB,kBAAC,GAAD,CAAY3D,KAAM,GAAIvC,KAAMA,IAC5B,0BAAMuD,UAAWF,EAAQ8C,4BACpBpG,EAAmBC,IAExB,0BAAMuD,UAAWyF,EAAgB3F,EAAQgD,iCACnChD,EAAQiD,4BAGRtG,EAAKC,QAAQmJ,UAAb,WAA6BpJ,EAAKC,QAAQmJ,WAA1C,WAA4DpJ,EAAKC,QAAQC,eAMrFmJ,EAAY,SAAC1C,GACf,IAAI2C,EAAQ,EACZ,OAAOrC,EAAU7B,QAAO,SAACpF,GACrB,IAAMuJ,EAAWvJ,EAAKC,QAAQmJ,WAAa,GACvCI,IACC7C,IAC4E,IAA7E3G,EAAKC,QAAQC,WAAWuJ,cAAcpB,QAAQ1B,EAAW8C,iBACmB,IAA5EzJ,EAAKC,QAAQE,UAAUsJ,cAAcpB,QAAQ1B,EAAW8C,iBACM,IAA9DF,EAASE,cAAcpB,QAAQ1B,EAAW8C,iBACxCH,EAAQ,GAOd,OANuC,IAAnCzC,EAAawB,QAAQrI,EAAK2D,MAC1B6F,GAAO,GAEPA,IACAF,GAAS,GAENE,MAGf,OACI,kBAAC,KAAD,CACI7C,WAAYA,EACZ+C,SA1Ga,SAACxB,GAClB,GAAKA,GAKL,IAAoC,IAAhCrB,EAAawB,QAAQH,GAAc,CACnC,IAAIC,EAAgB,uBAAOtB,GAAP,CAAqBqB,IACzCtB,EAAc,IACdE,EAAgBqB,SAPlBvB,EAAc,KAyGZC,aAAcA,IAGV,gBAEQ8C,EAFR,EAEQA,cACAC,EAHR,EAGQA,aACAC,EAJR,EAIQA,OACYC,EALpB,EAKQnD,WAEAmC,GAPR,EAMQjC,aANR,EAOQiC,kBACAiB,EARR,EAQQA,SACAC,EATR,EASQA,UATR,OAYI,yBAAKzG,UAAWF,EAAQW,MACpB,yBAAKT,UAAWF,EAAQyB,aACpB,yBAAKvB,UAAW0G,IACZ5G,EAAQ4B,UACR8B,EAAkB1D,EAAQ6G,gBAAkB7G,EAAQ8B,mBAEpDgF,QAAS,WACL,EAAKC,SAASC,UAGlB,0BAAMC,KAAK,MAAMC,aAAW,QAA5B,kBAKR,yBAAKC,MAAO,CAAElI,MAAO,SAvKrB,SAACmI,GAAgB,IACzBC,EAAuCD,EAAvCC,WAAYrH,EAA2BoH,EAA3BpH,QAASsH,EAAkBF,EAAlBE,IAAQC,EADL,aACeH,EADf,gCAEhC,OACE,kBAACI,GAAA,EAAD,eACEC,aAAa,MACbJ,WAAU,cACNN,SAAUO,EACVtH,QAAS,CACLW,KAAMX,EAAQyC,UACdiF,MAAO1H,EAAQ2C,WACfgF,UAAW3H,EAAQ2H,YAEpBN,IAKHE,IAwJgBK,CAAY,CACRC,WAAW,EACX7H,UACAsH,IAAK,SAACP,GACF,OAAOA,GAEXM,WAAYf,EAAc,CACtBwB,eAAgBtE,EAAae,KAAI,SAACM,GAC9B,IAAMlI,EAAOiH,EAAUxG,MAAK,SAAC2K,GAAD,OAAOA,EAAEzH,KAAOuE,KAC5C,OAAIlI,EAEI,kBAACqL,GAAA,EAAD,CACItJ,OACI,kBAAC,GAAD,CAAYQ,KAAM,GAAIvC,KAAMA,IAEhCkJ,IAAKhB,EACLoD,UAAW,EACXC,MAAOxL,EAAmBC,GAC1BuD,UAAWF,EAAQgC,KACnBhC,QAAS,CACLW,KAAMX,EAAQkC,SACdxD,OAAQsB,EAAQiC,WAChBiG,MAAOlI,EAAQmC,UACfgG,WAAYnI,EAAQwC,gBAExB4F,SAAUxD,EAAaC,KAI5B,QAEXwB,SAAU7B,EACV6D,UAAWjD,EACXkD,YAAa,gDACbhI,GAAI,iCACJ8C,QAAS,SAACmF,GACN7B,IACAxB,KAEJsD,OAAQ,SAACD,GACL5B,IAzJpC1B,EAA4BzB,SAiKRgD,EACI,kBAACiC,GAAA,EAAD,CAAOvI,UAAWF,EAAQe,MAAO2H,QAAM,GAlJ7C,SAACpF,EAAYiD,EAAcd,GAK7C,OAHcO,EAAU1C,GAGXiB,KACT,SAAC5H,EAAM4I,GAAP,OAAiBD,EAAa,CAC1B3I,OACA4I,QACAC,UAAWe,EAAa,CAAC1B,KAAMlI,EAAK2D,KACpCmF,mBACAC,UAAU,OAyIciD,CACIlC,EACAF,EACAd,IAIZ,U,mBC1X1BjH,GAAYC,aAAW,SAACiC,GAAD,YAAY,CACrCK,OAAK,GACD6H,IAAK,MACL5H,KAAM,MACN6H,UAAW,wBACXhI,SAAU,WACV5B,MAAO,IACP6J,QAAS,IANR,eAOApI,EAAMqI,YAAYC,KAAK,MAAQ,CAC9B/J,MAAO,IACP6J,QAAS,cATV,4BAWW,WAXX,wBAYO,qBAZP,2BAaU,cAbV,8BAca,IAdb,yBAeQ,QAfR,OAmBM,SAASG,GAAYpK,GAChC,IAAMmB,EAAUxB,KAEhB,OACE,kBAAC0K,GAAA,EAAD,CACEC,kBAAgB,qBAChBC,mBAAiB,2BACjBC,KAAMxK,EAAMwK,KACZC,QAASzK,EAAM0K,YACfC,cAAe,CACbrC,MAAO,CACL7F,WAAY,UACZmI,aAAc,SACdC,QAAS,MAIb,yBAAKxJ,UAAWrB,EAAM8K,YAAc9K,EAAM8K,YAAc3J,EAAQe,OAC7DlC,EAAM+K,WC1CjB,IAMe,IACXxH,QAAS,CACLyH,QAAS,CACPvH,KAAM,WAERwH,UAAW,CACTxH,KAAM,WAGRyH,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,OAAQ,UACRC,WAAY,UACZC,QAAS,UACTC,OAAQ,UACRC,SAAU,UACVC,cAAe,UACfC,SAAU,UACVC,SAAU,UACVC,eAAgB,UAChBC,YAAa,UACbC,YAAa,UACbC,MAAO,UACPC,MAAO,UACPC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,QAAS,UACTC,QAAS,UAGTC,SAAU,UACVC,WAAY,UACZC,MAAO,UACPC,UAAW,UACXC,WAAY,UACZC,WAAY,UACZC,WAAY,UACZC,WAAY,UACZC,WAAY,UACZC,WAAY,UACZC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,OAAQ,UACRC,UAAW,UACXC,KAAM,UACNC,QAAS,UACTC,OAAQ,UACRC,UAAW,UACXC,IAAK,UACLC,MAAO,UACPC,KAAM,UACNC,MAAO,UACPC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,OAAQ,UACRC,OAAQ,UACRC,QAAS,UACTC,MAAO,UACPC,OAAQ,UACRC,QAAS,UACTC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,UAAW,UACXC,UAAW,UACXC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,QAAS,UACTC,cAAe,UACfC,QAAS,UACTC,OAAQ,CACNC,aAAc,KAGpBC,WAAY,CACRC,gBAzGM,IA0GNC,kBAzGQ,IA0GRC,iBAzGO,IA0GPC,mBAzGS,IA0GTC,eAzGK,IA0GLrQ,SAAU,GACVsQ,WAAY,CAAC,YAAa,cAAcC,KAAK,KAC7CC,gBAAiB,CAAC,WAAY,cAAcD,KAAK,MAErDE,YAAa,CACTC,GAAI,YACJC,GAAI,WACJC,GAAI,WACJC,GAAI,YAERC,WAAY,CACRC,UAAW,CACTC,KAAM,CACJ1G,QAAS,EACT2G,EAAG,IAELC,SAAU,GACVC,QAAS,MC3Hb/R,GAAYC,aAAW,iBAAO,CAChC+R,iBAAkB,CACd3P,SAAU,WACV+H,IAAK,GACL3H,MAAO,GACPY,OAAQ,UACRiH,QAAS,MACT,QAAS,CACP,SAAU,CACR2H,KAAMC,GAAQtO,QAAQqK,WACtBkE,WAAY,cAGhB,UAAW,CACT,QAAS,CACP,SAAU,CACRF,KAAMC,GAAQtO,QAAQ4K,kBA4BrB4D,OArBf,SAA2B/R,GACvB,IAAMmB,EAAUxB,KACRsI,EAAoBjI,EAApBiI,QAAY+J,EAFU,aAEFhS,EAFE,aAG9B,OACI,uCAAKqB,UAAWF,EAAQwQ,iBAAkB1J,QAASA,GAAa+J,GAC9D,yBACE5R,MAAM,KACNE,OAAO,KACP2R,QAAQ,YACRL,KAAK,OACLM,MAAM,8BAEN,0BACEC,EAAE,keACFP,KAAK,e,SCuBJQ,GA3DMC,YAAW,CAC5BC,UAAW,CACPhS,OAAQ,GACRqC,aAAc,GACdzC,gBAAiBqS,GAAQhP,QAAQkK,WACjCxN,MAAOsS,GAAQhP,QAAQqL,MACvB,cAAe,CACX1O,gBAAgB,GAAD,OAAKqS,GAAQhP,QAAQ2K,UAArB,gBAEnB,UAAW,CACPsE,eAAgB,OAChBvS,MAAOsS,GAAQhP,QAAQqL,MACvB1O,gBAAiBqS,GAAQhP,QAAQ0L,MAEjC,uBAAwB,CACpB/O,gBAAiB,eAErBwC,UAAW,oBAGnB+P,iBAAkB,CACdvS,gBAAiBqS,GAAQhP,QAAQyH,QAAQvH,KACzCxD,MAAOsS,GAAQhP,QAAQqL,MACvB,UAAW,CACT1O,gBAAiBwS,kBAAOH,GAAQhP,QAAQyH,QAAQvH,KAAM,IAEtD,uBAAwB,CACtBvD,gBAAiBwS,kBAAOH,GAAQhP,QAAQyH,QAAQvH,KAAM,MAG1Df,UAAW,mBAGfiQ,mBAAoB,CAChBzS,gBAAiBqS,GAAQhP,QAAQ0H,UAAUxH,KAC3CxD,MAAOsS,GAAQhP,QAAQqL,MACvB,UAAW,CACX3O,MAAM,GAAD,OAAKsS,GAAQhP,QAAQqL,MAArB,eACL1O,gBAAiBwS,kBAAOH,GAAQhP,QAAQ0H,UAAUxH,KAAM,IAEpD,uBAAwB,CACpBvD,gBAAiBwS,kBAAOH,GAAQhP,QAAQ0H,UAAUxH,KAAM,MAGhEf,UAAW,mBAEf2G,MAAO,CACHuJ,cAAe,OACf/B,WAAY0B,GAAQhC,WAAWM,WAC/BtQ,SAAU,GACVJ,WAAYoS,GAAQhC,WAAWG,iBAC/BmC,UAAW,SACXC,YAAa,SACbC,WAAY,SACZ7O,cAAe,SACf8O,UAAW,WAvDEX,CAyDlBY,K,UCvDGC,GAAS,CACbpR,KAAM,CACJ+O,WAAY0B,GAAQhC,WAAWM,WAC/B5Q,MAAOsS,GAAQhP,QAAQiK,UAEzB2F,UAAW,CACTtC,WAAY0B,GAAQhC,WAAWQ,gBAC/B9Q,MAAOsS,GAAQhP,QAAQiK,WAI3B,SAAS4F,GAAcC,GACrB,OAAQA,GACN,IAAK,OACH,OAAOd,GAAQhC,WAAWK,eAC5B,IAAK,SACH,OAAO2B,GAAQhC,WAAWG,iBAC5B,IAAK,WACH,OAAO6B,GAAQhC,WAAWI,mBAC5B,QACE,OAAO4B,GAAQhC,WAAWE,mBAIhC,SAAS6C,GAAiBtT,GAAQ,IACxBmB,EAAyDnB,EAAzDmB,QAAS4J,EAAgD/K,EAAhD+K,SAAUsI,EAAsCrT,EAAtCqT,OAAQ/K,EAA8BtI,EAA9BsI,MAAOjH,EAAuBrB,EAAvBqB,UAAc2Q,EADzB,aACkChS,EADlC,qDAG/B,OACE,kBAACuT,GAAA,EAAD,eACElS,UAAW0G,IAAW5G,EAAQW,KAAMT,GACpCiH,MAAK,gBAAOA,EAAP,CAAcnI,WAAYiT,GAAcC,MACzCrB,GAEHjH,GAkBwBsH,YAAWa,GAAXb,EAb/B,SAAkCrS,GAAQ,IAChCmB,EAAyDnB,EAAzDmB,QAAS4J,EAAgD/K,EAAhD+K,SAAUsI,EAAsCrT,EAAtCqT,OAAQ/K,EAA8BtI,EAA9BsI,MAAOjH,EAAuBrB,EAAvBqB,UAAc2Q,EADjB,aAC0BhS,EAD1B,qDAGvC,OACE,kBAACuT,GAAA,EAAD,eACElS,UAAW0G,IAAW5G,EAAQgS,UAAW9R,GACzCiH,MAAK,gBAAOA,EAAP,CAAcnI,WAAYiT,GAAcC,MACzCrB,GAEHjH,MAaPuI,GAAiBE,aAAe,CAC9BH,OAAQ,UACR/K,MAAO,IAGM+J,mBAAWa,GAAXb,CAAmBiB,I,UClCnBjB,oBAhCA,iBAAO,CAClBvQ,KAAM,CACJ+O,WAAYgB,GAAQtB,WAAWM,WAC/B1Q,WAAY0R,GAAQtB,WAAWG,iBAC/BzQ,MAAO4R,GAAQtO,QAAQ4K,UACvB4E,WAAY,OACZxS,SAAU,OACV,aAAc,CACZsK,QAAS,OACT4I,WAAY,QAEd,UAAW,CACTxT,MAAO4R,GAAQtO,QAAQmM,UAoBhB2C,EAhBf,SAAoBrS,GAAQ,IAChBmB,EAAsDnB,EAAtDmB,QAAe0F,GAAuC7G,EAA7CwD,KAA6CxD,EAAvC6G,UAAU6M,EAA6B1T,EAA7B0T,MAAO3I,EAAsB/K,EAAtB+K,SAAaiH,EAD9B,aACuChS,EADvC,kDAEvB,OACI,kBAAC2T,GAAA,EAAD,eACEtS,UAAWuS,IACTzS,EAAQW,KACR+E,EAAW,WAAa,GACxB6M,EAAQ,QAAU,KAEhB1B,GAEHjH,M,8BCmFI8I,OAhHf,SAAoB7T,GAAO,IAEjB8T,EAAyC9T,EAAzC8T,OAAQ7L,EAAiCjI,EAAjCiI,QAAS5H,EAAwBL,EAAxBK,KAAM0T,EAAkB/T,EAAlB+T,IAAKC,EAAahU,EAAbgU,SACpC,GAAID,EAAK,CACP,IAAME,EAAYH,EAAS,SAAW,aACtC,GAAiB,UAAbC,EAAIG,KAAkB,CACxB,IAAMC,EAAYC,KAAE/O,IAAI0O,EAAK,CAAC,QAAS,QAAS,WAChD,GAAkB,YAAdI,EACF,OACE,0BACE9S,UAAWrB,EAAMqB,UACjBiH,MAAK,cACH/H,SAAUF,EAAI,UAAMA,EAAN,MAAiB,OAC/BuK,aAAcqJ,GACXjU,EAAMsI,OAEXF,KAAK,MACLC,aAAW,eAEVgM,OAAOC,cAAcC,SAASR,EAAIjO,MAAM0O,QAAS,MAIxD,GAAkB,WAAdL,EACF,OACE,yBACE5S,IAAKwS,EAAIjO,MAAMiO,IACfU,IAAKT,EACL3S,UAAWrB,EAAMqB,UACjBiH,MAAK,cACHlI,MAAOC,EAAI,UAAMA,EAAN,MAAiB,OAC5BuK,aAAcqJ,GACXjU,EAAMsI,SAMnB,OACE,yBACE/G,IAAKwS,EAAIjO,MACT2O,IAAKT,EACL3S,UAAWrB,EAAMqB,UACjBiH,MAAK,cACHlI,MAAOC,EAAI,UAAMA,EAAN,MAAiB,OAC5BuK,aAAcqJ,GACXjU,EAAMsI,SAMjB,OACE,kBAACoM,GAAA,EAAD,CACErT,UAAWrB,EAAMqB,UACjBiH,MAAOtI,EAAMsI,OAAS,CAAE/H,SAAUF,GAAc,MAChD4R,QAAQ,YACRhK,QAASA,GAET,uCACA,+CACA,uBAAGxG,GAAG,OAAOkT,OAAO,OAAOC,YAAY,IAAIhD,KAAK,OAAOiD,SAAS,WAC9D,uBAAGpT,GAAG,eACJ,4BACEA,GAAG,OACHmQ,KAAMkC,EAAS,UAAY,UAC3Be,SAAS,UACTC,GAAG,KACHC,GAAG,KACHC,EAAE,OAEJ,0BACE7C,EAAE,iSACF1Q,GAAG,iBACHmQ,KAAMkC,EAAS,UAAY,UAC3Be,SAAS,YAEX,0BACE1C,EAAE,2RACF1Q,GAAG,QACHmQ,KAAMkC,EAAS,UAAY,UAC3Be,SAAS,YAEX,0BACE1C,EAAE,6UACF1Q,GAAG,OACHmQ,KAAMkC,EAAS,UAAY,UAC3Be,SAAS,YAEX,0BACE1C,EAAE,sVACF1Q,GAAG,OACHmQ,KAAMkC,EAAS,UAAY,UAC3Be,SAAS,YAEX,0BACE1C,EAAE,6eACF1Q,GAAG,OACHmQ,KAAMkC,EAAS,UAAY,UAC3Be,SAAS,YAEX,0BACE1C,EAAE,sLACF1Q,GAAG,iBACHmQ,KAAMkC,EAAS,UAAY,gBCrGjCnU,GAAYC,aAAW,SAAAiC,GAAK,MAAK,CACnCoT,iBAAkB,CAChBlT,QAAS,OACTe,WAAY,SAEdF,YAAa,CACXtC,OAAQ,OACRF,MAAO,OACP2B,QAAS,OACTc,eAAgB,SAChBC,WAAY,SACZL,WAAY,UACZyS,UAAU,aAAD,OAAe3C,GAAQhP,QAAQqK,YACxCuH,aAAa,aAAD,OAAe5C,GAAQhP,QAAQqK,YAC3CwH,WAAW,aAAD,OAAe7C,GAAQhP,QAAQqK,YACzCjL,aAAc,cACd,kBAAmB,CACjBuS,UAAU,aAAD,OAAe3C,GAAQhP,QAAQmM,MACxCyF,aAAa,aAAD,OAAe5C,GAAQhP,QAAQmM,MAC3C0F,WAAW,aAAD,OAAe7C,GAAQhP,QAAQmM,QAG7C2F,WAAY,CACV9S,UAAW,MACXC,YAAa,IAEf8S,aAAc,CACZvT,QAAS,OACTwT,cAAe,SACfnV,MAAO,OACPoV,aAAc,MACd,UAAW,CACT7S,aAAc,cACdsH,QAAS,WACT3J,OAAQ,GACRmV,OAAO,aAAD,OAAelD,GAAQhP,QAAQqK,YACrCiD,WAAY0B,GAAQhC,WAAWM,WAE/B,UAAW,CACT6E,QAAS,KAEX,kBAAmB,CACjBC,YAAapD,GAAQhP,QAAQmM,YA0DxBkG,OApDf,SAAgC5V,GAE5B,IAAM6V,EAAa,WACf,OAAI7V,EAAM0T,MACD,gBAEA,IAIPvS,EAAUxB,KACNqS,EAXyB,iBAWjBhS,GAWlB,OACI,yBAAKqB,UAAW0G,IAAW5G,EAAQ8T,iBAAkBY,MACjD,yBAAKxU,UAAW0G,IAAW5G,EAAQyB,YAAaiT,MAC3C7V,EAAM8V,UAEC9V,EAAM8V,UAEN,kBAAC,GAAD,CAAYhC,QAAM,EAACzT,KAAK,KAAK0T,IAAM/T,EAAM+V,qBAIrD,yBAAK1U,UAAWF,EAAQmU,cACpB,yCACI7T,GAAIzB,EAAMyB,GACVJ,UAAW0G,IAAW5G,EAAQ6U,UAAWH,KACzCjN,aAAa,MACba,YAAazJ,EAAMyJ,aACfuI,IAER,kBAAC,GAAD,CACI0B,MAAO1T,EAAM0T,MACbpL,MAAO,CAAE9F,YAAa,KAErBxC,EAAM0T,MAAN,uBAAoB1T,EAAMqV,YAA1B,uBAA+CrV,EAAMqV,gBCzFpE1V,GAAYC,aAAW,SAACiC,GAAD,MAAY,CACrCwI,MAAO,CACH,2BAA4B,CAC1BjK,MAAO,QACP6J,QAAS,wBAGfgM,aAAc,CACV1T,UAAW,GACXR,QAAS,QAEbmU,OAAQ,CACJnU,QAAS,QACTY,aAAc,EACdvC,MAAO,WA2IA+V,OAvIf,SAA2BnW,GAIvB,IAAMoW,EAAqB,WACvB,GAAIpW,EAAMsG,cAAc3E,QAAU,EAChC,MAAO,CACL0U,gBAAiBrW,EAAMsW,uBAI3B,IAAMC,EAAkBC,KAAKC,MAC3BzW,EAAMsW,sBAAwBtW,EAAMsG,cAAc3E,QAIpD,MAAO,CAAE0U,gBAAiBE,EAAiBG,oBADlB,UAAMH,EAAN,WAfC,EAoBmBH,IAAzCC,EApBsB,EAoBtBA,gBAAiBK,EApBK,EAoBLA,oBApBK,EAsBFlS,mBAAS,IAtBP,gCAuBAA,mBAAS,KAvBT,mBAuBvBmS,EAvBuB,KAuBdC,EAvBc,OAwBUpS,oBAAS,GAxBnB,mBAwBvBqS,EAxBuB,KAwBTC,EAxBS,OAyBQtS,oBAAS,GAzBjB,mBAyBvBuS,EAzBuB,KAyBVC,EAzBU,OA0BYxS,oBAAS,GA1BrB,mBA4BxBrD,GA5BwB,UA4BdxB,MAuCVsX,EAAa,aAUnB,OAEQ,kBAAC7M,GAAD,CACI/I,UAAWF,EAAQkJ,MACnBG,KAAMxK,EAAMkX,UACZzM,QAASwM,EACT3M,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAAC,GAAD,CAAmBtC,QAASgP,IAC5B,kBAAC,GAAD,CAAkBE,QAAQ,KAAK9D,OAAO,OAAO+D,cAAY,GAAzD,yBAGA,kBAAC,GAAD,CAAkBD,QAAQ,QAAQ7O,MAAO,CAAE/F,UAAW,IAAM6U,cAAY,GAAxE,oGAGA,yBAAK9O,MAAO,CAAE/F,UAAW,SACrB,kBAAC,GAAD,CACIkH,YAAY,yBACZ4L,WAAU,+BACRqB,GAA4CL,GAE9C3C,MAAOmD,EACPrP,SAtEQ,SAAC5B,GAAO,IACxBE,EAAUF,EAAEC,OAAZC,MACAuQ,EAAoBD,IAApBC,gBACR,IAAKvQ,GAASA,EAAMuR,MAAM,YAAa,CACnC,IAQIR,GAAe,GARL7W,EAAMsG,cAAc3E,OAAS,EAAI3B,EAAMsG,cAAcgR,QAC/D,SAACC,EAAKzZ,GAAN,OAAeyZ,EAAMhD,SAASzO,EAAO,MACjC,GAEFA,GAMM,GAJMuQ,EAAkBvQ,EAKlB,IACd+Q,GAAe,GAKjBG,EADY,KAAVlR,GAQJ8Q,EAAW9Q,GACXgR,EAAgBD,KA0CJ/Q,MAAO6Q,EACPZ,kBAAmB/V,EAAM+V,qBAGjC,yBAAK1U,UAAWF,EAAQ8U,cACpB,kBAAC,GAAD,CACIkB,QAAQ,YACR7O,MAAO,CACH5F,UAAW,OACX8U,YAAa,GACb/B,OAAO,aAAD,OAAelD,GAAQhP,QAAQqK,YACrC1N,gBAAiB,UACjBD,MAAOsS,GAAQhP,QAAQ4K,WAE3BlG,QAASgP,EACT5V,UAAWF,EAAQ+U,QAVvB,UAcA,kBAAC,GAAD,CACIiB,QAAQ,YACRlX,MAAM,UACNoB,UAAWF,EAAQ+U,OACnBrP,UAAYkQ,GAAeF,EAC3B5O,QApDG,cA+CP,Y,6DC5IdtI,GAAYC,aAAW,SAACiC,GAAD,MAAY,CACrC4V,aAAc,CACZzV,SAAU,WACVG,KAAM,GACNJ,QAAS,OACTwT,cAAe,MACfzS,WAAY,SACZN,WAAY,OACZvC,MAAO,UACPE,WAAYoS,GAAQhC,WAAWG,iBAC/B,0BAA2B,CACzBlO,WAAY,MACZrC,WAAYoS,GAAQhC,WAAWG,kBAEjC,0FAA2F,CACzFyE,aAAc,mBAEhB,4BAA6B,CAC3B1S,WAAY,gBAGhBiV,eAAgB,CACd1V,SAAU,WACVG,MAAO,GACPwV,WAAY,UAEd9D,WAAY,CACVhJ,QAAS,QAEX+M,gBAAiB,CACf/M,QAAS,KAEX9D,SAAU,CACRzG,OAAQ,OACRyB,QAAS,OACTkI,QAAS,aACTjH,OAAQ,UACR,UAAW,CACTP,WAAY,UACZ,qBAAsB,CACpBoI,QAAS,KAIfgN,sBAAuB,CACrB9V,QAAS,OACTe,WAAY,SACZxC,OAAQ,OACRwX,aAAc,QAEhBC,QAAS,CACPhW,QAAS,OACTiW,KAAM,EACN1X,OAAQ,OACRwC,WAAY,UAEdmV,mBAAoB,CAClBpH,WAAY0B,GAAQhC,WAAWQ,gBAC/BxQ,SAAU,OACVJ,WAAYoS,GAAQhC,WAAWI,mBAC/B6E,aAAc,MACd3K,QAAS,OACT2M,YAAa,OAEfU,mBAAoB,CAClB7V,UAAW,aAuIF8V,OAnIf,SAA4BnY,GAexB,IAAIoY,EAAepY,EAAMqY,aACrBC,EAAoBlE,KAAEmE,MAAM,EAAGC,OAAOxY,EAAMqY,cAAgB,GAE7DrY,EAAMqY,aAAerY,EAAMsW,wBAC1B8B,EAAepY,EAAMsW,sBACrBgC,EAAoBlE,KAAEmE,MAAM,EAAGC,OAAOxY,EAAMsW,uBAAyB,IAGzE,IAEImC,EAAqB,MAEX,KAJAL,GAAgB,KAM1BK,EAAqB,UAGzB,IAAIC,EAAmB,GAEnB1Y,EAAMsG,cAAc3E,OAAS,IAC7B+W,EAAmB,QAGvB,IAAMC,EAAiB,WACnB,IAAIP,EAAepY,EAAMqY,aAErBrY,EAAMqY,aAAerY,EAAMsW,wBAC3B8B,EAAepY,EAAMsW,uBAGzBtW,EAAM4Y,cAAc5Y,EAAM6Y,OAAQT,IAGhCU,EAAe,WACjB9Y,EAAM+Y,mBAAmBC,GACzBC,GAAeD,IAGbE,EAAe,SAACtT,GAClB5F,EAAM4Y,cAAc5Y,EAAM6Y,OAAQjT,EAAEC,OAAOC,QAGzC4E,EAAc,WAChBuO,GAAc,GACdjZ,EAAM+Y,mBAAkB,IAGtBI,EAAa,WACfF,GAAc,GACdjZ,EAAM+Y,mBAAkB,IAhEG,EAmEKvU,oBAAS,GAnEd,mBAmExBwU,EAnEwB,KAmEZC,EAnEY,KAoEzB9X,EAAUxB,KACNqS,EArEqB,iBAqEbhS,GAClB,OACI,yBAAKyB,GAAG,UACJ,kBAAC2X,GAAA,EAAD,MACK,gBAAEC,EAAF,EAAEA,WAAF,OACG,uCACIhY,UAAWF,EAAQ4F,SACnBC,IAAKhH,EAAM6Y,OACX/S,MAAO9F,EAAM6Y,QACT7G,GAEJ,yBAAK3Q,UAAWF,EAAQ4W,QAAStW,GAAG,cAAcwG,QAAS0Q,GACtD3Y,EAAMsZ,OADX,cACyBlB,EADzB,IACwCK,EADxC,IAC6DC,GAGzD1Y,EAAMuZ,cACF,yBACIlY,UAAWF,EAAQsW,aACnBxP,QAAS6Q,IAGU,IAAfO,EACI,yBAAK5X,GAAG,sBACJ,kBAAC,KAAD,CAAUlB,SAAS,UAAU+H,MAAO,CAACtG,SAAU,WAAY+H,IAAK,SADpE,kBAGI,kBAACyP,GAAA,EAAD,CACIC,mBAAsB,CAAChY,GAAI,sBAC3B+F,SAAU0R,EACVpT,MAAOsS,EACP5N,KAAMwO,EACNvO,QAASC,EACTgP,OAAQP,EACR9X,UAAWF,EAAQuW,eACnBiC,UAAW,CAAExY,QAAS,CAClBe,MAAOf,EAAQ+W,sBAIfI,EAAkB5S,KAAI,SAAAkU,GAAgB,OAClC,kBAAC7S,GAAA,EAAD,CAAUjB,MAAO8T,EACb5S,IAAK4S,GAEJA,QAOrB,UCxLtCja,GAAYC,aAAW,iBAAO,CAChCkC,KAAM,CACF1B,MAAO,QAEXyZ,YAAa,CACTzZ,MAAO,QAEX0Z,iBAAkB,CACd7Z,MAAO,oBACP8B,QAAS,OACTc,eAAgB,gBAChBtC,SAAU,QAEduI,UAAW,CACP,UAAW,CACTqM,aAAc,oBACdrD,WAAY,gDAEd,WAAY,CACVqD,aAAc,gCAEhB,iBAAkB,CAChBA,aAAc,4CAGpBvS,YAAa,CACTb,QAAS,OACTc,eAAgB,SAChBC,WAAY,SACZ1C,MAAO,OACPE,OAAQ,QAEZyC,UAAW,CACPF,eAAgB,SAChBG,OAAQ,WAEZ+W,cAAe,CACXlX,eAAgB,SAChBG,OAAQ,WAEZgX,kBAAmB,CACfjY,QAAS,OACTwT,cAAe,MACf/S,WAAY,OACZ,+BAAgC,CAC9B2S,aAAc,SAGpBpO,SAAU,CACNzG,OAAQ,OACRyB,QAAS,OACTkI,QAAS,oBACTjH,OAAQ,UACR,UAAW,CACTP,WAAY,YAGlBsV,QAAS,CACLhW,QAAS,OACTiW,KAAM,EACN1X,OAAQ,OACRwC,WAAY,UAEhBmX,eAAgB,CACZ,4BAA6B,CAC3BxX,WAAY,gBAGlByX,uBAAwB,CACpB,oBAAqB,CACnBvC,WAAY,eA8PPwC,OAzPf,SAA6Bna,GAAO,MACMwE,oBAAS,GADf,mBACzB4V,EADyB,KACZC,EADY,OAEA7V,oBAAS,GAFT,mBAEzB8V,EAFyB,KAEfC,EAFe,OAGU/V,oBAAS,GAHnB,mBAGzBgW,EAHyB,KAGVC,EAHU,OAI0BjW,oBAAS,GAJnC,mBAIzBkW,EAJyB,KAIFC,EAJE,KAK1BxZ,EAAUxB,KAOZ4W,EAAkBvW,EAAM4a,eAExB5a,EAAMsG,cAAc3E,OAAS,IAC7B4U,EAAkBC,KAAKC,MAAMzW,EAAM4a,eAAiB5a,EAAMsG,cAAc3E,SAG5E,IAAMkZ,EAAiD,IAAjCrC,OAAOxY,EAAM4a,gBAE7BE,EAAgB9a,EAAM+a,QAAQ7X,QAAO,SAACoW,EAAQ5S,GAChD,GAAGA,EAAQ,EAAG,CACV,IAAMsU,EAAYhb,EAAM+a,QAAQrU,EAAQ,GACxC,GAAI1G,EAAMuW,gBAAkByE,EAAUC,UAClC,OAAO,EAGf,OAAO,KAeL9B,EAAa,WACfnZ,EAAMkb,eACNb,GAAe,GACfE,GAAY,IAgBVY,EAAmB,SAACtC,EAAQlC,GAC9B3W,EAAMwH,SAASqR,EAAQlC,GACvByE,KAGErC,EAAoB,SAAAsC,GACtBZ,EAAiBY,IAGfD,EAAc,WAChBpb,EAAMsb,gBACNf,GAAY,GACRva,EAAM6Y,QAAU7Y,EAAM2W,QACtB0D,GAAe,IAWjBkB,EAAyB,WAC3BZ,GAAyB,IAG7B,OACI,yBAAKtZ,UAAWF,EAAQW,MACpB,kBAAC,GAAD,CACIoV,UAAWwD,EACXzD,WAAYsE,EACZtT,QAASsT,EACTjF,sBAAuBtW,EAAM4a,eAC7BtU,cAAetG,EAAMsG,cACrBkV,OAAQxb,EAAM+a,QACdI,iBAAkBA,EAClBpF,kBAAmB/V,EAAM+V,oBAE7B,yBAAKzN,MAAO,CAACvG,QAAS,SAClB,yBAAKV,UAAWF,EAAQyB,aACpB,kBAAC,GAAD,CACIvB,UAAWrB,EAAM+V,mBAAsD,UAAjC/V,EAAM+V,kBAAkB7B,KAAmB/S,EAAQ4Y,cAAgB5Y,EAAQ4B,UACjH1C,KAAK,KACLyT,OAAQsG,EACRnS,QAASkR,EACTpF,IAAK/T,EAAM+V,kBACX/B,SAAUhU,EAAMyb,eAAeC,KAC/BpT,MAAO,CAACuI,WAAY,qBAG5B,kBAAC8K,GAAA,EAAD,CAAata,UAAWF,EAAQ0Y,aAC5B,kBAAC+B,EAAA,EAAD,CACIC,MACIhB,EAAa,8FAET,GAERiB,UAAU,OAEV,kBAACtC,GAAA,EAAD,CACI1T,MAAO9F,EAAM2W,QACbnM,KAAM8P,EACNnc,KAAK,cACL4d,cAAY,EACZ/S,WAAS,EACT0Q,OAAQP,EACR1O,QAAS,SAAC7E,GAAD,OAjFb,SAACA,GACjB,IAAIoW,GAAc,EACdpW,GACoB,uBAAhBA,EAAEC,OAAOpE,KACTua,GAAc,GAIjBA,GAAgBxB,GACjBY,IAwEgC1Q,CAAY9E,IAC5BvE,UAAW0G,IAAW5G,EAAQ8Y,eAAT,0BACb9Y,EAAQ+Y,wBAA4BW,IAE5ChU,SAAUgU,EACVhS,MACI,kBAACoT,GAAA,EAAD,CACI9a,QAAS,CACL2H,UAAW3H,EAAQ2H,WAEvB3K,KAAK,cACLsD,GAAG,gBAGXya,YAAa,WACT,GAAGrB,EACC,OACI,yBAAKxZ,UAAWF,EAAQ2Y,kBACpB,0GAMZ,IAAK9Z,EAAM6Y,SAAa7Y,EAAM2W,QAC1B,OACI,yBAAKtV,UAAWF,EAAQ2Y,kBACpB,6BAjJpB,kBAqJQ,IAAMhU,EAAQ9F,EAAM2W,SAAW,EAC3B8B,EAAqB,MAEX,IAAV3S,IACA2S,EAAqB,WAEzB,IAAI0D,EAAerW,EAAQ,EAAR,UAAeA,EAAf,YAAwB2S,GAAuB,GAC5D2D,EAAQpc,EAAMsG,cAAcgR,QAAO,SAACC,EAAKzZ,GAAN,OAAeyZ,EAAMhD,SAASzO,EAAO,MAAK,GAC7EuW,EAAYrc,EAAM4a,gBAAkBwB,EAAQ,EAAIA,EAAQtW,GAC1DwW,GAAc,EAEfD,EAAY,IACXC,GAAc,GAEfF,EAAQ,IAGCD,EAFJE,GAAa,EAC8B,IAAvC7D,OAAOxY,EAAMsG,cAAc3E,QACf,UAAMya,EAAN,YAAe3D,GAGf,UAAM3S,EAAN,YAAe2S,EAAf,SAGJ,UAAM3S,EAAN,YAAe2S,EAAf,4BAIpB,IAII8D,EAJEC,EAAYxc,EAAM+a,QAAQxc,MAC5B,SAAA+a,GAAM,OAAIA,EAAOxT,QAAU9F,EAAM6Y,UAcrC,OARI0D,EADkB,IAAlB/D,OAAO1S,GACI,cAEJ9F,EAAM6Y,OAIL,UAAM2D,EAAUnT,MAAhB,YAAyB8S,GAHtBA,EAMX,yBAAK7T,MAAO,CAAEvG,QAAS,OAAQc,eAAgB,kBAC3C,yBAAKyF,MAAO,CAAErI,MAAOqc,EAAc/J,GAAQhP,QAAQmM,KAAO,KACrD6M,MAObzB,EAAcpV,KAAI,SAAA4T,GAAM,OACpB,kBAAC,GAAD,CACIA,OAAQA,EAAOjQ,MACfwP,OAAQS,EAAOxT,MACfuS,aAAciB,EAAO2B,UACrBwB,cAAezc,EAAMyc,cACrBnG,sBAAuBC,EACvBqC,cAAeuC,EACfpC,kBAAmBA,EACnB/R,IAAKsS,EAAOjQ,MACZ0M,kBAAmB/V,EAAM+V,kBACzB0F,eAAgBzb,EAAMyb,eACtBnV,cAAetG,EAAMsG,eAEpBgT,EAAOjQ,UAInBrJ,EAAM0c,qBACH,yBAAKrb,UAAWF,EAAQ4F,UACpB,yBACI1F,UAAWF,EAAQ4W,QACnB9P,QAzJN,WAC1B0S,GAAyB,KAsJG,kCC/TvBgC,GAAS,SAACC,EAAMC,GACzBD,EAAKtF,QAAO,SAACwF,EAAS9V,GAAV,OAAoB8V,GAAWA,EAAQ9V,GAAQ8V,EAAQ9V,GAAO,OAAO6V,I,0CCG/Eld,GAAYC,aAAW,iBAAO,CAChC9B,KAAM,CACFiE,QAAS,OACTe,WAAY,UAEhBia,SAAU,CACNxc,SAAU,OACVJ,WAAY,SACZ6c,EAAG,CACD7c,WAAY,WAGlB8c,OAAQ,CACJ1c,SAAU,OACVJ,WAAY,UAEhB8D,2BAA4B,CACxBP,YAAa,EACbnD,SAAU,GACVN,MAAO,UACPE,WAAY,IACZ+D,cAAe,QAIjBgZ,GAAQ,SAACld,GAAW,IACZmd,EADW,iBACInd,GACnBmB,EAAUxB,KAChB,OACI,wBAASwd,EACL,yBAAK9b,UAAWF,EAAQrD,MACpB,kBAAC,GAAD,CAAYuC,KAAM,GAAIvC,KAAMkC,EAAMod,UAClC,0BAAM/b,UAAWF,EAAQ8C,4BACrB,yBAAK5C,UAAWF,EAAQ4b,UAAW/c,EAAMod,QAAQjf,MACjD,yBAAKkD,UAAWF,EAAQ8b,QAAxB,WACSjd,EAAMod,QAAQ/V,eAuB5BgW,OAhBf,SAAmCrd,GAAQ,IAC/Bsd,EAAuGtd,EAAvGsd,eAAgBC,EAAuFvd,EAAvFud,YAAaC,EAA0Exd,EAA1Ewd,kBAAmBC,EAAuDzd,EAAvDyd,mBAAoBC,EAAmC1d,EAAnC0d,aAAcC,EAAqB3d,EAArB2d,iBAC1F,OACI,kBAACA,EAAD,CACIL,eAAgBA,EAChBC,YAAaA,EACb7D,OAAQ8D,EACR/S,QAASgT,EACTG,eAAgBV,GAChBQ,aAAcA,KCNXG,OA5Cf,SAAsB7d,GAclB,IAAM8d,EAAgBC,KAAoB,CACtCC,iBAAkB,YAClBC,eAAgB,IAChBC,mBAAmB,IAGfC,EAAuBL,EAAvBK,mBAER,OACI,oCACI,kBAAC,KAAD,CACIC,YAAape,EAAMoe,YACnB5W,SAAUxH,EAAMwH,SAChB6W,QAAS,CAACP,GACVrV,IAAKzI,EAAMse,UACX3U,OAAQ3J,EAAM2J,OACdpF,QAASvE,EAAMuE,QACfkF,YAAazJ,EAAMyJ,cAEvB,kBAAC,GAAD,CACI6T,eAAgBtd,EAAMsd,eACtBC,YAAavd,EAAMud,YACnBI,iBAAkBQ,EAClBX,kBAAmBxd,EAAMwd,kBACzBC,mBAAoBzd,EAAMyd,mBAC1BC,aAAc1d,EAAM0d,iBChC9B/d,GAAYC,aAAW,SAACiC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,OACT3B,MAAO,QAEXwC,YAAa,CACTb,QAAS,OACTc,eAAgB,SAChBC,WAAY,SACZ1C,MAAO,OACPE,OAAQ,QAEZyC,UAAW,CACPxC,SAAU,OACVyC,OAAQ,WAEZC,kBAAmB,CACfhD,MAAO,UACPiD,OAAQ,gBAEZ8E,gBAAiB,CACb/H,MAAO4B,EAAM0B,QAAQ0H,UAAUxH,KAC/BP,OAAQ,gBAEZqb,SAAU,CACNhc,UAAW,EACXnC,MAAO,OACPmV,cAAe,SACfiJ,cAAe,MACfje,SAAU,OACVke,SAAU,UAEdC,YAAa,CACTze,MAAO,UACPH,OAAQ,EACRS,SAAU,UACVgC,UAAW,EACXyQ,UAAW,OACX7S,WAAY,IACZ4S,WAAY,MAEhB4L,gBAAiB,CACbve,MAAO,YAmGAwe,OA3Ff,SAAsB5e,GAAQ,IAAD,EACawE,oBAAS,GADtB,mBAClB4V,EADkB,KACLC,EADK,OAEa7V,mBAAS,IAFtB,mBAElB+Y,EAFkB,aAIG/Y,sBAJH,mBAIlBqa,EAJkB,KAIVC,EAJU,KAKnB3d,EAAUxB,KAEV4E,EAAU,WAEZ8V,GAAe,GACfwE,EAAO1W,QACPnI,EAAMuE,WAsCV,OACI,yBAAKlD,UAAWF,EAAQW,MACpB,yBAAKT,UAAWF,EAAQyB,aACpB,yBAAKvB,UAAW0G,IACZ5G,EAAQ4B,UACRqX,EAAcjZ,EAAQ6G,gBAAkB7G,EAAQ8B,mBAEhDgF,QAAS1D,GAET,0BAAM6D,KAAK,MAAMC,aAAW,QAA5B,kBAKR,yBAAKhH,UAAWF,EAAQod,UACpB,yBACItW,QAAS1D,EACTlD,UAAW0G,IAAW5G,EAAQwd,gBApEnC,gBAsEK,kBAAC,GAAD,CACIP,YAAape,EAAMoe,YACnB5W,SAxDH,SAAC4W,GACdpe,EAAM+e,cAAcX,IAwDJE,UAAW,SAAC1Y,GACRkZ,EAAUlZ,IAEd+D,OAxDA,WAEb3J,EAAMgf,QACL3E,GAAe,GAIfA,GAAe,IAkDH9V,QAASA,EACTkF,YAAY,yGACZ6T,eAhDG,aAiDHI,aArCC,aAsCDH,YAAaA,EACbC,kBA/CM,aAgDNC,mBA5CO,gBA+Cdzd,EAAM0T,OACH,yBAAKrS,UAAWF,EAAQud,kBAAcO,M,SCjJpDC,GAA2B,WAQ/B,IARsD,IAAtBd,EAAqB,uDAAP,GACxCe,EAASC,wBAAahB,EAAYiB,qBAAqBF,OAEvDG,EAAeH,EAAOzZ,KAC1B,SAAC6Z,GAAD,OAAaA,EAAM/b,KAAKgc,OAAmBD,EAAM/b,KAAf,QAGhCic,EAAU,GACLC,EAAI,EAAGA,EAAIJ,EAAa3d,OAAQ+d,IAAK,CAC5C,IAAMH,EAAQD,EAAaI,GAGvBA,IAAMJ,EAAa3d,OAAS,EAC9B8d,GAAWF,EAGSE,GAAN,OAAVF,EAA2BA,EACfA,EAAQ,KAG5B,OAAOE,GAGHE,GAAoB,SAACvB,GAAyC,IAA5BwB,EAA2B,uDAAP,GACtDH,EAAUP,GAAyBd,GAOvC,OANAwB,EAAkBC,SAAQ,SAACzC,GACzBqC,EAAUA,EAAQK,QAChB,IAAIC,OAAO3C,EAAQjf,KAAM,KADjB,aAEFif,EAAQ3b,GAFN,WAKLge,GAGHO,GAAuB,SAACC,EAAkBlb,GAE9C,OAAOkb,EAAiBva,KAAI,SAACjE,GAC3B,IAAMye,EAAWnb,EAAUxG,MAAK,SAAC4hB,GAAD,OAASA,EAAI1e,KAAOA,KACpD,MAAO,CACLA,KACAtD,KAAM+hB,EAAS/hB,MAAQ,Q,UCpCvBwB,GAAYC,aAAW,iBAAO,CAChCwgB,oBAAqB,CACjB9f,OAAQ,GACR2J,QAAS,GACTjI,SAAU,WACVgB,OAAQ,WAEZqd,mBAAoB,CAChBjgB,MAAO,GACPE,OAAQ,IAEZggB,oBAAqB,CACjBrgB,MAAO,UACPM,SAAU,EACVJ,WAAY,IACZ6S,UAAW,SACXzQ,UAAW,GACXge,SAAU,aACVngB,MAAO,QAsBAogB,OAnBf,SAAoBxgB,GAChB,IAAMmB,EAAUxB,KAChB,OACI,yBACI0B,UAAWF,EAAQif,oBACnBnY,QAASjI,EAAMygB,UAEf,kBAAC,OAAD,CACIpf,UAAWF,EAAQkf,mBACnB5L,IAAG,gBAAWzU,EAAMxB,MAAML,MAC1BoD,IAAK9C,GAAiBuB,EAAMxB,SAEhC,yBAAK6C,UAAWF,EAAQmf,qBACnBtgB,EAAMxB,MAAMJ,eCnCvBuB,GAAYC,aAAW,iBAAO,CAChC8gB,uBAAwB,CACpBtgB,MAAO,IACPE,OAAQ,IACR2J,QAAS,IAEb0W,oBAAqB,CACjB5e,QAAS,OACT8B,SAAU,QAEd+c,qBAAsB,CAClBxgB,MAAO,GACPE,OAAQ,GACR0B,SAAU,WACV+H,IAAK,EACL5H,KAAM,OAyBC0e,OArBf,SAAwB7gB,GACpB,IAAMmB,EAAUxB,KAEhB,OACI,yBAAK0B,UAAWF,EAAQuf,wBACpB,yBAAKrf,UAAWF,EAAQwf,qBAEhBziB,GAAOwH,KAAI,SAAClH,GAAD,OACP,kBAAC,GAAD,CACIwI,IAAKxI,EAAML,KACXK,MAAOA,EACPyI,WAAUjH,EAAM8gB,eAAgB9gB,EAAM8gB,cAAc3iB,OAASK,EAAML,KACnEsiB,SAAU,WAAQzgB,EAAM+gB,eAAeviB,YCf7DwiB,GAAa3O,YAAW,CAC1BvQ,KAAM,CACFW,WAAY,WAEhBwe,UAAW,CACT/gB,gBAAiB,YALJmS,CAOhB6O,KAEGC,GAAY9O,aAAW,iBAAO,CAChCvQ,KAAM,CACF8Q,cAAe,OACf3S,MAAO,UAEPE,WAAY,OACZ+D,cAAe,OACf,UAAW,CACXwR,QAAS,YARCrD,EAWd,SAACrS,GAAD,OAAW,kBAACohB,EAAA,EAAD,eAAKC,eAAa,GAAKrhB,OAEhCL,GAAYC,aAAW,SAACiC,GAAD,MAAY,CACrCyf,eAAgB,CACZ7L,OAAQ,qBACRhT,WAAY,UACZE,aAAc,EACd6S,aAAc,IAElB+L,eAAgB,CACZvf,SAAU,WACV5B,MAAO,QAEXohB,KAAM,CACFvX,QAAS,IAEbwX,gBAAiB,CACbzf,SAAU,WACVwT,aAAc,GACdhT,WAAY,EACZgV,YAAa,GAEjBkK,WAAY,CACRzhB,MAAO,UACP,UAAW,CACPC,gBAAiB,uBAErB,UAAW,CACPwV,QAAS,SAGjBQ,OAAQ,CACJjW,MAAO,UACP0C,aAAc,EACdgf,SAAU,IAEV,aAAc,CACZjf,UAAW,QAEbkQ,cAAe,QAEnBgP,UAAW,CACPpf,WAAY,GACZgV,YAAa,IAEjBqK,cAAe,CACXzhB,MAAO,GACPE,OAAQ,QAIVwhB,GAAe,CACjB,CACI7G,UAAW,GACX5R,MAAO,eACPvD,MAAO,SAEX,CACImV,UAAW,GACX5R,MAAO,eACPvD,MAAO,UAEX,CACImV,UAAW,GACX5R,MAAO,eACPvD,MAAO,SAEX,CACImV,UAAW,GACX5R,MAAO,eACPvD,MAAO,QAEX,CACImV,UAAW,GACX5R,MAAO,eACPvD,MAAO,UAyZAic,OAtZf,SAA0B/hB,GACtB,IAAMmB,EAAUxB,KADa,EAEO6E,mBAAS,GAFhB,mBAEtBwd,EAFsB,KAEVC,EAFU,OAGazd,mBAAS,MAHtB,mBAGtBsc,EAHsB,KAGPoB,EAHO,OAIa1d,mBAAS,IAJtB,mBAItB8B,EAJsB,KAIP6b,EAJO,OAKC3d,mBAAS,IALV,mBAKtBmS,EALsB,KAKbC,EALa,OAMDpS,mBAAS,IANR,mBAMtBqU,EANsB,KAMduJ,EANc,OAOe5d,oBAAS,GAPxB,mBAOtB6d,EAPsB,KAONC,EAPM,OAQS9d,mBAAS,MARlB,mBAQtB+d,EARsB,aAUS/d,mBAASge,eAAYC,gBAV9B,mBAUtBrE,EAVsB,KAUTsE,EAVS,OAWWle,mBAAS,MAXpB,mBAWtBme,EAXsB,KAWRC,EAXQ,OAY2Bpe,oBAAS,GAZpC,mBAYAqe,GAZA,aAamBre,mBAAS,IAb5B,mBAatByb,EAbsB,KAaJ6C,EAbI,OAcmBte,oBAAS,GAd5B,oBActBue,GAdsB,gBAeGve,mBAAS,OAfZ,qBAetBwe,GAfsB,MAeZC,GAfY,SAkBHze,mBAAS,IAlBN,qBAkBtB0e,GAlBsB,MAkBfC,GAlBe,MAmD7Ble,qBAAU,WACN,IAAMme,EAAcC,OAAOC,SAASC,OAI9BC,EAFY,IAAIC,gBAAgBL,GAET/d,IAAI,SAEjCD,KAAMse,KAAN,0DAA8DF,IAC7DG,MAAK,SAACpe,GACH4d,GAAS5d,EAAIC,KAAKA,KAAK0d,YAE7B,IAEF,IAiEMU,GAAsBxF,EAAYiB,oBAAoBL,UACtD6E,GAAe,CACjB,CACI,GAAM,2BACN,IAAO,2BACP,KAAS,gBACT,SAAY,gBACZ,QAAW,CACP,UAAa,SACb,SAAY,SACZ,SAAY,gBACZ,cAAiB,UACjB,OAAU,UAEd,KAAQ,CACJ,cAsCNC,GAjC0B,WAC5B,IAAIA,GAAqB,EASjBrH,EAAkCzc,EAAlCyc,cAAe7B,EAAmB5a,EAAnB4a,eACjBoE,EAAUZ,EAAYiB,oBAAoBL,UAmBhD,OAjBI+D,GACAe,GAAqB,EAGjBxd,EAAc3E,OAAS,GAAKqd,IAC5BuD,IACK9F,GAA4C,IAA3BjE,OAAOoC,GAGpB6B,GAAiB4F,GAClB/b,EAAc3E,OAASgV,GAAWiE,IACpCkJ,GAAqB,GAJvBA,GAAqB,IAU1BA,EAGgBC,GAqBrBvZ,GAAOwZ,QAAQhB,IA6CrB,OACI,yBAAK3hB,UAAWF,EAAQmgB,gBACpB,yBAAKhZ,MAAO,CAACmW,SAAU,SAAUre,MAAO,qBACpC,kBAAC4gB,GAAD,CACIiD,UAAQ,EACR9M,QAAQ,YACRrR,MAAOkc,EACPxa,SA/LQ,SAACkC,EAAOwa,GAC5BjC,EAAciC,KA+LF,kBAAC/C,GAAD,CAAWE,eAAa,EAAChY,MCvXb,8BD0XpB,0BAAM8a,SAtDO,SAACve,GAClBA,EAAEwe,iBAEF,IAAMxE,EAAoBI,GAAqBC,EAAkB4D,IAE3DQ,EAAU1E,GAAkBvB,EAAawB,GAIzC0E,EAAc,CAChBC,GAAIje,EAAcZ,KAAI,SAAC5H,GAAD,OAAUA,EAAK2D,MACrC+iB,aAAchM,OAAO7B,GACrB0N,WAGAvD,IACAwD,EAAYpmB,OAAS,CAAC4iB,EAAc3iB,OAaxCsmB,QAAQC,IAAIJ,GAEZlf,KAAMse,KAAK,uCAAwCY,EAAc,CAC7Dhf,QAAS,CACL,eAAgB,mBAChB,8BAA+B,IAC/B,cAAiB4d,MAEtBS,MAAK,SAACpe,GACLkf,QAAQC,IAAInf,EAAIC,KAAKA,UAgBSnE,UAAWF,EAAQogB,gBAC7C,yBAAKlgB,UAAWF,EAAQqgB,MACpB,yBACIngB,UAAW0G,IACP,MACA,uBACA5G,EAAQsgB,kBAGZ,kBAAC,GAAD,CACInd,YA1LK,SAACqgB,GAC1BxC,EAAiBwC,IA0LGpgB,QAvLC,gBA6LD,yBAAKlD,UAAW0G,IACZ,MACA,uBACA5G,EAAQsgB,kBAER,kBAAC,GAAD,CACI9K,QAASA,EACTkC,OAAQA,EACRrR,SAlLA,SAACqR,EAAQlC,GACrCyL,EAAUvJ,GACVjC,EAAWD,GACX2L,GAAkB,IAgLUvH,QAAS+G,GACTxb,cAAeA,EACfsU,eApQT,IAqQSgK,eAnQT,CACnBC,OAAO,EACP/e,MAAO,IAkQqB4N,MAAO6O,EACP7F,qBA3QJ,EA4QID,eA9QV,EA+QUvB,aAlMX,WACjBlb,EAAM8kB,iBAAiB,IAkMKxJ,cA/LV,WAClBtb,EAAM8kB,iBAAiB,IA+LKrJ,eApQT,CACnBsJ,YAAa,WACbC,eAAgB,SAChBC,sBAAuB,YAkQKlP,kBA/PN,CACtB7B,KAAM,QACNpO,MAAO,CACH0O,QAAS,QACT/S,GAAI,aAgQI,yBAAKJ,UAAW0G,IACJ,MACA,uBACA5G,EAAQsgB,kBAEhB,kBAAC,GAAD,CACI1C,cAlMF,SAACmG,GACnBxC,EAAewC,GACftC,EAAgB,OAiMIxE,YAAaA,EACb1K,MAAOiP,EACPwC,eA3ND,CACnBN,OAAO,EACP/e,MAAO,IA0NakZ,QAAS4E,GACTC,aAAcA,GACdnG,aA/LH,SAAC1d,GAIlBigB,EAAiBmF,KAAKplB,EAAMyB,IAC5BqhB,EAAoB7C,IA2LA1b,QApMQ,WAC5Bse,GAAwB,QAuMhB,yBAAKxhB,UAAU,yCAAyCiH,MAAO,CAACvG,QAAS,OAAQkI,QAAS,KACtF,yBAAK3B,MAAO,CAACvG,QAAS,OAAQc,eAAgB,aAGlC,kBAAC+Y,EAAA,EAAD,CAASC,MAAM,iBAAYC,UAAU,OACjC,kBAACuJ,EAAA,EAAD,CACIhkB,UAAWF,EAAQugB,WACnBrZ,aAAW,iBACXJ,QAjIZ,SAACyB,GACrBuZ,GAAYvZ,EAAM4b,iBAmIkBxE,EACI,yBACIzf,UAAWF,EAAQ0gB,cACnBpN,IAAI,SACJoH,MA/PxCiF,EACOA,EAAc1iB,YAElB,iBA6PqCmD,IAzQnB,WACzB,GAAIuf,EACA,OAAOriB,GAAiBqiB,GAAe,GAuQMyE,KAEb,kBAAC,IAAD,SAmCxB,yBAAKlkB,UAAWF,EAAQygB,WACpB,kBAAC3O,EAAA,EAAD,CACIkE,QAAQ,YACRlX,MAAM,UACNoB,UAAWF,EAAQ+U,OACnBhC,KAAK,SACLrN,SAAUid,ItB9cd,SAACjb,GACvB,GAAqB,kBAAVA,EACX,MAAM,IAAI2c,UAAU,qBAGrB,OAAO3c,EAAMtB,cAAcuY,QAAQ,iBAAiB,SAAA2F,GAAC,OAAIA,EAAE5kB,iBsBgdhC6kB,CAAS,yCAIrB,kBAACC,EAAA,EAAD,CACInb,KAAMA,GACNwY,SAAUA,GACVvY,QA/LI,WAChBwY,GAAY,OA+LA2C,aAAc,CACVC,SAAU,SACVC,WAAY,WAGhB,kBAAC,GAAD,CACI/E,eAAgB,SAACviB,GAAD,OArNN,SAACA,GAC3B,GAAGsiB,GACIA,EAAc3iB,OAASK,EAAML,KAG5B,OAFA+jB,EAAiB,WACjBe,GAAY,MAIpBf,EAAiB1jB,GACjBykB,GAAY,MA4M+B8C,CAAsBvnB,IACjDsiB,cAAeA,Q,oBE9fjCnhB,GAAYC,aAAW,SAACiC,GAAD,MAAY,CACrCmkB,kBAAmB,CACfvQ,OAAQ,qBACRhT,WAAY,UACZE,aAAc,EACd6S,aAAc,IAElByQ,eAAgB,CACZlkB,QAAS,OACTe,WAAY,SACZD,eAAgB,gBAChBoH,QAAS,aAEbic,gBAAiB,CACbnkB,QAAS,OACTwT,cAAe,MACfhV,SAAU,GACVN,MAAO,UACP6C,WAAY,UAEhBqjB,iBAAkB,CACdziB,YAAa,IAEjB0iB,oBAAqB,CACjBnmB,MAAO,UACPM,SAAU,GACVJ,WAAY,KAEhBkmB,eAAgB,CACZpmB,MAAO,UACPM,SAAU,QAIZygB,GAAa3O,YAAW,CAC1BvQ,KAAM,CACFW,WAAY,WAEhBwe,UAAW,CACT/gB,gBAAiB,YALJmS,CAOhB6O,KAEGC,GAAY9O,aAAW,iBAAO,CAChCvQ,KAAM,CACF8Q,cAAe,OACf3S,MAAO,UAEPE,WAAY,OACZ+D,cAAe,OACf,UAAW,CACXwR,QAAS,YARCrD,EAWd,SAACrS,GAAD,OAAW,kBAACohB,EAAA,EAAD,eAAKC,eAAa,GAAKrhB,OAgFvBsmB,OA9Ef,SAAkBtmB,GACd,IAAMmB,EAAUxB,KAGRqiB,EAA+BhiB,EAA/BgiB,WAAYuE,EAAmBvmB,EAAnBumB,eACdxQ,EAAoB,CACtB7B,KAAM,QACNpO,MAAO,CACH0O,QAAS,QACT/S,GAAI,UAQZ,OACI,yBAAKJ,UAAWF,EAAQ6kB,mBACpB,kBAAC,GAAD,CAAYlgB,MAAOkc,EACf7K,QAAQ,YACR3P,SARS,SAACkC,EAAOwa,GACzBqC,EAAerC,KAUkB,kBAAC,GAAD,CAAWpe,MAAO,EAAGuD,MAAM,uDAG/B,kBAAC,GAAD,CAAWvD,MAAO,EAAGuD,MAAM,sCAIjC,IAAf2Y,GACI,yBAAK3gB,UAAWF,EAAQ8kB,gBACpB,yBAAK5kB,UAAWF,EAAQ+kB,iBAAxB,MAEI,kBAAC,GAAD,CACI5d,MAAO,CAAC/H,SAAU,GAAIsQ,WAAY,kBAClCiD,QAAM,EACNC,IAAKgC,MAMN,IAAfiM,GACI,yBAAK3gB,UAAWF,EAAQ8kB,gBACpB,yBAAK5kB,UAAWF,EAAQ+kB,iBACpB,oCAMA,kBAAC,GAAD,CACI5d,MAAO,CAAE/H,SAAU,GAAIsQ,WAAY,kBACnCiD,QAAM,EACNC,IAAKgC,KAGb,yBAAK1U,UAAWF,EAAQglB,kBACpB,yBAAK9kB,UAAWF,EAAQilB,qBAAxB,uBAGA,yBAAK/kB,UAAWF,EAAQklB,gBAAxB,gBACkB,IACbG,OACAC,IAAI,EAAG,UACPC,QAAQ,SACRC,OAAO,e,wCCtHlCC,GAAWhnB,YAAW,CACxBinB,sBAAuB,CACnBC,SAAU,WACV/kB,QAAS,OACTe,WAAY,YAEhBikB,mBAAoB,CAChB/jB,OAAQ,UACR/C,MAAO,WAEX+mB,eAAgB,CACZ7mB,WAAY,IACZ8mB,WAAY,UAGhBC,aAAc,CACV/mB,WAAY,IACZ8mB,WAAY,UAGhBE,oBAAqB,CACjB/mB,MAAO,GACPE,OAAQ,GACRR,OAAQ,QACRmnB,WAAY,UAEhBG,2BAA4B,CACxBnnB,MAAO,OACP+C,OAAQ,WAEZqkB,kBAAmB,CACftlB,QAAS,OACTe,WAAY,SACZyS,cAAe,MACfzV,OAAQ,SACRmK,QAAS,GACThK,MAAO,WAEXqnB,qBAAsB,CAClBtlB,SAAU,WACVgB,OAAQ,UACR/C,MAAO,WAEXsnB,gBAAkB,CACdvlB,SAAU,WACV5B,MAAO,IACP2J,IAAK,GACL5H,MAAO,GACPF,OAAQ,GACRU,aAAc,EACdpC,SAAU,GACVJ,WAAY,IACZF,MAAO,sBACPC,gBAAiB,QACjB4R,WAAY,uGACZ0V,UAAW,aACXC,wBAAyB,mBACzB/kB,UAAW,mEACXJ,UAAW,UAIbolB,GAAwB,SAAC,GAAc,IAAZ5pB,EAAW,EAAXA,KAIvBqD,EAAUylB,KAChB,OACE,uBAEEvlB,UACEvD,EAAK6C,UACDoH,IAAW5G,EAAQ4lB,mBAAoB5lB,EAAQ6lB,eAAgB7lB,EAAQwmB,kBACvE5f,IAAW5G,EAAQ4lB,mBAAqB5lB,EAAQ6lB,gBAEtD1e,MAAO,CAAEkN,aAAc,IAEtB1X,EAAK6C,UAAY,mBAAqB9C,EAAmBC,KAK5D8pB,GAAoB,SAAC,GAAc,IAAZ9pB,EAAW,EAAXA,KAInBqD,EAAUylB,KAChB,OACI,uBAEEvlB,UACEvD,EAAK6C,UAAY,mBAAqBQ,EAAQimB,2BAEhD9e,MAAO,CAAEkN,aAAc,IAEtB1X,EAAK6C,UAAY,mBAAqB9C,EAAmBC,KAsHrD+pB,OAlHf,SAAuB7nB,GACnB,IAAMmB,EAAUylB,KA6BVkB,EAAoB,SAAC9nB,GACvB,IAIM+nB,EAAcC,MAAMC,KAAKjoB,EAAMkoB,OAErC,OADAH,EAAYI,QAER,yBAAK9mB,UAAWF,EAAQmmB,qBAAsBhf,MAAO,CAACvG,QAAS,SAC3D,kBAAC,GAAD,CACIjE,KAAMkC,EAAMkoB,MAAM,GAClBE,MAAI,IAHZ,qBAMkBpoB,EAAMkoB,MAAMvmB,OAAS,EANvC,WAQQ3B,EAAMqZ,YACF,yBAAKhY,UAAWF,EAAQomB,iBACpB,kBAACc,GAAA,EAAD,KAEQN,EAAYriB,KAAI,SAAC5H,GAAD,OACZ,kBAACwqB,GAAA,EAAD,CACIpS,QAAM,EACNlP,IAAKlJ,EAAK2D,GACVwG,QAAS,SAACnK,GArB1C2mB,QAAQC,IAAI,mBAuBoB,kBAAC6D,GAAA,EAAD,KACI,kBAAC,GAAD,CAAYloB,KAAM,GAAIvC,KAAMA,KAEhC,kBAAC0qB,GAAA,EAAD,CAAcxd,QAASnN,EAAmBC,aAYlF,OACI,yBAAKuD,UAAWF,EAAQ0lB,uBACpB,kBAAC,GAAD,CACI/oB,KAAMkC,EAAMioB,OAtEP,WACb,IAAMzpB,EAAQwB,EAAM9B,QAAU8B,EAAM9B,OAAOyD,OAAS,EAC9CtD,GAAsB2B,EAAM9B,OAAO,IACnC,KACN,OAAIM,EAEI,0BAAM6C,UAAWF,EAAQsnB,gBAAzB,4BACgC,IAC5B,yBAAKpnB,UAAWF,EAAQgmB,oBACpB1S,IAAKjW,EAAMJ,YACXyd,MAAOrd,EAAMJ,YACbmD,IAAK9C,GAAiBD,GAAO,KAEhCA,EAAMJ,YAPX,iBAaA,0BAAMiD,UAAWF,EAAQsnB,eAAgBngB,MAAO,CAAEvG,QAAS,WAAYyT,aAAc,IAArF,sBAsDHkT,GACA1oB,EAAMukB,GAAG5iB,OAAS,EACf,0BAAMN,UAAWF,EAAQ+lB,aAAc5e,MAAO,CAAEvG,QAAS,SACrD,kBAACqX,GAAA,EAAD,KACI,kBAAC0O,EAAD,CACII,MAAOloB,EAAMukB,OAKG,IAA5B/L,OAAOxY,EAAMukB,GAAG5iB,QAChB,0BAAMN,UAAWF,EAAQ+lB,aAAc5e,MAAO,CAACvG,QAAS,SACpD,kBAAC,GAAD,CACIjE,KAAMkC,EAAMukB,GAAG,MAMvB,0BAAMljB,UAAWF,EAAQ+lB,aAAc5e,MAAO,CAACvG,QAAS,SACpD,kBAAC,GAAD,CACIjE,KAAMkC,EAAMukB,GAAG,KAInB,0BAAMljB,UAAU,kBAAhB,eACA,kBAAC,GAAD,CACIvD,KAAMkC,EAAMukB,GAAG,QAY1BoE,GAAY,SAAC3oB,GACtB,IAAMmB,EAAUylB,KAChB,OACI,yBAAKvlB,UAAWF,EAAQkmB,mBACpB,6BAAMrnB,EAAM8F,OACZ,kBAAC,GAAD,CACIwC,MAAO,CAAE/H,SAAU,GAAIsQ,WAAY,kBACnCiD,QAAM,EACNC,IAAK/T,EAAM+V,sB,UCnOrB6S,GAAavW,YAAW,CAC1BvQ,KAAM,CACFW,WAAY,UACZgT,OAAQ,sBACR+R,UAAW,aACX7kB,aAAc,EACdD,UAAW,OACX+b,SAAU,YAPCpM,CAShBwW,MAEGlpB,GAAYC,aAAW,SAACiC,GAAD,MAAY,CACrCinB,KAAM,CAGFtT,aAAc,QAElBuT,iBAAkB,CACdhnB,QAAS,OACTkI,QAAS,GACTjI,SAAU,YAEdgnB,gBAAiB,CACbjnB,QAAS,eACTyc,cAAe,MACf1G,aAAc,GACdtV,WAAY,IAEhBymB,kBAAmB,CACflnB,QAAS,eACTC,SAAU,WACV+H,IAAK,EACL3H,MAAO,EACPnC,MAAO,OACPM,SAAU,GACVJ,WAAY,KAEhBknB,kBAAmB,CACftlB,QAAS,OACTe,WAAY,SACZyS,cAAe,MACfzV,OAAQ,SACRmK,QAAS,GACThK,MAAO,WAEXipB,iBAAkB,CACdjpB,MAAO,mBAGXkpB,kBAAmB,CACflpB,MAAO,UACPgK,QAAS,cACTgd,WAAY,WACZ9mB,WAAY,SAmBd4V,GAAoB,CACtB7B,KAAM,QACNpO,MAAO,CACH0O,QAAS,QACT/S,GAAI,UAgEG2nB,OA5Df,SAAkBppB,GACd,IAAMmB,EAAUxB,KAKRmpB,EAAS9oB,EAAT8oB,KACFO,EAAW1M,GAAO,CAAC,OAAQ,QAASmM,IAAS,cACnD,OACI,kBAACF,GAAD,CAAY5hB,IAAK8hB,EAAKrnB,GAAIJ,UAAWF,EAAQ2nB,MACzC,yBAAKznB,UAAWF,EAAQ4nB,kBAhCf,SAACD,GAElB,OADiBnM,GAAO,CAAC,OAAQ,QAASmM,IAAS,eAE/C,IAAK,cACL,QACI,OACA,yBAAKxgB,MAAO,CAAClI,MAAO,GAAIE,OAAQ,KAC5B,kBAAC,GAAD,CAAYD,KAAM,GAAIvC,KAAMgrB,EAAKb,SA0BhCqB,CAAaR,GACd,yBAAKznB,UAAWF,EAAQ6nB,iBAEH,gBAAbK,EACI,kBAAC,GAAD,CACI9E,GAAIuE,EAAKvE,GACT0D,KAAMa,EAAKb,KACX/pB,OAAQ4qB,EAAK5qB,OACbqrB,UAAWT,EAAKS,YAIpB,qDAGR,0BAAMloB,UAAWF,EAAQ+nB,iBAAkB5gB,MAAO,CAAEvG,QAAS,OAAQe,WAAY,WCjH3E,SAAC0mB,GACvB,IAAMC,EAAOjD,KAAOgD,GAEpB,OAAIhT,KAAKkT,IAAIlD,OAASmD,KAAKF,IAAS,IACzB,WAGJA,EAAKG,UD2GSC,CAAWf,EAAKgB,cAGxBhB,EAAKtE,aAAe,GACjB,yBAAKnjB,UAAWF,EAAQ8nB,mBACxB,kBAAC,GAAD,CACIlT,kBAAmBA,GACnBjQ,MAAQgjB,EAAKtE,aAAesE,EAAKvE,GAAG5iB,WAehD,yBAAKN,UAAWF,EAAQgoB,mB1BjGG,SAAC3lB,EAAMumB,GAC1C,IAAIC,EAAexmB,EA0DnB,OAxDAwmB,EAAeC,IAAmBD,EAAc,WAAW,SAAC3S,EAAOqI,GAAR,OACvD,0BAAM1Y,IAAKqQ,EAAQqI,EAAGre,UAAU,qBAAhC,IACEgW,MAIN2S,EAAeC,IAAmBD,EAAc,YAAY,SAAC3S,EAAOqI,GAAR,OACxD,kBAAC,IAAD,CAAO1Y,IAAKqQ,EAAQqI,EAAGwK,MAAK,WAAM7S,EAAN,KAAgBhX,KAAM,QAGlD0pB,GACIA,EAAYpoB,OAAS,IACrBqoB,EAAeC,IACfD,EACApsB,GACA,SAACyZ,EAAOqI,GAoCA,OAnCwBqK,EAAY7mB,QAAO,SAACgd,GAAD,OAAcA,EAASze,KAAO4V,KAAO3R,KAAI,SAACwa,GAwBrF,OACI,0BAAMlZ,IAAKqQ,EAAQqI,GACf,2BACKQ,EAASvf,UACJ,mBACA9C,EAAmBqiB,YAW9C8J,E0BuCMG,CACGrB,EAAKzE,QACLyE,EAAKiB,gBE9FVK,OA1Cf,WAAiB,IAAD,EACoB5lB,mBAAS,IAD7B,mBACL6lB,EADK,KACKC,EADL,KAgBZ,OAdArlB,qBAAU,WAENG,KAAM,uCAAwC,CAC1CmlB,OAAQ,MACRjlB,QAAS,CACL,eAAgB,mBAChB,8BAA+B,IAC/B,cAAiB,yyBAEtBqe,MAAK,SAACpe,GACL+kB,EAAY/kB,EAAIC,KAAKA,WAE1B,IAGC,6BAiBQ6kB,EAAS3kB,KAAI,SAAC8kB,GAAD,OACT,kBAAC,GAAD,CAAUxjB,IAAKwjB,EAAK/oB,GAAIqnB,KAAM0B,S,yCCmBnCnY,mBAtDA,CACboY,cAAe,CACbzoB,SAAU,QACV+H,IAAK,EACL3H,MAAO,EACPD,KAAM,EACNuoB,OAAQ,EACRzoB,OAAQ,MAEVC,MAAO,CACLO,WAAY,OACZC,UAAW,kCACX+b,SAAU,SACVxc,OAAQ,OAyCGoQ,EArCf,SAAuBrS,GAAQ,IACpBmB,EAAyDnB,EAAzDmB,QAASqJ,EAAgDxK,EAAhDwK,KAAMC,EAA0CzK,EAA1CyK,QAASuY,EAAiChjB,EAAjCgjB,SAAUjY,EAAuB/K,EAAvB+K,SAAU+Q,EAAa9b,EAAb8b,UAcnD,OACI,oCACKtR,GACG,yBAAKnJ,UAAWF,EAAQspB,cAAexiB,QAASwC,IAEpD,kBAACkgB,GAAA,EAAD,CACIngB,KAAMA,EACNwY,SAAUA,EACV1a,MAAO,CAAErG,OAAQ,MACjB6Z,UAAWA,GAAwB,SACnChK,YAAU,IAET,gBAAG8Y,EAAH,EAAGA,gBAAH,OACG,kBAACC,GAAA,EAAD,iBAAUD,EAAV,CAA2BE,QAAS,MACpC,yBAAKzpB,UAAWF,EAAQe,OAAQ6I,WC1C9CpL,GAAYC,aAAW,SAACiC,GAAD,MAAY,CACrCkpB,iBAAkB,CACd/oB,SAAU,WACVS,WAAY,UACZgT,OAAQ,sBACR9S,aAAc,EACdsH,QAAS,GACTuL,aAAc,GACdzT,QAAS,OACTe,WAAY,SACZD,eAAgB,gBAChBgB,SAAU,QAEdmnB,oBAAqB,CACjBjpB,QAAS,OACTwT,cAAe,MACf1S,eAAgB,gBAChBkB,SAAU,GAEdknB,yBAA0B,CACtB9qB,WAAY,IAEZF,MAAO,UACP8D,SAAU,GAEdmnB,SAAU,CACNlpB,SAAU,WACVI,MAAO,EACPnC,MAAO,WAEXkrB,sBAAuB,CACnBnpB,SAAU,WACVmT,aAAc,oBACdiW,cAAe,EACfC,WAAY,GAEhBC,mBAAoB,CAChBrrB,MAAO,UAEP6X,aAAc,GACd2G,SAAU,SACV8M,aAAc,WACdtE,WAAY,UAEhBuE,sBAAuB,CACnBzpB,QAAS,OACTC,SAAU,WACVI,MAAO,GAEXqpB,2BAA4B,CACxBxrB,MAAO,UAEPE,WAAY,SAIdiS,GAAeC,YAAW,CAC5BvQ,KAAM,CACF8Q,cAAe,OAEf8Y,UAAW,GACXzhB,QAAS,UACT6N,aAAc,GACd9V,SAAU,WACV,UAAW,CACP0T,QAAS,SAGjBrM,MAAO,CACHpJ,MAAO,UACPM,SAAU,GACVsC,eAAgB,QAChB1C,WAAY,YAhBCkS,CAkBlBY,KAEG0Y,GAAe,CACjB,CACIlqB,GAAI,IACJ2F,MAAO,EACPtJ,KAAM,CACF8tB,aAAc,GACdC,sBAAuB,GACvBC,YAAa,GACbC,kBAAmB,GACnBC,iBAAkB,GAClBjuB,QAAS,CACLC,WAAY,QACZC,UAAW,sBAIvB,CACIwD,GAAI,IACJ2F,MAAO,EACPtJ,KAAM,CACF8tB,aAAc,GACdC,sBAAuB,GACvBC,YAAa,GACbC,kBAAmB,GACnBC,iBAAkB,GAClBjuB,QAAS,CACLC,WAAY,QACZC,UAAW,qBAIvB,CACIwD,GAAI,IACJ2F,MAAO,EACPtJ,KAAM,CACF8tB,aAAc,GACdC,sBAAuB,GACvBC,YAAa,GACbC,kBAAmB,GACnBC,iBAAkB,GAClBjuB,QAAS,CACLC,WAAY,cACZC,UAAW,eAIvB,CACIwD,GAAI,IACJ2F,MAAO,EACPtJ,KAAM,CACF8tB,aAAc,GACdC,sBAAuB,GACvBC,YAAa,GACbC,kBAAmB,GACnBC,iBAAkB,GAClBjuB,QAAS,CACLC,WAAY,mBACZC,UAAW,oBAiKZguB,OA3Jf,WAAyB,IA8CjBC,EA9CgB,OACd/qB,EAAUxB,KADI,EAEM6E,mBAAS,GAFf,mBAEbsB,EAFa,KAENqmB,EAFM,OAGY3nB,mBAAS,MAHrB,mBAGbwe,EAHa,KAGHC,EAHG,KASdmJ,EAAsB,SAACxmB,EAAGymB,GAgB5BF,EAASE,GACTpJ,EAAY,OAuBdiJ,EADY,IAAVpmB,EACY,UAGG,IAAVA,EACO,YAIA,WAGhB,IAAMwmB,EAAkC,IAAxBX,GAAahqB,OAEvB4qB,EAAa,SAACvsB,GAAD,OACjB,yBAAKqB,UAAWF,EAAQqqB,uBACtB,yBACEnqB,UAAWF,EAAQsqB,2BACnBnjB,MAAO,CAAEkP,YAAa,KAErBxX,EAAM8F,SAMb,OACI,yBAAKzE,UAAWF,EAAQ4pB,kBACpB,yBAAK1pB,UAAWF,EAAQ6pB,qBACpB,yBAAK3pB,UAAWF,EAAQ8pB,0BAAxB,iBAGA,kBAAC,GAAD,CACI5iB,aAAW,UACXmkB,YAAWxJ,EAAW,OAAS,KAC/ByJ,gBAAc,OACdxkB,QA/EU,SAACyB,GACvBuZ,EAAYD,EAAW,KAAOtZ,EAAM4b,iBAgFvB4G,EACD,kBAAC,KAAD,CAAU7qB,UAAWF,EAAQ+pB,YAEjC,kBAAC,GAAD,CACIzpB,GAAG,OACHuhB,SAAUA,EACVxY,KAAOwZ,QAAQhB,GACfvY,QAhEI,WAChBwY,EAAY,OAgEAyJ,WAAY,CACRpkB,MAAO,CACHlI,MAAO,OAIf,kBAAC2G,GAAA,EAAD,CACIC,IAAK,EAELiB,QAAS,SAACrC,GAAD,OAAOwmB,EAAoBxmB,EAAG,KAH3C,WAOA,kBAACmB,GAAA,EAAD,CACIC,IAAK,EAELiB,QAAS,SAACrC,GAAD,OAAOwmB,EAAoBxmB,EAAG,KAH3C,aAOA,kBAACmB,GAAA,EAAD,CACIC,IAAK,EAELiB,QAAS,SAACrC,GAAD,OAAOwmB,EAAoBxmB,EAAG,KAH3C,cASR,yBAAKvE,UAAU,YAAYiH,MAAO,CAAC/F,UAAW,SAC5C+pB,EAeM,yBAAKjrB,UAAU,4CACX,yBAAKA,UAAU,mDACX,0BAAM+G,KAAK,MAAMC,aAAW,iBAA5B,iBAIJ,yBAAKhH,UAAU,mDAAf,0BA1GU,WAE1B,IAAIsrB,EAAShB,GAAaiB,MAAK,SAACznB,EAAG6X,GAAJ,OAAU7X,EAAEiC,MAAQ4V,EAAE5V,SAErD,OADAulB,EAASA,EAAOhrB,OAAS,EAAIgrB,EAAO/rB,MAAM,EAAG,GAAK+rB,EAoF1CE,GAAwBnnB,KAAI,SAAConB,GAAD,OACxB,yBAAK9lB,IAAK8lB,EAASrrB,GAAIJ,UAAW0G,IAC9B,MACA,wBACA5G,EAAQgqB,wBACR,yBAAK9pB,UAAWF,EAAQmqB,mBAAoBhjB,MAAO,CAACtF,OAAQ,WACxDiF,QAAS,kBAAM,EAAK8kB,cAAcD,EAAShvB,QAC1CD,EAAmBivB,EAAShvB,OAEjC,kBAACyuB,EAAD,CAAYzmB,MAAOgnB,EAAS1lB,eCtR9CzH,GAAYC,aAAW,SAACiC,GAAD,MAAY,CACrCkpB,iBAAkB,CACd/oB,SAAU,WACVS,WAAY,UACZgT,OAAQ,sBACR9S,aAAc,EACdsH,QAAS,GACTuL,aAAc,GACdzT,QAAS,OACTe,WAAY,SACZD,eAAgB,gBAChBgB,SAAU,QAEdmnB,oBAAqB,CACjBjpB,QAAS,OACTwT,cAAe,MACf1S,eAAgB,gBAChBkB,SAAU,GAEdknB,yBAA0B,CACtB9qB,WAAY,IAEZF,MAAO,UACP8D,SAAU,GAEdonB,sBAAuB,CACnBnpB,SAAU,WACVmT,aAAc,oBACdiW,cAAe,EACfC,WAAY,GAEhBC,mBAAoB,CAChBrrB,MAAO,UAEP6X,aAAc,GACd2G,SAAU,SACV8M,aAAc,WACdtE,WAAY,UAEhBuE,sBAAuB,CACnBzpB,QAAS,OACTC,SAAU,WACVI,MAAO,GAEXqpB,2BAA4B,CACxBxrB,MAAO,UACPM,SAAU,GACVJ,WAAY,KAEhB6sB,iBAAkB,CACdjrB,QAAS,OACT8B,SAAU,QAEdopB,eAAgB,CACZ7sB,MAAO,GACPE,OAAQ,GACRkX,YAAa,OAMf0V,GAAY,CACd,CACI9lB,MAAO,EACP3F,GAAI,iBAER,CACI2F,MAAO,EACP3F,GAAI,YAER,CACI2F,MAAO,EACP3F,GAAI,WAER,CACI2F,MAAO,EACP3F,GAAI,WA4DG0rB,OAxDf,WACI,IAAMhsB,EAAUxB,KAEVytB,EAAY,SAACptB,GACf,IAAMqtB,EAAWhvB,GAAsB2B,EAAM7B,MACvCmvB,EAAW7uB,GAAiB4uB,GAAU,GAC5C,OACE,yBAAKhsB,UAAWF,EAAQ6rB,kBACtB,yBAAKzrB,IAAK+rB,EAAU7Y,IAAK4Y,EAASjvB,YAAaiD,UAAWF,EAAQ8rB,iBAClE,yBAAK5rB,UAAWF,EAAQmqB,oBAAqB+B,EAASjvB,eAK9D,OACI,yBAAKiD,UAAWF,EAAQ4pB,kBACpB,yBAAK1pB,UAAWF,EAAQ6pB,qBACpB,yBAAK3pB,UAAWF,EAAQ8pB,0BAAxB,eAIJ,yBAAK5pB,UAAU,YAAYiH,MAAO,CAAC/F,UAAW,SAC1C,6BAES2qB,IAAaA,GAAUvrB,OAAS,EAC7BurB,GAAUxnB,KAAI,SAAClH,GAAD,OACV,yBAAKwI,IAAKxI,EAAMiD,GAAIJ,UAAW0G,IAC3B,MACA,wBACA5G,EAAQgqB,wBACJ,kBAACiC,EAAD,CAAWjvB,KAAMK,EAAMiD,KACvB,yBAAKJ,UAAW0G,IAAW5G,EAAQqqB,sBAAuBrqB,EAAQsqB,6BAC7DjtB,EAAM4I,WAMvB,yBAAK/F,UAAU,4CACX,yBAAKA,UAAU,mDACX,0BAAM+G,KAAK,MAAMC,aAAW,iBAA5B,iBAIJ,yBAAKhH,UAAU,mDAAf,2BCvH1B1B,GAAYC,aAAW,SAACiC,GAAD,MAAY,CACrC0rB,kBAAmB,CACfvrB,SAAU,QACV+H,IAAK,GACL3H,MAAO,EACPE,UAAW,OACXD,UAAW,0BAsCJmrB,OAlCf,WACI,IAAMrsB,EAAUxB,KADH,EAEmC6E,mBAAS,GAF5C,mBAENipB,EAFM,KAEYC,EAFZ,KAIPC,EAAoB,SAACvkB,GACvBskB,EAAoBtkB,IAKxB,OACI,kBAACwkB,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACC,EAAA,EAAD,CAAKzsB,UAAU,2CACX,kBAAC0sB,EAAA,EAAD,CAAK3c,GAAI,EAAGF,GAAI,EAAGD,GAAI,EAAG3I,MAAO,CAAC2B,QAAS,eACvC,kBAAC,GAAD,CACI6a,iBAAkB6I,IAEtB,kBAAC,GAAD,OAEJ,kBAACI,EAAA,EAAD,CAAK3c,GAAI,EAAGF,GAAI,EAAGD,GAAI,EAAG3I,MAAO,CAAC2B,QAAS,cAAe5I,UAAWF,EAAQosB,mBACzE,kBAACS,GAAD,CACIhM,WAAYyL,EACZlH,eAAgBoH,IAEpB,kBAAC,GAAD,MACmB,kBAAC,GAAD,UC5BxBM,OAbf,WACE,OACE,oCAEI,0BAAM5sB,UAAU,gBACZ,iCACI,kBAAC,GAAD,UCCI2iB,QACW,cAA7BX,OAAOC,SAAS4K,UAEe,UAA7B7K,OAAOC,SAAS4K,UAEhB7K,OAAOC,SAAS4K,SAAS7W,MACvB,2D,6CCJAxV,GAAQssB,KAAe,CAC3B5qB,QAAS,CACPyH,QAAS,CACPvH,KAAM,WAERwH,UAAW,CACTxH,KAAM,WAERD,KAAM,CACJC,KAAM,QAGVzD,MAAO,CACLouB,eAAgB,CACdC,mBAAmB,GAErBC,cAAe,CACbjN,eAAe,IAGnBkN,UAAW,CACTC,eAAgB,CACd,UAAW,CACTtY,OAAQ,CACN,UAAW,CACTR,QAAS,oBAGb+Y,KAAM,CACJvuB,gBAAiB,aAIvBwuB,cAAe,CACb5sB,KAAM,CACJ,UAAW,CACT4T,QAAS,qBAIfiZ,aAAc,CAEZ7sB,KAAM,CAEJ7B,MAAO,oBAGX2uB,SAAU,CACR9sB,KAAM,CACJvB,SAAU,QAEZuI,UAAW,CACT,UAAW,CACTqM,aAAc,oBACdrD,WAAY,gDAEd,WAAY,CACVqD,aAAc,gCAEhB,iBAAkB,CAChBA,aAAc,6CAIpB0Z,UAAW,CACT/sB,KAAM,CACJY,UAAW,OACX,UAAW,CACTgT,QAAS,SAGbjD,iBAAkB,CAChB/P,UAAW,OACXzC,MAAO,OACP0hB,SAAU,GACVzhB,gBAAiB,UACjB,UAAW,CACTD,MAAO,OACPC,gBAAiB,YAGrByS,mBAAoB,CAClBjQ,UAAW,OACXzC,MAAO,OACP,UAAW,CACTA,MAAO,UAIbmuB,eAAgB,CACdtsB,KAAM,CACJ7B,MAAO,OACPM,SAAU,GACVJ,WAAY,OAIlBoQ,WAAY,CACVC,gBAvGU,IAwGVC,kBAvGY,IAwGZE,mBAvGa,IAwGbC,eAvGS,IAwGTrQ,SAAU,GACVuuB,aAAc,GACdje,WAAY,CAAC,gBAAiB,cAAcC,KAAK,QAIrDie,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,KAAD,CAAkBptB,MAAOA,IACvB,kBAACqtB,GAAA,EAAD,MACA,kBAAC,GAAD,QAGJC,SAASC,eAAe,SDEpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5L,MAAK,SAAA6L,GACJA,EAAaC,gBAEdC,OAAM,SAAAhc,GACL+Q,QAAQ/Q,MAAMA,EAAM2Q,c","file":"static/js/main.c00a2e2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/closer_badge.543edc90.png\";","module.exports = __webpack_public_path__ + \"static/media/creativity_badge.51da00a7.png\";","module.exports = __webpack_public_path__ + \"static/media/culture_badge.d4ee91eb.png\";","module.exports = __webpack_public_path__ + \"static/media/detail_master_badge.299614d1.png\";","module.exports = __webpack_public_path__ + \"static/media/goal_smasher_badge.2ccd5746.png\";","module.exports = __webpack_public_path__ + \"static/media/idea_maker_badge.73420e58.png\";","module.exports = __webpack_public_path__ + \"static/media/initiative_badge.25ea3150.png\";","module.exports = __webpack_public_path__ + \"static/media/innovator_badge.f2cad379.png\";","module.exports = __webpack_public_path__ + \"static/media/launcher_badge.ca08a56a.png\";","module.exports = __webpack_public_path__ + \"static/media/leadership_badge.25ff00e8.png\";","module.exports = __webpack_public_path__ + \"static/media/lifesaver_badge.98e7f9ad.png\";","module.exports = __webpack_public_path__ + \"static/media/motivator_badge.19706b25.png\";","module.exports = __webpack_public_path__ + \"static/media/navigator_badge.739e52a5.png\";","module.exports = __webpack_public_path__ + \"static/media/obstacle_badge.18d58301.png\";","module.exports = __webpack_public_path__ + \"static/media/problem_solver_badge.4b93eeb6.png\";","module.exports = __webpack_public_path__ + \"static/media/teamwork_badge.1f291e2c.png\";","module.exports = __webpack_public_path__ + \"static/media/top_earner_badge.3a628322.png\";","import React from 'react';\r\nimport reactStringReplace from 'react-string-replace';\r\nimport { Emoji } from 'emoji-mart';\r\n// import _ from 'lodash';\r\n\r\nexport const CASHOUT_TITLE_TEXT_MAX_LENGTH = 35;\r\nexport const MENTION_REGEX = /@__(.*?)__@/;\r\n\r\nexport const getProfileFullName = (user) => {\r\n    if (user && user.profile) {\r\n        if (user.profile.first_name !== null && user.profile.last_name === null) {\r\n            return `${user.profile.first_name}`;\r\n        }\r\n\r\n        if (user.profile.last_name !== null && user.profile.first_name === null) {\r\n            return `${user.profile.last_name}`;\r\n        }\r\n\r\n        if (user.profile.last_name && user.profile.first_name ) {\r\n            return `${user.profile.first_name} ${user.profile.last_name}`;\r\n        }\r\n\r\n    }\r\n    return '';\r\n};\r\n\r\nexport const getFirstLetterOfName = (user) => {\r\n  if (user && user.profile && user.profile.first_name) {\r\n    return `${user.profile.first_name.slice(0, 1).toUpperCase()}`;\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const titleize = (input) => {\r\n  if (typeof input !== 'string') {\r\n\t\tthrow new TypeError('Expected a string');\r\n\t}\r\n\r\n\treturn input.toLowerCase().replace(/(?:^|\\s|-)\\S/g, x => x.toUpperCase());\r\n}\r\n\r\nexport const getPostFormattedMessage = (text, taggedUsers) => {\r\n    let replacedText = text;\r\n    \r\n    replacedText = reactStringReplace(replacedText, /#(\\w+)/g, (match, i) => (\r\n        <span key={match + i} className=\"feed-card-hashtag\">\r\n        #{match}\r\n        </span>\r\n    ));\r\n\r\n    replacedText = reactStringReplace(replacedText, /:(.*?):/g, (match, i) => (\r\n        <Emoji key={match + i} emoji={`:${match}:`} size={16} />\r\n    ));\r\n  \r\n    if (taggedUsers) {\r\n        if (taggedUsers.length > 0) {\r\n            replacedText = reactStringReplace(\r\n            replacedText,\r\n            MENTION_REGEX,\r\n            (match, i) => {\r\n                const filteredEmployeeArr = taggedUsers.filter((employee) => employee.id === match).map((employee) => {\r\n                // if (onUserClicked) {\r\n                //   return (\r\n                //     <span\r\n                //       key={match + i}\r\n                //       className={\r\n                //         employee.isDeleted\r\n                //           ? 'noEvent deactivated_user'\r\n                //           : 'feed-card-mention'\r\n                //       }\r\n                //       onClick={\r\n                //         !employee.isDeleted\r\n                //           ? () => {\r\n                //               onUserClicked(employee);\r\n                //             }\r\n                //           : null\r\n                //       }\r\n                //     >\r\n                //       {employee.isDeleted\r\n                //         ? 'Deactivated User'\r\n                //         : getProfileFullName(employee)}\r\n                //     </span>\r\n                //   );\r\n                // }\r\n                    return (\r\n                        <span key={match + i}>\r\n                            <b>\r\n                                {employee.isDeleted\r\n                                    ? 'Deactivated User'\r\n                                    : getProfileFullName(employee)\r\n                                }\r\n                            </b>\r\n                        </span>\r\n                    );\r\n                });\r\n                    return filteredEmployeeArr;\r\n                },\r\n            );\r\n        }\r\n    }\r\n    return replacedText;\r\n};","import closer_badge from '../images/badges/closer_badge.png';\r\n// import closer_badge_thumb from '../img/badges/thumb/closer_badge_thumb.png';\r\nimport creativity_badge from '../images/badges/creativity_badge.png';\r\n// import creativity_badge_thumb from '../img/badges/thumb/creativity_badge_thumb.png';\r\nimport culture_badge from '../images/badges/culture_badge.png';\r\n// import culture_badge_thumb from '../img/badges/thumb/culture_badge_thumb.png';\r\nimport detail_master_badge from '../images/badges/detail_master_badge.png';\r\n// import detail_master_badge_thumb from '../img/badges/thumb/detail_master_badge_thumb.png';\r\nimport goal_smasher_badge from '../images/badges/goal_smasher_badge.png';\r\n// import goal_smasher_badge_thumb from '../img/badges/thumb/goal_smasher_badge_thumb.png';\r\nimport idea_maker_badge from '../images/badges/idea_maker_badge.png';\r\n// import idea_maker_badge_thumb from '../img/badges/thumb/idea_maker_badge_thumb.png';\r\nimport initiative_badge from '../images/badges/initiative_badge.png';\r\n// import initiative_badge_thumb from '../img/badges/thumb/initiative_badge_thumb.png';\r\nimport innovator_badge from '../images/badges/innovator_badge.png';\r\n// import innovator_badge_thumb from '../img/badges/thumb/innovator_badge_thumb.png';\r\nimport launcher_badge from '../images/badges/launcher_badge.png';\r\n// import launcher_badge_thumb from '../img/badges/thumb/launcher_badge_thumb.png';\r\nimport leadership_badge from '../images/badges/leadership_badge.png';\r\n// import leadership_badge_thumb from '../images/badges/thumb/leadership_badge_thumb.png';\r\nimport lifesaver_badge from '../images/badges/lifesaver_badge.png';\r\n// import lifesaver_badge_thumb from '../images/badges/thumb/lifesaver_badge_thumb.png';\r\nimport motivator_badge from '../images/badges/motivator_badge.png';\r\n// import motivator_badge_thumb from '../images/badges/thumb/motivator_badge_thumb.png';\r\nimport navigator_badge from '../images/badges/navigator_badge.png';\r\n// import navigator_badge_thumb from '../images/badges/thumb/navigator_badge_thumb.png';\r\nimport obstacle_badge from '../images/badges/obstacle_badge.png';\r\n// import obstacle_badge_thumb from '../images/badges/thumb/obstacle_badge_thumb.png';\r\nimport problem_solver_badge from '../images/badges/problem_solver_badge.png';\r\n// import problem_solver_badge_thumb from '../images/badges/thumb/problem_solver_badge_thumb.png';\r\nimport teamwork_badge from '../images/badges/teamwork_badge.png';\r\n// import teamwork_badge_thumb from '../images/badges/thumb/teamwork_badge_thumb.png';\r\n import top_earner_badge from '../images/badges/top_earner_badge.png';\r\n// import top_earner_badge_thumb from '../images/badges/thumb/top_earner_badge_thumb.png';\r\n\r\nexport const badges = [\r\n  {\r\n    name: 'closer',\r\n    displayName: 'Closer',\r\n  },\r\n  {\r\n    name: 'creativity',\r\n    displayName: 'Creativity',\r\n  },\r\n  {\r\n    name: 'culture',\r\n    displayName: 'Culture Champ',\r\n  },\r\n  {\r\n    name: 'detail_master',\r\n    displayName: 'Detail Master',\r\n  },\r\n  {\r\n    name: 'goal_smasher',\r\n    displayName: 'Goal Smasher',\r\n  },\r\n  {\r\n    name: 'idea_maker',\r\n    displayName: 'Idea Maker',\r\n  },\r\n  {\r\n    name: 'initiative',\r\n    displayName: 'Initiative',\r\n  },\r\n  {\r\n    name: 'innovator',\r\n    displayName: 'Innovator',\r\n  },\r\n  {\r\n    name: 'launcher',\r\n    displayName: 'Launcher',\r\n  },\r\n  {\r\n    name: 'leadership',\r\n    displayName: 'Leadership',\r\n  },\r\n  {\r\n    name: 'life_saver',\r\n    displayName: 'Life Saver',\r\n  },\r\n  {\r\n    name: 'motivator',\r\n    displayName: 'Motivator',\r\n  },\r\n  {\r\n    name: 'navigator',\r\n    displayName: 'Navigator',\r\n  },\r\n  {\r\n    name: 'obstacle_eliminator',\r\n    displayName: 'Obstacle Eliminator',\r\n  },\r\n  {\r\n    name: 'problem_solver',\r\n    displayName: 'Problem Solver',\r\n  },\r\n  {\r\n    name: 'teamwork',\r\n    displayName: 'Teamwork',\r\n  },\r\n  {\r\n    name: 'top_earner',\r\n    displayName: 'Top Earner',\r\n  },\r\n];\r\n\r\nexport const getBadgeObjectForName = (badgeName) => badges.find(badge => badge.name === badgeName);\r\n\r\nexport const getImageForBadge = (badge, thumb = false) => {\r\n  switch (badge.name) {\r\n    case 'creativity':\r\n      return creativity_badge;\r\n    case 'culture':\r\n      return culture_badge;\r\n    case 'detail_master':\r\n      return detail_master_badge;\r\n    case 'goal_smasher':\r\n      return goal_smasher_badge;\r\n    case 'idea_maker':\r\n      return idea_maker_badge;\r\n    case 'initiative':\r\n      return initiative_badge;\r\n    case 'innovator':\r\n      return innovator_badge;\r\n    case 'launcher':\r\n      return launcher_badge;\r\n    case 'leadership':\r\n      return leadership_badge;\r\n    case 'life_saver':\r\n      return lifesaver_badge;\r\n    case 'motivator':\r\n      return motivator_badge;\r\n    case 'navigator':\r\n      return navigator_badge;\r\n    case 'obstacle_eliminator':\r\n      return obstacle_badge;\r\n    case 'problem_solver':\r\n      return problem_solver_badge;\r\n    case 'teamwork':\r\n      return teamwork_badge;\r\n    case 'top_earner':\r\n      return top_earner_badge;\r\n    case 'closer':\r\n      return closer_badge;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getFirstLetterOfName } from './text';\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        margin: 10,\r\n    },\r\n\r\n    avatarColor: (props) => ({\r\n    color: props.color,\r\n    backgroundColor: props.backgroundColor,\r\n    fontWeight: '600',\r\n    width: props.size ? props.size : 40,\r\n    height: props.size ? props.size : 40,\r\n    fontSize: props.fontSize,\r\n    }),\r\n\r\n    avatarImage: (props) => ({\r\n    width: props.size ? props.size : 40,\r\n    height: props.size ? props.size : 40,\r\n    }),\r\n})\r\n\r\nconst UserNameAvatar = (props) => {\r\n    const { user, size } = props;\r\n    const firstLetter = user.isDeleted ? 'D' : getFirstLetterOfName(user);\r\n    const colorProp = user.isDeleted ? { bg: '#FFF0A2', color: '#FFE145' } : getColor(user);\r\n    let fontSize = 18;\r\n\r\n    if (size === 30 || size === 32) {\r\n      fontSize = 14;\r\n    } else if (size === 88) {\r\n      fontSize = 36;\r\n    }\r\n\r\n    const styleProps = {\r\n      backgroundColor: colorProp.bg,\r\n      color: colorProp.color,\r\n      size,\r\n      fontSize,\r\n    };\r\n\r\n    const classes = useStyles(styleProps);\r\n  \r\n    return <Avatar className={classes.avatarColor}>{firstLetter}</Avatar>;\r\n};\r\n\r\nexport const ProfilePic = (props) =>  {\r\n    const { user, size } = props;\r\n    const classes = useStyles({ size });\r\n    // if (user &&\r\n    //     user.profile &&\r\n    //     user.profile.image &&\r\n    //     user.profile.image.original.relativeUrl) {\r\n    //         return (\r\n    //             <Avatar src={user.profile.image.original.relativeUrl} className={classes.avatarImage} />\r\n    //         )\r\n    // }\r\n    \r\n    if (user &&\r\n        user.profile &&\r\n        user.profile.avatar) {\r\n            return (\r\n                <Avatar src={user.profile.avatar} className={classes.avatarImage} />\r\n            )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <UserNameAvatar user={user} size={size} />\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport const getColor = (user) => {\r\n    let lastChar = 'p';\r\n    if (user && user.id) {\r\n        lastChar = user.id.substr(user.id.length - 1);\r\n    }\r\n    const charCode = lastChar.charCodeAt(0);\r\n    let bg = '#FFBBA2';\r\n    let color = '#FF7745';\r\n    switch (charCode) {\r\n        case 97:\r\n        case 113:\r\n        case 103:\r\n        case 119:\r\n        case 49:\r\n        case 111:\r\n        bg = '#FFBBA2';\r\n        color = '#FF7745';\r\n        break;\r\n        case 98:\r\n        case 114:\r\n        case 104:\r\n        case 120:\r\n        case 50:\r\n        case 57:\r\n        bg = '#E6D3FD';\r\n        color = '#CDA7FC';\r\n        break;\r\n        case 99:\r\n        case 115:\r\n        case 106:\r\n        case 122:\r\n        case 52:\r\n        case 112:\r\n        bg = '#A6F8AD';\r\n        color = '#4DF15A';\r\n        break;\r\n        case 100:\r\n        case 116:\r\n        case 105:\r\n        case 121:\r\n        case 51:\r\n        case 108:\r\n        bg = '#FFF0A2';\r\n        color = '#FFE145';\r\n        break;\r\n        case 101:\r\n        case 117:\r\n        case 107:\r\n        case 53:\r\n        case 110:\r\n        case 56:\r\n        case 54:\r\n        bg = '#FFA3C7';\r\n        color = '#FF478F';\r\n        break;\r\n        case 102:\r\n        case 118:\r\n        case 48:\r\n        case 109:\r\n        case 55:\r\n        bg = '#A2F5FF';\r\n        color = '#45EBFF';\r\n        break;\r\n        default:\r\n        bg = '#A2F5FF';\r\n        color = '#45EBFF';\r\n        break;\r\n    }\r\n    return {\r\n        bg,\r\n        color,\r\n    };\r\n}","import React, { useState, useEffect} from 'react';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport { getProfileFullName } from '../../assets/Util/text';\r\nimport { ProfilePic } from '../../assets/Util/profilePic';\r\nimport keycode from 'keycode';\r\nimport Downshift from 'downshift';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        position: 'relative',\r\n        zIndex: 3\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        left: 0,\r\n        right: 0,\r\n        maxHeight: '260px',\r\n        overflowY: 'auto',\r\n        marginTop: 45,\r\n        marginLeft: 48,\r\n        background: '#FFFFFF',\r\n        boxShadow:\r\n          '0px 2px 2px rgba(0, 0, 0, 0.24), 0px 0px 2px rgba(0, 0, 0, 0.12)',\r\n        borderRadius: 2,\r\n    },\r\n    iconWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '50px',\r\n        height: '31px'\r\n    },\r\n    iconStyle: {\r\n        fontSize: '16px',\r\n        cursor: 'pointer'\r\n    },\r\n    // iconActiveStyle: {\r\n    //     color: 'red',\r\n    //     filter: 'grayscale(0)'\r\n    // },\r\n    iconInactiveStyle: {\r\n        color: '#9e9e9e',\r\n        filter: 'grayscale(1)'\r\n    },\r\n    chip: {\r\n        margin: '4px 2px'\r\n    },\r\n    chipAvatar: {\r\n        height: '22px !important',\r\n        width: '22px !important',\r\n        marginLeft: 5,\r\n        // marginTop: 5,\r\n    },\r\n    chipRoot: {\r\n        backgroundColor: '#F6F6F6',\r\n    },\r\n    chipLabel: {\r\n        color: theme.palette.text.main,\r\n        fontWeight: 600,\r\n        fontSize: 12,\r\n        paddingLeft: 8,\r\n    },\r\n    chipDeleteIcon: {\r\n        color: '#E2E2E2',\r\n    },\r\n    inputRoot: {\r\n        flexWrap: 'wrap',\r\n    },\r\n    inputStyle: {\r\n        width: 'auto !important',\r\n        flexGrow: 1,\r\n        // marginTop : 12,\r\n        // marginBottom : 7,\r\n    },\r\n    // underline: {\r\n    //     '&:after': {\r\n    //       borderBottom: `2px solid ${theme.palette.primary.main}`,\r\n    //       transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\r\n    //     },\r\n    //     '&:before': {\r\n    //       borderBottom: '1px solid rgb(224, 224, 224)',\r\n    //     },\r\n    //     // '&:hover:not($disabled):after': {\r\n    //     //   borderBottom: '1px solid rgb(224, 224, 224) !important',\r\n    //     // },\r\n    //     '&:hover:before': {\r\n    //       // '&:hover:not($disabled):before':\r\n    //       borderBottom: '1px solid rgb(224, 224, 224) !important',\r\n    //     },\r\n    // },\r\n    menuSelected: {\r\n        backgroundColor: '#F8F8F8 !important',\r\n    },\r\n    autocomplete_user_fullname: {\r\n        paddingLeft: 8,\r\n        fontSize: 12,\r\n        color: '#2C2C2C',\r\n        fontWeight: 600,\r\n        letterSpacing: 0.2\r\n    },\r\n    autocomplete_user_username_focus: {\r\n        fontSize: 15,\r\n        color: '#e2e2e2'\r\n    },\r\n    autocomplete_user_username: {\r\n        fontSize: 15,\r\n        color: '#e2e2e2'\r\n    }\r\n}))\r\n\r\nfunction DSTypeAhead(props) {//props: handleUsers, onFocus, onBlur\r\n    const { handleUsers, onFocus } = props;\r\n    const [ inputValue, setInputValue ] = useState('');\r\n    const [ selectedItem, setSelectedItem ] = useState([]);\r\n    const [ userInputIconOn, setUserInputIconOn ] = useState(false);\r\n    const [ employees, setEmployees] = useState();\r\n\r\n    useEffect(() => {\r\n        updateUsersToParent(selectedItem);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedItem])\r\n\r\n    useEffect(() => {\r\n        async function fetchEmployees() {\r\n            const res = await axios.get('https://camon.twgroup.vn/api/v1/home', {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Authorization': 'eyJhbGciOiJSUzI1NiJ9.eyJpZCI6IjE0NWRjNGI3LWQyODEtNDIzNi1hZjYwLWM2MmI3NDk3YmVjYSIsImVtYWlsIjoicGhhdGx0QHR3Z3JvdXAudm4ifQ.Ft8bNFXhOSbFneB_A4_zqzM3QMpzOEpHUo-OuAOJAC-nDqb3M1S0mGtqcMhadbdP8LP0fws9ecK3FNgvazKf1btp6Ojg5hCxORy2Wc8LAohb_cl4T3_DKy44XvYkVKM8zX61WLud2yUcTrpe46cbX80n6ItahSNvvQNtR0j_x-BzeaSr0MX13hrftKqGdFZGG6NKOS9THEHzNLXhkcG3m4vxXv3rNPyeDMQIimw3EF2FNjBNhZJff2Dj0_QtullEm26hf4NrS5ZjZBPJJo6SgSH7-M4hrOtPTAhLB0_QsBJm6W4Oq9OYd-cxe470WpeSz1TIPuVLJV9TEKW95lcDK-SXBH781xwxvr3WLpbK7qe-RdGnEOl1ymnoJAH7TpIWCAsiVUOmob3xjUDrvuylLACQ43k5sfh4au9vch9-AIR74US0uIdJZGfnPeUGc4QMz8rrlztnRhdvLBwErWkqg-lebjICvWg-5GQm6FPmpalNxTBB1QX20B-3Hg1hr8LqiptVWhn6156DSRwxjLCgyaQrsq707fseYZbKDRi35VVus9dMhCTVlQ11SH2TLOpd8n1EeHsL3ESObtdXzNFrVKgKAVnQawWnYM1ZEim4yzaVBbHgKqB2QKCupdj-U6pMH0oVA8t1se0RuRMageF4_TRlAnOC1Oq2z0Lhmv_VAlI'\r\n                }\r\n            })\r\n            setEmployees(res.data.data.employees);\r\n            \r\n        }\r\n        fetchEmployees()\r\n    }, [])\r\n\r\n    const classes = useStyles();\r\n    \r\n    const updateUsersToParent = (selectedItem) => {\r\n        handleUsers(\r\n            selectedItem.map((id) => employees.find((user) => user.id === id)),\r\n          );\r\n    }\r\n\r\n    const renderInput = (inputProps) => {\r\n        const { InputProps, classes, ref, ...other } = inputProps;\r\n        return (\r\n          <TextField\r\n            autoComplete=\"off\"\r\n            InputProps={{\r\n                inputRef: ref,\r\n                classes: {\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputStyle,\r\n                    underline: classes.underline,\r\n                },\r\n                ...InputProps,\r\n                // inputProps: {\r\n                //   className: classes.inputStyle\r\n                // },\r\n            }}\r\n            {...other}\r\n          />\r\n        );\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        if (inputValue && inputValue.length > 3) {\r\n          //this.debounceGetHomeInfo(); lodash\r\n        }\r\n        setInputValue(inputValue)\r\n    };\r\n\r\n    const handleChange = (item) => {\r\n        if (!item) {\r\n          setInputValue('');\r\n          return;\r\n        }\r\n    \r\n        if (selectedItem.indexOf(item) === -1) {//not found\r\n            let postSelectedItem = [...selectedItem, item];\r\n            setInputValue('');\r\n            setSelectedItem(postSelectedItem);\r\n        }\r\n    };\r\n\r\n    const handleDelete = (item) => () => {\r\n        const postSelectedItem = [...selectedItem];\r\n        postSelectedItem.splice(selectedItem.indexOf(item), 1);\r\n        setSelectedItem(postSelectedItem);\r\n        handleUserInputIconStyleOff(selectedItem);\r\n    };\r\n\r\n    const onUserInputFocus = () => {\r\n        setUserInputIconOn(true);\r\n        onFocus();\r\n    }\r\n\r\n    const onUserInputBlur = () => {\r\n        handleUserInputIconStyleOff(selectedItem);\r\n    };\r\n\r\n    const handleUserInputIconStyleOff = (selectedUsers) => {\r\n        if( selectedUsers.length === 0 ) {\r\n            setUserInputIconOn(false);\r\n        }\r\n    }\r\n\r\n    const handleKeyDown = (e) => {\r\n        if ( selectedItem.length && !inputValue.length && keycode(e) === 'backspace' ) {\r\n            const postSelectedItem = selectedItem.slice(0, selectedItem.length - 1);\r\n            setSelectedItem(postSelectedItem);\r\n        }\r\n    };\r\n\r\n    const renderOptions = (inputValue, getItemProps, highlightedIndex) => {\r\n        // const { selectedItem } = this.state;\r\n        const users = findUsers(inputValue);\r\n        // const { classes } = this.props;\r\n\r\n        return users.map(\r\n            (user, index) => renderOption({\r\n                user,\r\n                index,\r\n                itemProps: getItemProps({item: user.id}),\r\n                highlightedIndex,\r\n                disabled: false\r\n            })\r\n        )\r\n    }\r\n\r\n    const renderOption = ({ user, index, itemProps, highlightedIndex, disabled }) => {\r\n        const isHighlighted = highlightedIndex === index;\r\n        return (\r\n            <MenuItem\r\n                {...itemProps}\r\n                disabled={disabled}\r\n                key={user.id}\r\n                selected={isHighlighted}\r\n                classes={\r\n                    { selected: classes.menuSelected}\r\n                }\r\n            >\r\n                <ProfilePic size={30} user={user} />\r\n                <span className={classes.autocomplete_user_fullname}>\r\n                    {getProfileFullName(user)}\r\n                </span>\r\n                <span className={isHighlighted ? classes.autocomplete_user_username_focus\r\n                    : classes.autocomplete_user_username }\r\n                >\r\n                    {/* { || `@${user.profile.first_name}`} */}\r\n                    { user.profile.user_name ? `@${user.profile.user_name}` : `@${user.profile.first_name}`}\r\n                </span>\r\n            </MenuItem>\r\n        )\r\n    }\r\n\r\n    const findUsers = (inputValue) => {\r\n        let count = 0;\r\n        return employees.filter((user) => {\r\n            const username = user.profile.user_name || '';\r\n            let keep = (\r\n                !inputValue ||\r\n                user.profile.first_name.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1 ||\r\n                user.profile.last_name.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1 ||\r\n                username.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1\r\n            ) && (count < 20);\r\n            if (selectedItem.indexOf(user.id) !== -1) {\r\n                keep = false;\r\n            }\r\n            if (keep) {\r\n                count += 1;\r\n            }\r\n            return keep;\r\n        })\r\n    }\r\n    return (\r\n        <Downshift\r\n            inputValue={inputValue}\r\n            onChange={handleChange}\r\n            selectedItem={selectedItem}\r\n        >\r\n            {\r\n                (\r\n                    {\r\n                        getInputProps,\r\n                        getItemProps,\r\n                        isOpen,\r\n                        inputValue: inputValue2,\r\n                        selectedItem: selectedItem2,\r\n                        highlightedIndex,\r\n                        openMenu,\r\n                        closeMenu\r\n                    }\r\n                ) => (\r\n                    <div className={classes.root}>\r\n                        <div className={classes.iconWrapper}>\r\n                            <div className={classNames(\r\n                                classes.iconStyle,\r\n                                userInputIconOn ? classes.iconActiveStyle : classes.iconInactiveStyle\r\n                            )}\r\n                                onClick={() => {\r\n                                    this.inputRef.focus();\r\n                                }}\r\n                            >\r\n                                <span role=\"img\" aria-label=\"icon\">\r\n                                    😎\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ width: '100%' }}>\r\n                            {\r\n                                renderInput({\r\n                                    fullWidth: true,\r\n                                    classes,\r\n                                    ref: (inputRef) => {\r\n                                        return inputRef\r\n                                    },\r\n                                    InputProps: getInputProps({\r\n                                        startAdornment: selectedItem.map((item) => { //selectedItem state\r\n                                            const user = employees.find((u) => u.id === item); //employee props\r\n                                            if (user) {\r\n                                                return (\r\n                                                    <Chip\r\n                                                        avatar = {\r\n                                                            <ProfilePic size={32} user={user} />\r\n                                                        }\r\n                                                        key={item}\r\n                                                        tabIndex={-1}\r\n                                                        label={getProfileFullName(user)}\r\n                                                        className={classes.chip}\r\n                                                        classes={{\r\n                                                            root: classes.chipRoot,\r\n                                                            avatar: classes.chipAvatar,\r\n                                                            label: classes.chipLabel,\r\n                                                            deleteIcon: classes.chipDeleteIcon,\r\n                                                        }}\r\n                                                        onDelete={handleDelete(item)}\r\n                                                    />\r\n                                                )\r\n                                            }\r\n                                            return null;\r\n                                        }),\r\n                                        onChange: handleInputChange,\r\n                                        onKeyDown: handleKeyDown,\r\n                                        placeholder: 'Người được nhận',\r\n                                        id: 'integration-downshift-multiple',\r\n                                        onFocus: (event) => {\r\n                                            openMenu();\r\n                                            onUserInputFocus();\r\n                                        },\r\n                                        onBlur: (event) => {\r\n                                            closeMenu();\r\n                                            onUserInputBlur();\r\n                                        }\r\n                                    })\r\n                                })\r\n                            }\r\n                        </div>\r\n                        {\r\n                            isOpen ? (\r\n                                <Paper className={classes.paper} square>\r\n                                    {\r\n                                        renderOptions(\r\n                                            inputValue2,\r\n                                            getItemProps,\r\n                                            highlightedIndex\r\n                                        )\r\n                                    }\r\n                                </Paper>\r\n                            ) : null\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        </Downshift>\r\n\r\n    )\r\n}\r\n\r\nexport default DSTypeAhead","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        position: 'absolute',\r\n        width: 520,\r\n        padding: 54,\r\n        [theme.breakpoints.down('xs')]: {\r\n          width: 350,\r\n          padding: '20px 22px',\r\n        },\r\n        background: '#FFFFFF',\r\n        border: '1px solid #F6F6F6',\r\n        boxSizing: 'border-box',\r\n        borderRadius: 10,\r\n        outline: 'none',\r\n    },\r\n}))\r\n\r\nexport default function StyledModal(props) {\r\n    const classes = useStyles();\r\n  \r\n    return (\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={props.open}\r\n        onClose={props.handleClose}\r\n        BackdropProps={{\r\n          style: {\r\n            background: '#000000',\r\n            mixBlendMode: 'normal',\r\n            opacity: 0.8,\r\n          },\r\n        }}\r\n      >\r\n        <div className={props.customClass ? props.customClass : classes.paper}>\r\n          {props.children}\r\n        </div>\r\n      </Modal>\r\n    );\r\n}  \r\n\r\n","const LIGHT = 300;\r\nconst REGULAR = 400;\r\nconst MEDIUM = 500;\r\nconst SEMIBOLD = 600;\r\nconst BOLD = 700;\r\n\r\nexport default {\r\n    palette: {\r\n        primary: {\r\n          main: '#FF4400',\r\n        },\r\n        secondary: {\r\n          main: '#0AD71C',\r\n        },\r\n        /* Atomic Design Palette */\r\n        cyan1: '#E6FFFB',\r\n        cyan6: '#13C2C2',\r\n        cyan7: '#08979C',\r\n        gray1: '#FFFFFF',\r\n        gray2: '#FAFAFA',\r\n        gray3: '#F5F5F5',\r\n        gray4: '#E8E8E8',\r\n        gray5: '#D9D9D9',\r\n        gray6: '#BFBFBF',\r\n        gray7: '#8C8C8C',\r\n        gray8: '#595959',\r\n        gray9: '#262626',\r\n        gray10: '#000000',\r\n        athensGray: '#F7F7F9',\r\n        mischka: '#E1E1E9',\r\n        silver: '#C4C4C4',\r\n        dustRed6: '#F5222D',\r\n        dayBreakBlue2: '#BAE7FF',\r\n        volcano6: '#FA541C',\r\n        volcano7: '#D4380D',\r\n        sunriseYellow6: '#FADB14',\r\n        polarGreen6: '#52C41A',\r\n        polarGreen7: '#389E0D',\r\n        blue1: '#E6F7FF',\r\n        blue7: '#096DD9',\r\n        geekBlue1: '#F0F5FF',\r\n        geekBlue2: '#F0F2F5',\r\n        geekBlue3: '#ADC6FF',\r\n        geekBlue5: '#597EF7',\r\n        geekBlue6: '#2F54EB',\r\n        geekBlue7: '#1D39C4',\r\n        geekBlue8: '#10239E',\r\n        gold1: '#FFFBE6',\r\n        gold5: '#FFC53D',\r\n        gold6: '#FAAD14',\r\n        gold7: '#D48806',\r\n        purple1: '#F9F0FF',\r\n        purple7: '#531DAB',\r\n        /* Atomic Design Palette */\r\n    \r\n        darkText: '#2C2C2C', //  '#4d4d4f',\r\n        greenLight: '#44af69',\r\n        genoa: '#178062',\r\n        jetStream: '#B6D7CD',\r\n        lightGray1: '#E2E2E2', // '#CCCCCC'\r\n        lightGray2: '#E2E2E2',\r\n        lightGray3: '#CACACA',\r\n        lightGray4: '#D8D8D8',\r\n        lightGray5: '#D9D9D9',\r\n        lightGray6: '#BFBFBF',\r\n        drakGray2: '#888888',\r\n        darkGray3: '#9D9D9D',\r\n        darkGray7: '#8C8C8C',\r\n        fedora: '#727172',\r\n        darkGray9: '#262626',\r\n        alto: '#DDDDDD',\r\n        thunder: '#212021',\r\n        coffee: '#717274',\r\n        paleSlate: '#C1C0C1',\r\n        new: '#F7F7F9',\r\n        white: '#ffffff',\r\n        aqua: '#2292a4',\r\n        aqua2: '#08979C',\r\n        blue: '#00D0E8',\r\n        blue2: '#4a90e2',\r\n        green: '#09AC16',\r\n        green1: '#F6FFED',\r\n        green7: '#389E0D',\r\n        orange6: '#FA8C16',\r\n        brown: '#D46B08',\r\n        azalea: '#F6C2D2',\r\n        skyblue: '#00BBD1',\r\n        red: '#FF6060',\r\n        red1: '#FFF1F0',\r\n        red2: '#FC5A5A',\r\n        red6: '#F5222D',\r\n        ceriseRed: '#DE245C',\r\n        lightBlue: '#E7FCFF',\r\n        white2: '#F9F9F9',\r\n        white3: '#F6F6F6',\r\n        white4: '#E5E5E5',\r\n        yellow: '#E8C400',\r\n        yellow2: '#D4B106',\r\n        office365Logo: '#E64A19',\r\n        inherit: 'inherit',\r\n        action: {\r\n          hoverOpacity: 0.1,\r\n        },\r\n    },\r\n    typography: {\r\n        fontWeightLight: LIGHT,\r\n        fontWeightRegular: REGULAR,\r\n        fontWeightMedium: MEDIUM,\r\n        fontWeightSemibold: SEMIBOLD,\r\n        fontWeightBold: BOLD,\r\n        fontSize: 14,\r\n        fontFamily: ['\"Poppins\"', 'sans-serif'].join(','),\r\n        adminFontFamily: ['\"Roboto\"', 'sans-serif'].join(','),\r\n    },\r\n    breakPoints: {\r\n        lg: '1199.98px', // Large devices (desktops)\r\n        md: '991.98px', // Medium devices (tablets)\r\n        sm: '767.98px', // Small devices (landscape phones)\r\n        xs: '575.98px', // Extra small devices (portrait phones)\r\n    },\r\n    animations: {\r\n        AdminMain: {\r\n          prop: {\r\n            opacity: 0,\r\n            y: 20,\r\n          },\r\n          duration: 0.3,\r\n          stagger: 0.1,\r\n        },\r\n    },\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ThemeV2 from '../V2/theme';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    modalCloseButton: {\r\n        position: 'absolute',\r\n        top: 15,\r\n        right: 15,\r\n        cursor: 'pointer',\r\n        padding: '5px',\r\n        '& svg': {\r\n          '& path': {\r\n            fill: ThemeV2.palette.lightGray1,\r\n            transition: '0.3s ease',\r\n          },\r\n        },\r\n        '&:hover': {\r\n          '& svg': {\r\n            '& path': {\r\n              fill: ThemeV2.palette.darkGray3,\r\n            },\r\n          },\r\n        },\r\n    }\r\n}))\r\n\r\nfunction StyledCloseButton(props) {//props: classes,onClick\r\n    const classes = useStyles();\r\n    const { onClick, ...rest} = props;\r\n    return (\r\n        <div className={classes.modalCloseButton} onClick={onClick} {...rest}>\r\n          <svg\r\n            width=\"14\"\r\n            height=\"14\"\r\n            viewBox=\"0 0 14 14\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M13.3 0.709971C12.91 0.319971 12.28 0.319971 11.89 0.709971L6.99997 5.58997L2.10997 0.699971C1.71997 0.309971 1.08997 0.309971 0.699971 0.699971C0.309971 1.08997 0.309971 1.71997 0.699971 2.10997L5.58997 6.99997L0.699971 11.89C0.309971 12.28 0.309971 12.91 0.699971 13.3C1.08997 13.69 1.71997 13.69 2.10997 13.3L6.99997 8.40997L11.89 13.3C12.28 13.69 12.91 13.69 13.3 13.3C13.69 12.91 13.69 12.28 13.3 11.89L8.40997 6.99997L13.3 2.10997C13.68 1.72997 13.68 1.08997 13.3 0.709971Z\"\r\n              fill=\"#E2E2E2\"\r\n            />\r\n          </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyledCloseButton","import Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { darken } from '@material-ui/core/styles/colorManipulator';\r\nimport themeV2 from './theme';\r\n\r\nconst StyledButton = withStyles({\r\n    contained: {\r\n        height: 44,\r\n        borderRadius: 10,\r\n        backgroundColor: themeV2.palette.greenLight,\r\n        color: themeV2.palette.white,\r\n        '&:$disabled': {\r\n            backgroundColor: `${themeV2.palette.drakGray2} !important`\r\n        },\r\n        '&:hover': {\r\n            textDecoration: 'none',\r\n            color: themeV2.palette.white,\r\n            backgroundColor: themeV2.palette.green,\r\n            // Reset on touch devices, it doesn't add specificity\r\n            '@media (hover: none)': {\r\n                backgroundColor: 'transparent',\r\n            },\r\n            boxShadow: 'none !important',\r\n        }   \r\n    },\r\n    containedPrimary: {\r\n        backgroundColor: themeV2.palette.primary.main,\r\n        color: themeV2.palette.white,\r\n        '&:hover': {\r\n          backgroundColor: darken(themeV2.palette.primary.main, 0.3),\r\n          // Reset on touch devices, it doesn't add specificity\r\n          '@media (hover: none)': {\r\n            backgroundColor: darken(themeV2.palette.primary.main, 0.3),\r\n          },\r\n        },\r\n        boxShadow: 'none !important',\r\n    },\r\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\r\n    containedSecondary: {\r\n        backgroundColor: themeV2.palette.secondary.main,\r\n        color: themeV2.palette.white,\r\n        '&:hover': {\r\n        color: `${themeV2.palette.white} !important`,\r\n        backgroundColor: darken(themeV2.palette.secondary.main, 0.3),\r\n            // Reset on touch devices, it doesn't add specificity\r\n            '@media (hover: none)': {\r\n                backgroundColor: darken(themeV2.palette.secondary.main, 0.3),\r\n            },\r\n        },\r\n        boxShadow: 'none !important',\r\n    },\r\n    label: {\r\n        textTransform: 'none',\r\n        fontFamily: themeV2.typography.fontFamily,\r\n        fontSize: 14,\r\n        fontWeight: themeV2.typography.fontWeightMedium,\r\n        fontStyle: 'normal',\r\n        fontStretch: 'normal',\r\n        lineHeight: 'normal',\r\n        letterSpacing: 'normal',\r\n        textAlign: 'center',\r\n    }\r\n})(Button)\r\n\r\nexport default StyledButton","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport classNames from 'classnames';\r\nimport themeV2 from './theme';\r\n\r\nconst styles = {\r\n  root: {\r\n    fontFamily: themeV2.typography.fontFamily,\r\n    color: themeV2.palette.darkText,\r\n  },\r\n  adminRoot: {\r\n    fontFamily: themeV2.typography.adminFontFamily,\r\n    color: themeV2.palette.darkText,\r\n  },\r\n};\r\n\r\nfunction getFontWeight(weight) {\r\n  switch (weight) {\r\n    case 'bold':\r\n      return themeV2.typography.fontWeightBold;\r\n    case 'medium':\r\n      return themeV2.typography.fontWeightMedium;\r\n    case 'semiBold':\r\n      return themeV2.typography.fontWeightSemibold;\r\n    default:\r\n      return themeV2.typography.fontWeightRegular;\r\n  }\r\n}\r\n\r\nfunction CustomTypography(props) {\r\n  const { classes, children, weight, style, className, ...rest } = props;\r\n  // const bull = <span className={classes.bullet}>•</span>;\r\n  return (\r\n    <Typography\r\n      className={classNames(classes.root, className)}\r\n      style={{ ...style, fontWeight: getFontWeight(weight) }}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction AdminTypographyComponent(props) {\r\n  const { classes, children, weight, style, className, ...rest } = props;\r\n  // const bull = <span className={classes.bullet}>•</span>;\r\n  return (\r\n    <Typography\r\n      className={classNames(classes.adminRoot, className)}\r\n      style={{ ...style, fontWeight: getFontWeight(weight) }}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n}\r\nexport const AdminTypography = withStyles(styles)(AdminTypographyComponent);\r\n\r\nCustomTypography.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  weight: PropTypes.string,\r\n  style: PropTypes.object,\r\n};\r\n\r\nCustomTypography.defaultProps = {\r\n  weight: 'Regular',\r\n  style: {},\r\n};\r\n\r\nexport default withStyles(styles)(CustomTypography);\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport ThemeV2 from './theme';\r\n\r\nconst styles = () => ({\r\n    root: {\r\n      fontFamily: ThemeV2.typography.fontFamily,\r\n      fontWeight: ThemeV2.typography.fontWeightMedium,\r\n      color: ThemeV2.palette.darkGray3,\r\n      lineHeight: '15px',\r\n      fontSize: '11px',\r\n      '&.disabled': {\r\n        opacity: '0.24',\r\n        userSelect: 'none',\r\n      },\r\n      '&.error': {\r\n        color: ThemeV2.palette.red2,\r\n      },\r\n    },\r\n});\r\nfunction HelperText(props) {\r\n    const { classes, text, disabled, error, children, ...rest } = props;\r\n    return (\r\n        <FormHelperText\r\n          className={classnames(\r\n            classes.root,\r\n            disabled ? 'disabled' : '',\r\n            error ? 'error' : '',\r\n          )}\r\n          {...rest}\r\n        >\r\n          {children}\r\n        </FormHelperText>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(HelperText);","import React from 'react';\r\nimport _ from 'lodash';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nfunction CarrotIcon(props) {\r\n  // style={{ fontSize: 73 }}\r\n  const { active, onClick, size, url, currency } = props;\r\n  if (url) {\r\n    const blendMode = active ? 'normal' : 'luminosity';\r\n    if (url.type === 'emoji') {\r\n      const emojiType = _.get(url, ['value', 'type'], 'REGULAR');\r\n      if (emojiType === 'REGULAR') {\r\n        return (\r\n          <span\r\n            className={props.className}\r\n            style={{\r\n              fontSize: size ? `${size}px` : '20px',\r\n              mixBlendMode: blendMode,\r\n              ...props.style,\r\n            }}\r\n            role=\"img\"\r\n            aria-label=\"custom-icon\"\r\n          >\r\n            {String.fromCodePoint(parseInt(url.value.hexCode, 16))}\r\n          </span>\r\n        );\r\n      }\r\n      if (emojiType === 'CUSTOM') {\r\n        return (\r\n          <img\r\n            src={url.value.url}\r\n            alt={currency}\r\n            className={props.className}\r\n            style={{\r\n              width: size ? `${size}px` : '20px',\r\n              mixBlendMode: blendMode,\r\n              ...props.style,\r\n            }}\r\n          />\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <img\r\n        src={url.value}\r\n        alt={currency}\r\n        className={props.className}\r\n        style={{\r\n          width: size ? `${size}px` : '20px',\r\n          mixBlendMode: blendMode,\r\n          ...props.style,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SvgIcon\r\n      className={props.className}\r\n      style={props.style || { fontSize: size ? size : '24' }}\r\n      viewBox=\"0 0 20 20\"\r\n      onClick={onClick}\r\n    >\r\n      <title>Gold</title>\r\n      <desc>Icon for gold</desc>\r\n      <g id=\"Logo\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n        <g id=\"coin-copy-2\">\r\n          <circle\r\n            id=\"Oval\"\r\n            fill={active ? '#FFCF40' : '#C0C0C0'}\r\n            fillRule=\"nonzero\"\r\n            cx=\"10\"\r\n            cy=\"10\"\r\n            r=\"10\"\r\n          />\r\n          <path\r\n            d=\"M5.55578364,15.4442164 C3.98747343,14.1698866 3,12.2196023 3,10 C3,6.07999038 6.07999038,3 10,3 C12.2196023,3 14.1698866,3.98747343 15.4442164,5.55578364 C14.2427551,4.57953682 12.7004073,4 11,4 C7.07999038,4 4,7.07999038 4,11 C4,12.7004073 4.57953682,14.2427551 5.55578364,15.4442164 Z\"\r\n            id=\"Combined-Shape\"\r\n            fill={active ? '#FFBF00' : '#9E9E9E'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M10,0 C4.4285802,0 0,4.4285802 0,10 C0,15.5714198 4.4285802,20 10,20 C15.5714198,20 20,15.5714198 20,10 C20,4.4285802 15.5714198,0 10,0 Z M10,17 C6.07999038,17 3,13.9200096 3,10 C3,6.07999038 6.07999038,3 10,3 C13.9200096,3 17,6.07999038 17,10 C17,13.9200096 13.9200096,17 10,17 Z\"\r\n            id=\"Shape\"\r\n            fill={active ? '#FFDB70' : '#CDCDCD'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M10,19.9966916 L10,19.9966916 C15.5714198,20.1416163 20,15.5053955 20,10 L19.857099,10 C19.1428396,10 18.5713584,10.5795743 18.4285802,11.3039488 C18.142901,13.332272 17.1428396,15.2156706 15.7143208,16.5196193 C14.5714812,17.6786434 13.0000614,18.4030179 11.2857406,18.6928673 C10.5714812,18.6927428 10,19.2721926 10,19.9966916 Z\"\r\n            id=\"Path\"\r\n            fill={active ? '#FFBF00' : '#9E9E9E'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M10,0.00330843364 L10,0.00330843364 C4.4285802,-0.141616265 0,4.49460453 0,10 L0.142900988,10 C0.857160395,10 1.42864158,9.42042571 1.5714198,8.69605123 C1.85709901,6.66772798 2.8571604,4.78432942 4.28567921,3.48038065 C5.42851881,2.32135658 6.99993862,1.5969821 8.71425941,1.3071327 C9.42864158,1.3072572 10,0.727682916 10,0.00330843364 Z\"\r\n            id=\"Path\"\r\n            fill={active ? '#FFD24F' : '#B1B1B1'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M14.2239024,14.4323171 C14.0819512,14.4323171 13.940122,14.4323171 13.7981707,14.2903659 C13.5143902,14.0065854 13.5143902,13.5808537 13.7981707,13.2970732 C14.6496341,12.4456098 15.0753659,11.1684146 15.0753659,10.0331707 C15.0753659,9.60743902 15.3591463,9.32365854 15.784878,9.32365854 C16.2106098,9.32365854 16.4943902,9.60743902 16.4943902,10.0331707 C16.4943902,11.5941463 15.9267073,13.155122 14.9334146,14.2903659 C14.6496341,14.4323171 14.3658537,14.4323171 14.2239024,14.4323171 Z\"\r\n            id=\"Path\"\r\n            fill={active ? '#FFD24F' : '#B1B1B1'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M8.5,7.5 C8.5,6.67157288 9.17157288,6 10,6 C10.8284271,6 11.5,6.67157288 11.5,7.5 L11.5,12.5 C11.5,13.3284271 10.8284271,14 10,14 C9.17157288,14 8.5,13.3284271 8.5,12.5 L8.5,7.5 Z\"\r\n            id=\"Combined-Shape\"\r\n            fill={active ? '#FFBF00' : '#9E9E9E'}\r\n          />\r\n        </g>\r\n      </g>\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nexport default CarrotIcon;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport themeV2 from './theme';\r\nimport classNames from 'classnames';\r\nimport HelperText from './HelpText';\r\nimport CarrotIcon from '../CarrotIcon';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textFieldWrapper: {\r\n      display: 'flex',\r\n      alignItems: 'start',\r\n    },\r\n    iconWrapper: {\r\n      height: '44px',\r\n      width: '44px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      background: '#F6F6F6',\r\n      borderTop: `1px solid ${themeV2.palette.lightGray1}`,\r\n      borderBottom: `1px solid ${themeV2.palette.lightGray1}`,\r\n      borderLeft: `1px solid ${themeV2.palette.lightGray1}`,\r\n      borderRadius: '3px 0 0 3px',\r\n      '&.invalid-value': {\r\n        borderTop: `1px solid ${themeV2.palette.red2}`,\r\n        borderBottom: `1px solid ${themeV2.palette.red2}`,\r\n        borderLeft: `1px solid ${themeV2.palette.red2}`,\r\n      },\r\n    },\r\n    helperText: {\r\n      marginTop: '4px',\r\n      marginLeft: -40,\r\n    },\r\n    inputWrapper: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      width: '100%',\r\n      marginBottom: '6px',\r\n      '& input': {\r\n        borderRadius: '0 3px 3px 0',\r\n        padding: '0px 14px',\r\n        height: 44,\r\n        border: `1px solid ${themeV2.palette.lightGray1}`,\r\n        fontFamily: themeV2.typography.fontFamily,\r\n        // fontSize: 16,\r\n        '&:focus': {\r\n          outline: '0',\r\n        },\r\n        '&.invalid-value': {\r\n          borderColor: themeV2.palette.red2,\r\n        },\r\n      },\r\n    },\r\n}));\r\n\r\nfunction CustomCarrotInputField(props) {\r\n\r\n    const errorClass = () => {\r\n        if (props.error) {\r\n          return 'invalid-value';\r\n        } else {\r\n          return '';\r\n        }\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const {...rest} = props;\r\n    // const {\r\n    //     id,\r\n    //     placeholder,\r\n    //     helperText,\r\n    //     inputProps,\r\n    //     error,\r\n    //     customCompanyIcon,\r\n    //     inputChar,\r\n    //     ...rest\r\n    //   } = props;\r\n    return (\r\n        <div className={classNames(classes.textFieldWrapper, errorClass())}>\r\n            <div className={classNames(classes.iconWrapper, errorClass())}>\r\n                {props.inputChar ?\r\n                    (\r\n                        props.inputChar\r\n                    ) : (\r\n                        <CarrotIcon active size='20' url= {props.customCompanyIcon} />\r\n                    )\r\n                }\r\n            </div>\r\n            <div className={classes.inputWrapper}>\r\n                <input \r\n                    id={props.id}\r\n                    className={classNames(classes.textField, errorClass())}\r\n                    autoComplete=\"off\"\r\n                    placeholder={props.placeholder}\r\n                    {...rest}\r\n                />\r\n                <HelperText\r\n                    error={props.error}\r\n                    style={{ marginLeft: -40 }}\r\n                >\r\n                    {props.error ? `🚨 ${props.helperText}` : `👉 ${props.helperText}`}\r\n                </HelperText>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomCarrotInputField","import React, { useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport StyledModal from '../V2/StyledModal';\r\nimport StyledCloseButton from '../V2/StyledCloseButton';\r\nimport StyledButton from '../V2/StyledButton';\r\nimport CustomTypography from '../V2/CustomTypography';\r\nimport CustomCarrotInputField from '../V2/CustomCarrotInputField';\r\nimport themeV2 from '../V2/theme';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    Modal: {\r\n        '& .MuiDialogContent-root': {\r\n          width: '500px',\r\n          padding: '44px 54px 24px 54px',\r\n        },\r\n    },\r\n    buttonHolder: {\r\n        marginTop: 30,\r\n        display: 'flex',\r\n    },\r\n    button: {\r\n        display: 'block',\r\n        borderRadius: 3,\r\n        width: '50%',\r\n    }\r\n}));\r\n\r\nfunction CustomImpactModal(props) {\r\n    \r\n    // const { classes, openModal, customCompanyIcon } = this.props;\r\n\r\n    const maxGivingAllowance = () => {\r\n        if (props.selectedUsers.length <= 1) {\r\n          return {\r\n            availablePoints: props.availablePointsToGive,\r\n          };\r\n        }\r\n\r\n        const maxPointsToGive = Math.floor(\r\n          props.availablePointsToGive / props.selectedUsers.length,\r\n        );\r\n\r\n        const maxPointsToGiveText = `${maxPointsToGive} each`;\r\n        return { availablePoints: maxPointsToGive, maxPointsToGiveText };\r\n    \r\n    }\r\n\r\n    const { availablePoints, maxPointsToGiveText } = maxGivingAllowance();\r\n\r\n    const [impact, setImpact] = useState('');\r\n    const [carrots, setCarrots] = useState('');\r\n    const [invalidValue, setInvalidValue] = useState(false);\r\n    const [formtouched, setFormtouched] = useState(false);\r\n    const [selectTouched, setSelectTouched] = useState(false);\r\n\r\n    const classes = useStyles();\r\n    \r\n    const onCarrotInputChange = (e) => {\r\n        const { value } = e.target;\r\n        const { availablePoints } = maxGivingAllowance();\r\n        if (!value || value.match(/^\\d{1,}$/)) {\r\n            const total = props.selectedUsers.length > 0 ? props.selectedUsers.reduce(\r\n                (sum, user) => sum + parseInt(value, 10),\r\n                    0,\r\n                )\r\n                : value;\r\n\r\n            const remaining = availablePoints - value;\r\n\r\n            let invalidValue = false;\r\n\r\n            if (total > 0) {\r\n              if (remaining < 0) {\r\n                invalidValue = true;\r\n              }\r\n            }\r\n\r\n            if (value !== '') {\r\n              setFormtouched(true)\r\n            }\r\n\r\n            else {\r\n              setFormtouched(false)\r\n            }\r\n            \r\n            setCarrots(value)\r\n            setInvalidValue(invalidValue);\r\n            // this.setState(() => ({\r\n            //   carrots: value,\r\n            //   invalidValue,\r\n            // }));\r\n            // this.props.handleCarrots(value);\r\n        }\r\n    }\r\n    const closeModal = () => {\r\n        // this.resetState();\r\n        // this.props.closeModal();\r\n        // this.setState({ selectTouched: false, formtouched: false });\r\n    }\r\n\r\n    const onConfirmClick = () => {\r\n        \r\n    }\r\n\r\n    return (\r\n        (\r\n            <StyledModal\r\n                className={classes.Modal}\r\n                open={props.openModal}\r\n                onClose={closeModal}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <StyledCloseButton onClick={closeModal} />\r\n                <CustomTypography variant=\"h5\" weight=\"bold\" gutterBottom>\r\n                    Give a custom amount.\r\n                </CustomTypography>\r\n                <CustomTypography variant=\"body2\" style={{ marginTop: 10 }} gutterBottom>\r\n                    Giving a custom amount still requires an impact selection. Select an impact and enter an amount.\r\n                </CustomTypography>\r\n                <div style={{ marginTop: '16px' }}>\r\n                    <CustomCarrotInputField \r\n                        placeholder=\"Enter custom amount...\"\r\n                        helperText={`You can give up to:  ${\r\n                          maxPointsToGiveText ? maxPointsToGiveText : availablePoints\r\n                        }`}\r\n                        error={invalidValue}\r\n                        onChange={onCarrotInputChange}\r\n                        value={carrots}\r\n                        customCompanyIcon={props.customCompanyIcon}\r\n                    />\r\n                </div>\r\n                <div className={classes.buttonHolder}>\r\n                    <StyledButton\r\n                        variant=\"contained\"\r\n                        style={{\r\n                            boxShadow: 'none',\r\n                            marginRight: 16,\r\n                            border: `1px solid ${themeV2.palette.lightGray1}`,\r\n                            backgroundColor: '#F6F6F6',\r\n                            color: themeV2.palette.darkGray3\r\n                        }}\r\n                        onClick={closeModal}\r\n                        className={classes.button}\r\n                    >\r\n                        Cancel\r\n                    </StyledButton>\r\n                    <StyledButton\r\n                        variant='contained'\r\n                        color='primary'\r\n                        className={classes.button}\r\n                        disabled={ !formtouched || invalidValue }\r\n                        onClick= {onConfirmClick}\r\n                    >\r\n                        Enter\r\n                    </StyledButton>\r\n                </div>\r\n            </StyledModal>\r\n        )\r\n    )\r\n}\r\n\r\nexport default CustomImpactModal","import React, { useState } from 'react';\r\nimport _ from 'lodash';\r\nimport ReactHoverObserver from 'react-hover-observer';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport themeV2 from '../V2/theme';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    nestedSelect: {\r\n      position: 'relative',\r\n      left: 25,\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      marginLeft: 'auto',\r\n      color: '#00BBD1',\r\n      fontWeight: themeV2.typography.fontWeightMedium,\r\n      '& .MuiSelect-selectMenu': {\r\n        marginLeft: '5px',\r\n        fontWeight: themeV2.typography.fontWeightMedium,\r\n      },\r\n      '& .MuiInput-underline:before,.MuiInput-underline:after,.MuiInput-underline:hover:before': {\r\n        borderBottom: 'none !important',\r\n      },\r\n      '& .MuiSelect-select:focus': {\r\n        background: 'transparent',\r\n      },\r\n    },\r\n    amountSelector: {\r\n      position: 'relative',\r\n      left: -65,\r\n      visibility: 'hidden',\r\n    },\r\n    CarrotIcon: {\r\n      opacity: '0.25',\r\n    },\r\n    CarrotIconHover: {\r\n      opacity: '1',\r\n    },\r\n    MenuItem: {\r\n      height: '46px',\r\n      display: 'flex',\r\n      padding: '0 0 0 16px',\r\n      cursor: 'pointer',\r\n      '&:hover': {\r\n        background: '#F8F8F8',\r\n        '& .MuiSvgIcon-root': {\r\n          opacity: 1,\r\n        },\r\n      },\r\n    },\r\n    listCarrotIconWrapper: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      height: '100%',\r\n      paddingRight: '18px',\r\n    },\r\n    menuDiv: {\r\n      display: 'flex',\r\n      flex: 1,\r\n      height: '100%',\r\n      alignItems: 'center',\r\n    },\r\n    innerDefaultValues: {\r\n      fontFamily: themeV2.typography.adminFontFamily,\r\n      fontSize: '16px',\r\n      fontWeight: themeV2.typography.fontWeightSemibold,\r\n      marginBottom: '0px',\r\n      opacity: '0.25',\r\n      marginRight: '5px',\r\n    },\r\n    innerDropdownStyle: {\r\n      maxHeight: '300px',\r\n    },\r\n}));\r\n\r\nfunction ImpactSelectorItem(props) {//props: impact,onValueChange,defaultValue,availablePointsToGive\r\n  // const {\r\n  //   classes,\r\n  //   option,\r\n  //   impact,\r\n  //   defaultValue,\r\n  //   onSubSelectToggle,\r\n  //   availablePointsToGive,\r\n  //   onValueChange,\r\n  //   canGivePoints,\r\n  //   customCompanyIcon,\r\n  //   customCurrency,\r\n  //   selectedUsers,\r\n  //   ...rest\r\n  // } = this.props;\r\n    let carrotAmount = props.defaultValue;\r\n    let innerSelectValues = _.range(0, Number(props.defaultValue) + 1);\r\n    \r\n    if(props.defaultValue > props.availablePointsToGive) {\r\n        carrotAmount = props.availablePointsToGive;\r\n        innerSelectValues = _.range(0, Number(props.availablePointsToGive) + 1);\r\n    }\r\n\r\n    const value = carrotAmount || 0;\r\n    // let customCurrencyDisp = props.customCurrency.NAME_TITLEIZED_PLURAL;\r\n    let customCurrencyDisp = 'Tim';\r\n\r\n    if (value === 1) {\r\n        // customCurrencyDisp = props.customCurrency.NAME_TITLEIZED;\r\n        customCurrencyDisp = 'Trophy';\r\n    }\r\n\r\n    let multipleUserText = '';\r\n\r\n    if (props.selectedUsers.length > 1) {\r\n        multipleUserText = 'each';\r\n    }\r\n\r\n    const onOptionSelect = () => {\r\n        let carrotAmount = props.defaultValue;\r\n\r\n        if (props.defaultValue > props.availablePointsToGive) {\r\n            carrotAmount = props.availablePointsToGive;\r\n        }\r\n\r\n        props.onValueChange(props.impact, carrotAmount);\r\n    }\r\n\r\n    const toggleSelect = () => {\r\n        props.onSubSelectToggle(!selectOpen);\r\n        setSelectOpen(!selectOpen)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        props.onValueChange(props.impact, e.target.value);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setSelectOpen(false);\r\n        props.onSubSelectToggle(false);\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setSelectOpen(true);\r\n        props.onSubSelectToggle(true);\r\n    }\r\n    \r\n    const [selectOpen, setSelectOpen] = useState(false);\r\n    const classes = useStyles();\r\n    const {...rest} = props;\r\n    return (\r\n        <div id='impact'>\r\n            <ReactHoverObserver>\r\n                {({isHovering}) => (\r\n                    <div\r\n                        className={classes.MenuItem}\r\n                        key={props.impact}\r\n                        value={props.impact}\r\n                        {...rest}\r\n                    >\r\n                        <div className={classes.menuDiv} id='select-item' onClick={onOptionSelect}>\r\n                            {props.option} Tặng {carrotAmount} {customCurrencyDisp} {multipleUserText}\r\n                        </div>\r\n                        {\r\n                            props.canGivePoint && (\r\n                                <div\r\n                                    className={classes.nestedSelect}\r\n                                    onClick={toggleSelect}\r\n                                >\r\n                                    {\r\n                                        isHovering === true ? (\r\n                                            <div id='select-custom-item'>\r\n                                                <EditIcon fontSize='inherit' style={{position: 'relative', top: '2px'}} />\r\n                                                &nbsp;Edit amount\r\n                                                <Select\r\n                                                    SelectDisplayProps = {{id: 'select-custom-item'}}\r\n                                                    onChange={handleChange}\r\n                                                    value={carrotAmount}\r\n                                                    open={selectOpen}\r\n                                                    onClose={handleClose}\r\n                                                    onOpen={handleOpen}\r\n                                                    className={classes.amountSelector}\r\n                                                    MenuProps={{ classes: {\r\n                                                        paper: classes.innerDropdownStyle\r\n                                                     }}}\r\n                                                >\r\n                                                    {\r\n                                                        innerSelectValues.map(innerSelectValue => (\r\n                                                            <MenuItem value={innerSelectValue}\r\n                                                                key={innerSelectValue}\r\n                                                            >\r\n                                                                {innerSelectValue}\r\n                                                            </MenuItem>\r\n                                                        ))\r\n                                                    }\r\n                                                </Select>\r\n                                            </div>\r\n                                        ) : (\r\n                                            ''\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                )}\r\n            </ReactHoverObserver>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImpactSelectorItem;","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport CustomImpactModal from './CustomImpactModal';\r\nimport themeV2 from '../V2/theme';\r\nimport CarrotIcon from '../CarrotIcon';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Select from '@material-ui/core/Select';\r\nimport Input from '@material-ui/core/Input';\r\nimport ImpactSelectorItem from './ImpactSelectorItem';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    formControl: {\r\n        width: '100%',\r\n    },\r\n    placeholderStyle: {\r\n        color: 'rgba(223,223,223)',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        fontSize: '1rem'\r\n    },\r\n    underline: {\r\n        '&:after': {\r\n          borderBottom: '2px solid #FFD700',\r\n          transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\r\n        },\r\n        '&:before': {\r\n          borderBottom: '1px solid rgb(224, 224, 224)',\r\n        },\r\n        '&:hover:before': {\r\n          borderBottom: '1px solid rgb(224, 224, 224) !important',\r\n        },\r\n    },\r\n    iconWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '50px',\r\n        height: '31px',\r\n    },\r\n    iconStyle: {\r\n        justifyContent: 'center',\r\n        cursor: 'pointer',\r\n    },\r\n    emoticonStyle: {\r\n        justifyContent: 'center',\r\n        cursor: 'pointer',\r\n    },\r\n    nestedFormControl: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        marginLeft: 'auto',\r\n        '& .MuiInput-underline:before': {\r\n          borderBottom: 'none',\r\n        },\r\n    },\r\n    MenuItem: {\r\n        height: '46px',\r\n        display: 'flex',\r\n        padding: '5px 18px 5px 16px',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n          background: '#F8F8F8',\r\n        },\r\n    },\r\n    menuDiv: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        height: '100%',\r\n        alignItems: 'center',\r\n    },\r\n    impactSelector: {\r\n        '& .MuiSelect-select:focus': {\r\n          background: 'transparent',\r\n        },\r\n    },\r\n    impactSelectorDisabled: {\r\n        '& .MuiSelect-icon': {\r\n          visibility: 'hidden',\r\n        },\r\n    },\r\n}));\r\n\r\nfunction ImpactValueSelector(props) {//props: carrots,impact,onChange,options,selectedUsers,mePointsToGive,carrotsPerPost,error,canGiveCustomAmount,canGivePoints,onImpactOpen,onImpactClose,customCurrency,customCompanyIcon\r\n    const [inputIconOn, setInputIconOn] = useState(false);\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [subSelectOpen, setSubSelectOpen] = useState(false);\r\n    const [customImpactModalOpen, setCustomImpactModalOpen] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    //cpndidupdate\r\n    // useEffect(() => {\r\n        \r\n    // })\r\n    const placeholder = 'Tặng tim';\r\n    let maxPointsToGive = props.mePointsToGive;\r\n\r\n    if( props.selectedUsers.length > 0 ) {\r\n        maxPointsToGive = Math.floor(props.mePointsToGive / props.selectedUsers.length)\r\n    }\r\n\r\n    const disableSelect = Number(props.mePointsToGive) === 0;\r\n\r\n    const filterOptions = props.options.filter((option, index) => {\r\n        if(index > 0) {\r\n            const preOption = props.options[index - 1];\r\n            if (props.maxPointsToGive < preOption.goldLimit) {\r\n                return false;\r\n              }\r\n        }\r\n        return true;\r\n    })\r\n\r\n    // const {\r\n    //     classes,\r\n    //     carrots,\r\n    //     options,\r\n    //     canGiveCustomAmount,\r\n    //     mePointsToGive,\r\n    //     selectedUsers,\r\n    //     canGivePoints,\r\n    //     customCurrency,\r\n    //     customCompanyIcon,\r\n    //   } = this.props;\r\n\r\n    const handleOpen = () => {\r\n        props.onImpactOpen();\r\n        setInputIconOn(true);\r\n        setMenuOpen(true);\r\n    }\r\n    \r\n    const handleClose = (e) => {\r\n        let itemClicked = false;\r\n        if (e) {\r\n            if (e.target.id === 'select-custom-item') {\r\n                itemClicked = true;\r\n            }\r\n        }\r\n\r\n        if (!itemClicked && !subSelectOpen) {\r\n            closeSelect();\r\n        }\r\n    }\r\n\r\n    const onImpactSelected = (impact, carrots) => {\r\n        props.onChange(impact, carrots);\r\n        closeSelect();\r\n    }\r\n\r\n    const onSubSelectToggle = toggle => {\r\n        setSubSelectOpen(toggle)\r\n    };\r\n\r\n    const closeSelect = () => {\r\n        props.onImpactClose();\r\n        setMenuOpen(false);\r\n        if( props.impact || props.carrots ) {\r\n            setInputIconOn(true);\r\n        } else {\r\n            //setInputIconOn(false);\r\n            setInputIconOn(true);//needwriteincpndidupdate\r\n        }\r\n    };\r\n\r\n    const openCustomAmountModal = () => {\r\n        setCustomImpactModalOpen(true);\r\n    };\r\n\r\n    const closeCustomImpactModal = () => {\r\n        setCustomImpactModalOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CustomImpactModal \r\n                openModal={customImpactModalOpen}\r\n                closeModal={closeCustomImpactModal}\r\n                onClick={closeCustomImpactModal}\r\n                availablePointsToGive={props.mePointsToGive}\r\n                selectedUsers={props.selectedUsers}\r\n                values={props.options}\r\n                onImpactSelected={onImpactSelected}\r\n                customCompanyIcon={props.customCompanyIcon}\r\n            />\r\n            <div style={{display: 'flex'}}>\r\n                <div className={classes.iconWrapper}>\r\n                    <CarrotIcon\r\n                        className={props.customCompanyIcon && props.customCompanyIcon.type === 'emoji' ? classes.emoticonStyle : classes.iconStyle}\r\n                        size=\"16\"\r\n                        active={inputIconOn}\r\n                        onClick={handleOpen}\r\n                        url={props.customCompanyIcon}\r\n                        currency={props.customCurrency.NAME}\r\n                        style={{fontFamily: 'Segoe UI Emoji'}}\r\n                    />\r\n                </div>\r\n                <FormControl className={classes.formControl}>\r\n                    <Tooltip\r\n                        title={\r\n                            disableSelect\r\n                              ? `This field is disabled. You’ve used your allowance but you can still give recognitions`\r\n                              : ''\r\n                        }\r\n                        placement=\"top\"\r\n                    >\r\n                        <Select\r\n                            value={props.carrots}\r\n                            open={menuOpen}\r\n                            name='impactValue'\r\n                            displayEmpty\r\n                            fullWidth\r\n                            onOpen={handleOpen}\r\n                            onClose={(e) => handleClose(e)}\r\n                            className={classNames(classes.impactSelector, {\r\n                                [`${classes.impactSelectorDisabled}`] : disableSelect,\r\n                            })}\r\n                            disabled={disableSelect}\r\n                            input= {\r\n                                <Input\r\n                                    classes={{\r\n                                        underline: classes.underline\r\n                                    }}\r\n                                    name='impactValue'\r\n                                    id='impactValue'\r\n                                />\r\n                            }\r\n                            renderValue={() => {\r\n                                if(disableSelect) {\r\n                                    return (\r\n                                        <div className={classes.placeholderStyle}>\r\n                                            <div>\r\n                                                Your remaining allowance is 0 (zero), but you can still GIVERECOGNITIONs\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                if(!(props.impact) && !(props.carrots)) {\r\n                                    return (\r\n                                        <div className={classes.placeholderStyle}>\r\n                                            <div>{placeholder}</div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                const value = props.carrots || 0;\r\n                                let customCurrencyDisp = 'Tim';\r\n\r\n                                if( value === 1 ) {\r\n                                    customCurrencyDisp = 'Trophoy';\r\n                                }\r\n                                let goldSelected = value > 0 ? `${value} ${customCurrencyDisp}` : '';\r\n                                const total = props.selectedUsers.reduce((sum, user) => sum + parseInt(value, 10), 0);\r\n                                const remaining = props.mePointsToGive - (total > 0 ? total : value);\r\n                                let excessAlert = false;\r\n\r\n                                if(remaining < 0) {\r\n                                    excessAlert = true;\r\n                                }\r\n                                if(total > 0) {\r\n                                    if (remaining >= 0) {\r\n                                        if (Number(props.selectedUsers.length) === 1) {\r\n                                            goldSelected = `${total} ${customCurrencyDisp}`;\r\n                                        }\r\n                                        else {\r\n                                            goldSelected = `${value} ${customCurrencyDisp} each`;\r\n                                        }\r\n                                    } else {\r\n                                        goldSelected = `${value} ${customCurrencyDisp} each exceeds allowance`;\r\n                                    }\r\n                                }\r\n\r\n                                const impactObj = props.options.find(\r\n                                    option => option.value === props.impact,\r\n                                );\r\n\r\n                                let dispText;\r\n\r\n                                if (Number(value) === 0) {\r\n                                    dispText = 'No trophies';\r\n                                } \r\n                                else if (!(props.impact)) {\r\n                                    dispText = goldSelected;\r\n                                }\r\n                                else {\r\n                                    dispText = `${impactObj.label} ${goldSelected}`;\r\n                                }\r\n                                return (\r\n                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                        <div style={{ color: excessAlert ? themeV2.palette.red2 : '' }}>\r\n                                            {dispText}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }}\r\n                        >\r\n                            {\r\n                                filterOptions.map(option => (\r\n                                    <ImpactSelectorItem\r\n                                        option={option.label}\r\n                                        impact={option.value}\r\n                                        defaultValue={option.goldLimit}\r\n                                        canGivePoints={props.canGivePoints}\r\n                                        availablePointsToGive={maxPointsToGive}\r\n                                        onValueChange={onImpactSelected}\r\n                                        onSubSelectToggle={onSubSelectToggle}\r\n                                        key={option.label}\r\n                                        customCompanyIcon={props.customCompanyIcon}\r\n                                        customCurrency={props.customCurrency}\r\n                                        selectedUsers={props.selectedUsers}\r\n                                    >\r\n                                        {option.label}\r\n                                    </ImpactSelectorItem>\r\n                                ))\r\n                            }\r\n                            {props.canGiveCustomAmount && (\r\n                                <div className={classes.MenuItem}>\r\n                                    <div\r\n                                        className={classes.menuDiv}\r\n                                        onClick={openCustomAmountModal}\r\n                                    >\r\n                                        + Enter a custom amount\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </Select>\r\n                    </Tooltip>\r\n                </FormControl>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default ImpactValueSelector","export const getter = (keys, hash) => {\r\n    keys.reduce((newHash, key) => ((newHash && newHash[key]) ? newHash[key] : null), hash);\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ProfilePic } from '../../assets/Util/profilePic';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    user: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    userName: {\r\n        fontSize: '16px',\r\n        fontWeight: 'normal',\r\n        b: {\r\n          fontWeight: 'normal',\r\n        },\r\n    },\r\n    userId: {\r\n        fontSize: '12px',\r\n        fontWeight: 'normal',\r\n    },\r\n    autocomplete_user_fullname: {\r\n        paddingLeft: 8,\r\n        fontSize: 12,\r\n        color: '#2C2C2C',\r\n        fontWeight: 600,\r\n        letterSpacing: 0.2\r\n    },\r\n}));\r\n\r\nconst Entry = (props) => {\r\n    const {...parentProps} = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <div {...parentProps}>\r\n            <div className={classes.user}>\r\n                <ProfilePic size={32} user={props.mention} />\r\n                <span className={classes.autocomplete_user_fullname}>\r\n                    <div className={classes.userName}>{props.mention.name}</div>\r\n                    <div className={classes.userId}>\r\n                        {`@${props.mention.username}`}\r\n                    </div>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nfunction CustomMentionSuggesstions(props) {\r\n    const { onSearchChange, suggestions, onOpenSuggestions, onCloseSuggestions, onAddMention, MentionComponent } = props;\r\n    return (\r\n        <MentionComponent \r\n            onSearchChange={onSearchChange}\r\n            suggestions={suggestions}\r\n            onOpen={onOpenSuggestions}\r\n            onClose={onCloseSuggestions}\r\n            entryComponent={Entry}\r\n            onAddMention={onAddMention}\r\n        />\r\n    )\r\n    \r\n    \r\n}\r\n\r\nexport default CustomMentionSuggesstions","import React from 'react';\r\nimport Editor from 'draft-js-plugins-editor';\r\nimport createMentionPlugin from 'draft-js-mention-plugin';\r\nimport CustomMentionSuggestions from './CustomMentionSuggesstions';\r\n\r\nfunction CustomEditor(props) {\r\n    // const {\r\n    //     editorState,\r\n    //     onChange,\r\n    //     editorRef,\r\n    //     onBlur,\r\n    //     onFocus,\r\n    //     placeholder,\r\n    //     onSearchChange,\r\n    //     suggestions,\r\n    //     onOpenSuggestions,\r\n    //     onCloseSuggestions,\r\n    //     onAddMention,\r\n    //   } = this.props;\r\n    const mentionPlugin = createMentionPlugin({\r\n        entityMutability: 'IMMUTABLE',\r\n        mentionTrigger: '@',\r\n        supportWhitespace: true,\r\n    })\r\n\r\n    const { MentionSuggestions } = mentionPlugin;\r\n\r\n    return (\r\n        <>\r\n            <Editor\r\n                editorState={props.editorState}\r\n                onChange={props.onChange}\r\n                plugins={[mentionPlugin]}\r\n                ref={props.editorRef}\r\n                onBlur={props.onBlur}\r\n                onFocus={props.onFocus}\r\n                placeholder={props.placeholder}\r\n            />\r\n            <CustomMentionSuggestions\r\n                onSearchChange={props.onSearchChange}\r\n                suggestions={props.suggestions}\r\n                MentionComponent={MentionSuggestions}\r\n                onOpenSuggestions={props.onOpenSuggestions}\r\n                onCloseSuggestions={props.onCloseSuggestions}\r\n                onAddMention={props.onAddMention}\r\n            />\r\n        </>\r\n    )\r\n}\r\nexport default CustomEditor;","import React, { useRef, useState } from 'react';\r\n// import Fuse from 'fuse.js';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\n// import {\r\n//   GIVE_CARROTS_UI_STATUSES,\r\n//   uiActions,\r\n//   ADD_EMOJI_STATUS,\r\n// } from '../../../modules/UI-Reducers/UIReducers';\r\nimport { getter } from '../../assets/Util/object';\r\nimport CustomEditor from '../V2/CustomEditor';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        width: '100%',\r\n    },\r\n    iconWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '50px',\r\n        height: '31px',\r\n    },\r\n    iconStyle: {\r\n        fontSize: '16px',\r\n        cursor: 'pointer',\r\n    },\r\n    iconInactiveStyle: {\r\n        color: '#9e9e9e',\r\n        filter: 'grayscale(1)',\r\n    },\r\n    iconActiveStyle: {\r\n        color: theme.palette.secondary.main,\r\n        filter: 'grayscale(0)',\r\n    },\r\n    inputDiv: {\r\n        marginTop: 7,\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n        verticalAlign: 'top',\r\n        fontSize: '16px',\r\n        overflow: 'hidden',\r\n    },\r\n    errorhelper: {\r\n        color: '#f44336',\r\n        margin: 0,\r\n        fontSize: '0.75rem',\r\n        marginTop: 3,\r\n        textAlign: 'left',\r\n        fontWeight: 400,\r\n        lineHeight: 1.66,\r\n    },\r\n    textarea__input: {\r\n        width: '100%'\r\n    },\r\n    // textarea__input__input::-webkit-input-placeholder {\r\n    //     color: #e2e2e2 !important; }\r\n}))\r\n\r\nconst DIV_ID = 'gr_post_div';\r\n\r\nfunction MessageInput(props) {\r\n    const [inputIconOn, setInputIconOn] = useState(false);\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    // const { classes, editorState, error, onAddMention } = this.props;\r\n    const [editor, setEditor] = useState();\r\n    const classes = useStyles();\r\n\r\n    const onFocus = () => {\r\n        // this.setState({ inputIconOn: true });\r\n        setInputIconOn(true);\r\n        editor.focus();\r\n        props.onFocus();\r\n    }\r\n\r\n    const onChange = (editorState) => {\r\n        props.handleMessage(editorState)\r\n    }\r\n\r\n    const onInputBlur = () => {\r\n\r\n        if(props.hasText) {\r\n            setInputIconOn(true);\r\n        }\r\n        \r\n        else {\r\n            setInputIconOn(false);\r\n        }\r\n    }\r\n\r\n    const onSearchChange = () => {\r\n\r\n    }\r\n\r\n    const onOpenSuggestions = () => {\r\n\r\n    }\r\n\r\n    const onCloseSuggestions = () => {\r\n\r\n    }\r\n\r\n    const onAddMention = () => {\r\n\r\n    }\r\n    \r\n    const getErrorMessage = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.iconWrapper}>\r\n                <div className={classNames(\r\n                    classes.iconStyle,\r\n                    inputIconOn ? classes.iconActiveStyle : classes.iconInactiveStyle\r\n                )}\r\n                    onClick={onFocus}\r\n                >\r\n                    <span role=\"img\" aria-label=\"icon\">\r\n                        💌\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div\r\n                    onClick={onFocus}\r\n                    className={classNames(classes.textarea__input, DIV_ID)}\r\n                >\r\n                    <CustomEditor\r\n                        editorState={props.editorState}\r\n                        onChange={onChange}\r\n                        editorRef={(e) => {\r\n                            setEditor(e)\r\n                        }}\r\n                        onBlur={onInputBlur}\r\n                        onFocus={onFocus}\r\n                        placeholder=\"Hãy viết những lời ý nghĩa gửi đến người đó\"\r\n                        onSearchChange={onSearchChange}\r\n                        onAddMention={onAddMention}\r\n                        suggestions={suggestions}\r\n                        onOpenSuggestions={onOpenSuggestions}\r\n                        onCloseSuggestions={onCloseSuggestions}\r\n                    />\r\n                </div>\r\n                {props.error && (\r\n                    <div className={classes.errorhelper}>{getErrorMessage()}</div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MessageInput","import { convertToRaw } from 'draft-js';\r\n\r\nconst getLiteralTextFromEditor = (editorState = []) => {\r\n  const blocks = convertToRaw(editorState.getCurrentContent()).blocks;\r\n\r\n  const mappedBlocks = blocks.map(\r\n    (block) => (!block.text.trim() && '\\n') || block.text,\r\n  );\r\n\r\n  let newText = '';\r\n  for (let i = 0; i < mappedBlocks.length; i++) {\r\n    const block = mappedBlocks[i];\r\n\r\n    // handle last block\r\n    if (i === mappedBlocks.length - 1) {\r\n      newText += block;\r\n    } else {\r\n      // otherwise we join with \\n, except if the block is already a \\n\r\n      if (block === '\\n') newText += block;\r\n      else newText += block + '\\n';\r\n    }\r\n  }\r\n  return newText;\r\n};\r\n\r\nconst getTextFromEditor = (editorState, mentionsToReplace = []) => {\r\n  let newText = getLiteralTextFromEditor(editorState);\r\n  mentionsToReplace.forEach((mention) => {\r\n    newText = newText.replace(\r\n      new RegExp(mention.name, 'g'),\r\n      `@__${mention.id}__@`,\r\n    );\r\n  });\r\n  return newText;\r\n};\r\n\r\nconst getMentionsToReplace = (selectedMentions, employees) => {\r\n  \r\n  return selectedMentions.map((id) => {\r\n    const employee = employees.find((emp) => emp.id === id);\r\n    return {\r\n      id,\r\n      name: employee.name || '',\r\n    };\r\n  });\r\n};\r\n\r\nconst getMentionsFromEditorSate = (editorState, mentions) => {\r\n  const userIdsMentioned = [];\r\n  const message = getLiteralTextFromEditor(editorState);\r\n  mentions.forEach((mention) => {\r\n    if ((message.match(new RegExp(mention.name, 'g')) || []).length > 0) {\r\n      userIdsMentioned.push(mention.id);\r\n    }\r\n  });\r\n  return userIdsMentioned;\r\n};\r\n\r\nexport {\r\n  getTextFromEditor,\r\n  getMentionsToReplace,\r\n  getLiteralTextFromEditor,\r\n  getMentionsFromEditorSate,\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Img }  from 'react-image';\r\nimport { getImageForBadge } from '../../assets/Util/BadgesInfo';\r\n//import badge_selected from '../../../../img/badge_selected.png';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    badge_selector_item: {\r\n        height: 90,\r\n        padding: 10,\r\n        position: 'relative',\r\n        cursor: 'pointer'\r\n    },\r\n    badge_selector_img: {\r\n        width: 54,\r\n        height: 54\r\n    },\r\n    badge_selector_name: {\r\n        color: '#4b4f56',\r\n        fontSize: 8,\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        marginTop: 10,\r\n        wordWrap: 'break-word',\r\n        width: 54\r\n    },\r\n}))\r\nfunction BadgesItem(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div\r\n            className={classes.badge_selector_item}\r\n            onClick={props.onSelect}\r\n        >\r\n            <Img\r\n                className={classes.badge_selector_img}\r\n                alt={`badge-${props.badge.name}`}\r\n                src={getImageForBadge(props.badge)}\r\n            />\r\n            <div className={classes.badge_selector_name}>\r\n                {props.badge.displayName}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BadgesItem","import React from 'react';\r\nimport BadgesItem from './BadgesItem';\r\nimport { badges } from '../../assets/Util/BadgesInfo';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    badge_selector_wrapper: {\r\n        width: 320,\r\n        height: 230,\r\n        padding: 10\r\n    },\r\n    badge_selector_body: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    badge_selected_image: {\r\n        width: 60,\r\n        height: 61,\r\n        position: 'absolute',\r\n        top: 7,\r\n        left: 7\r\n    }\r\n}))\r\n\r\nfunction BadgesSelector(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.badge_selector_wrapper}>\r\n            <div className={classes.badge_selector_body}>\r\n                {\r\n                    badges.map((badge) => (\r\n                        <BadgesItem\r\n                            key={badge.name}\r\n                            badge={badge}\r\n                            selected={props.selectedBadge ? props.selectedBadge.name === badge.name : false}\r\n                            onSelect={() => { props.updateSelected(badge) }}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BadgesSelector;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport AdjustIcon from '@material-ui/icons/Adjust';\r\nimport classNames from 'classnames';\r\nimport { IconButton, Tooltip, Button, Popover } from '@material-ui/core';\r\nimport { titleize } from '../assets/Util/text';\r\nimport EmojiIcon from '@material-ui/icons/InsertEmoticon';\r\nimport CameraIcon from '@material-ui/icons/AddAPhoto';\r\nimport GifIcon from '@material-ui/icons/Gif';\r\nimport { getImageForBadge } from '../assets/Util/BadgesInfo';\r\nimport DSTypeAhead from './give-carrot/DSTypeAhead';\r\nimport ImpactValueSelector from './give-carrot/ImpactValueSelector';\r\nimport MessageInput from './give-carrot/MessageInput';\r\nimport { EditorState } from 'draft-js';\r\nimport { getTextFromEditor, getMentionsToReplace } from '../assets/Util/mention';\r\nimport { GIVE_RECOGNITION_HEADER } from '../assets/Util/constants';\r\nimport axios from 'axios';\r\nimport BadgesSelector from './give-carrot/BadgesSelector';\r\n\r\nconst StyledTabs = withStyles({\r\n    root: {\r\n        background: '#f6f6f6'\r\n    },\r\n    indicator: {\r\n      backgroundColor: '#EEEEEE',\r\n    },\r\n})(Tabs);\r\n\r\nconst StyledTab = withStyles(() => ({\r\n    root: {\r\n        textTransform: 'none',\r\n        color: '#2C2C2C',\r\n        // fontSize: 16,\r\n        fontWeight: 'bold',\r\n        letterSpacing: '.5px',\r\n        '&:focus': {\r\n        outline: 'none'\r\n        }\r\n    },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    post_container: {\r\n        border: '.5px solid #EEEEEE',\r\n        background: '#FFFFFF',\r\n        borderRadius: 2,\r\n        marginBottom: 10,\r\n    },\r\n    form_container: {\r\n        position: 'relative',\r\n        width: '100%'\r\n    },\r\n    p_16: {\r\n        padding: 16\r\n    },\r\n    input_row_style: {\r\n        position: 'relative',\r\n        marginBottom: 10,\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n    },\r\n    iconButton: {\r\n        color: '#9E9E9E',\r\n        '&:hover': {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.08)',\r\n        },\r\n        '&:focus': {\r\n            outline: 'none',\r\n        },\r\n    },\r\n    button: {\r\n        color: '#FFFFFF',\r\n        borderRadius: 4,\r\n        minWidth: 140,\r\n        // boxShadow: '0px 2px 3px rgba(0, 0, 0, 0.25)',\r\n        '&$disabled': {\r\n          boxShadow: 'none',\r\n        },\r\n        textTransform: 'none',\r\n    },\r\n    gc_button: {\r\n        marginLeft: 10,\r\n        marginRight: 10\r\n    },\r\n    add_emoji_img: {\r\n        width: 20,\r\n        height: 20\r\n    }\r\n}));\r\n\r\nconst impactLevels = [\r\n    {\r\n        goldLimit: 10,\r\n        label: \"🙂\",\r\n        value: \"small\"\r\n    },\r\n    {\r\n        goldLimit: 20,\r\n        label: \"😀\",\r\n        value: \"medium\"\r\n    },\r\n    {\r\n        goldLimit: 30,\r\n        label: \"👏\",\r\n        value: \"large\"\r\n    },\r\n    {\r\n        goldLimit: 40,\r\n        label: \"💪\",\r\n        value: \"huge\"\r\n    },\r\n    {\r\n        goldLimit: 50,\r\n        label: \"🚀\",\r\n        value: \"above\"\r\n    }\r\n]\r\nfunction PostRecognition (props) {\r\n    const classes = useStyles();\r\n    const [slideIndex, setSlideIndex] = useState(0);\r\n    const [selectedBadge, setSelectedBadge] = useState(null);\r\n    const [selectedUsers, setSelectedUsers] = useState([]);\r\n    const [carrots, setCarrots] = useState('');\r\n    const [impact, setImpact] = useState('');\r\n    const [carrotsTouched, setCarrotsTouched] = useState(false);\r\n    const [carrotError, setCarrotError] = useState(null);\r\n    // const [ internalTourState, setInternalTourState] = useState(null);\r\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n    const [messageError, setMessageError] = useState(null);\r\n    const [isMessageTipsVisible, setIsMessageTipsVisible] = useState(false);\r\n    const [selectedMentions, setSelectedMentions] = useState([]);\r\n    const [isFormSubmitting, setIsFormSubmitting] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    //token\r\n    const [token, setToken] = useState('')\r\n\r\n    //hardcode\r\n    const canGivePoints = true;\r\n\r\n    const canGiveCustomAmount = false;\r\n\r\n    const badgeAttachability = true;\r\n\r\n    const mePointsToGive = 200;\r\n\r\n    const carrotsPerPost = {\r\n        isSet: false,\r\n        value: 25\r\n    }\r\n\r\n    const customCurrency = {\r\n        NAME_PLURAL: \"Trophies\",\r\n        NAME_TITLEIZED: \"Trophy\",\r\n        NAME_TITLEIZED_PLURAL: \"Trophies\"\r\n    }\r\n\r\n    const customCompanyIcon = {\r\n        type: 'emoji',\r\n        value: {\r\n            hexCode: \"02764\",\r\n            id: \"heart\"\r\n        }\r\n    }\r\n\r\n    /*\r\n        get TOKEN\r\n    */\r\n    useEffect(() => {\r\n        const queryString = window.location.search;\r\n\r\n        const urlParams = new URLSearchParams(queryString);\r\n\r\n        const emailLogin = urlParams.get('email')\r\n\r\n        axios.post(`https://camon.twgroup.vn/api/v1/auth/user?email=${emailLogin}`)\r\n        .then((res) =>{\r\n            setToken(res.data.data.token);\r\n        })\r\n    },[])\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setSlideIndex(newValue);\r\n    };\r\n\r\n    const getImageForBadgeIcon = () => {\r\n        if (selectedBadge) {\r\n            return getImageForBadge(selectedBadge, true);\r\n        }\r\n\r\n    };\r\n\r\n    const getImageTitleForBadge = () => {\r\n        \r\n        if (selectedBadge) {\r\n            return selectedBadge.displayName;\r\n        }\r\n        return 'Danh hiệu';\r\n    };\r\n\r\n    const handleTypeAheadUsers = (selectedUsersProps) => {\r\n        setSelectedUsers(selectedUsersProps);\r\n    };\r\n\r\n    const onUserInputFocus = () => {\r\n    }\r\n\r\n    const minMessageChar = {\r\n        isSet: false,\r\n        value: 25\r\n    }\r\n    // const onUserInputBlur = () => {\r\n\r\n    // }\r\n\r\n    const onImpactOpen = () => {\r\n        props.switchBalanceTab(1);\r\n    }\r\n\r\n    const onImpactClose = () => {\r\n        props.switchBalanceTab(0);\r\n    }\r\n\r\n    const handleImpactValueChange = (impact, carrots) => {\r\n        setImpact(impact);\r\n        setCarrots(carrots);\r\n        setCarrotsTouched(true);\r\n    }\r\n\r\n    const handleMessage = (editorStateProps) => {\r\n        setEditorState(editorStateProps);\r\n        setMessageError(null);\r\n    }\r\n\r\n    const handleMessageInputFocus = () => {\r\n        setIsMessageTipsVisible(true);\r\n      };\r\n\r\n    const onAddMention = (props) => {\r\n        // const { selectedMentions } = this.state;\r\n        // selectedMentions.add(props.id);\r\n        // this.setState({ selectedMentions });\r\n        selectedMentions.push(props.id);\r\n        setSelectedMentions(selectedMentions);\r\n    };\r\n\r\n    const messageInputHasText = editorState.getCurrentContent().hasText();\r\n    const mentionUsers = [\r\n        {\r\n            \"id\": \"5f60a577937a424a11ee2b36\",\r\n            \"_id\": \"5f60a577937a424a11ee2b36\",\r\n            \"name\" : \"Minh Y Nguyen\",\r\n            \"username\": \"minh-y-nguyen\",\r\n            \"profile\": {\r\n                \"firstName\": \"Minh Y\",\r\n                \"lastName\": \"Nguyen\",\r\n                \"username\": \"minh-y-nguyen\",\r\n                \"allowanceType\": \"regular\",\r\n                \"status\": \"normal\"\r\n            },\r\n            \"role\": [\r\n                \"Employee\"\r\n            ]\r\n        }\r\n    ]\r\n\r\n    const shouldDisableGiveButton = () => {\r\n        let giveButtonDisabled = true;\r\n        // const {\r\n        //     isFormSubmitting,\r\n        //     selectedUsers,\r\n        //     editorState,\r\n        //     carrotError,\r\n        //     carrotsTouched,\r\n        //     carrots,\r\n        // } = this.state;\r\n        const { canGivePoints, mePointsToGive } = props;\r\n        const hasText = editorState.getCurrentContent().hasText();\r\n\r\n        if (isFormSubmitting) {\r\n            giveButtonDisabled = true;\r\n        }\r\n\r\n        else if(selectedUsers.length > 0 && hasText) {\r\n            if(!carrotError) {\r\n                if (!canGivePoints || Number(mePointsToGive) === 0) {\r\n                    giveButtonDisabled = false;\r\n                }\r\n                else if (canGivePoints && carrotsTouched) {\r\n                    if (selectedUsers.length * carrots <= mePointsToGive) {\r\n                      giveButtonDisabled = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return giveButtonDisabled;\r\n    }\r\n\r\n    const giveButtonDisabled = shouldDisableGiveButton();\r\n\r\n    const onUpdateSelectedBadge = (badge) => {\r\n        if(selectedBadge) {\r\n            if(selectedBadge.name === badge.name) {\r\n                setSelectedBadge(null);\r\n                setAnchorEl(null);\r\n                return\r\n            }\r\n        }\r\n        setSelectedBadge(badge);\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const onAddBadgeClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    \r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleSubmit = (e, values={}) => {\r\n        e.preventDefault();\r\n\r\n        const mentionsToReplace = getMentionsToReplace(selectedMentions, mentionUsers)\r\n\r\n        const message = getTextFromEditor(editorState, mentionsToReplace)\r\n        // const literalMessage = getLiteralTextFromEditor(editorState);\r\n\r\n        //mapping data\r\n        const giveCarrots = {\r\n            to: selectedUsers.map((user) => user.id),\r\n            carrots_each: Number(carrots),\r\n            message,\r\n        }\r\n\r\n        if (selectedBadge) {\r\n            giveCarrots.badges = [selectedBadge.name];\r\n        }\r\n\r\n        // if(impact) {\r\n        //     giveCarrots.postImpact = props.impactData.find((item) => item.name === impact)\r\n        // }\r\n\r\n        // this.setState({\r\n        //     isFormSubmitting: true,\r\n        //     isRecognitionOpen: false,\r\n        //     isMessageTipsVisible: false,\r\n        // });\r\n\r\n        console.log(giveCarrots)\r\n        //call API\r\n        axios.post('https://camon.twgroup.vn/api/v1/feed', giveCarrots , {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token\r\n            }\r\n        }).then((res) => {\r\n            console.log(res.data.data)\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.post_container}>\r\n            <div style={{overflow: 'hidden', width: 'calc(100% - 1px)'}}>\r\n                <StyledTabs\r\n                    centered\r\n                    variant='fullWidth'\r\n                    value={slideIndex}\r\n                    onChange={handleTabChange}>\r\n                    <StyledTab disableRipple label= {GIVE_RECOGNITION_HEADER} />\r\n                </StyledTabs>\r\n            </div>\r\n            <form onSubmit={handleSubmit} className={classes.form_container}>\r\n                <div className={classes.p_16}>\r\n                    <div\r\n                        className={classNames(\r\n                            'row',\r\n                            'shoutout-user-select',\r\n                            classes.input_row_style,\r\n                        )}\r\n                    >\r\n                        <DSTypeAhead\r\n                            handleUsers={handleTypeAheadUsers}\r\n                            onFocus={onUserInputFocus}\r\n                            // onBlue={onUserInputBlur}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        canGivePoints && (\r\n                            <div className={classNames(\r\n                                'row',\r\n                                'shoutout-user-select',\r\n                                classes.input_row_style,\r\n                            )}>\r\n                                <ImpactValueSelector\r\n                                    carrots={carrots}\r\n                                    impact={impact}\r\n                                    onChange={handleImpactValueChange}\r\n                                    options={impactLevels}//hard\r\n                                    selectedUsers={selectedUsers}//hard\r\n                                    mePointsToGive={mePointsToGive}//hard\r\n                                    carrotsPerPost={carrotsPerPost}//setting\r\n                                    error={carrotError}\r\n                                    canGiveCustomAmount={canGiveCustomAmount && canGivePoints}//hard\r\n                                    canGivePoints={canGivePoints}\r\n                                    onImpactOpen={onImpactOpen}\r\n                                    onImpactClose={onImpactClose}\r\n                                    customCurrency={customCurrency}//hard\r\n                                    customCompanyIcon={customCompanyIcon}//hard\r\n                                />\r\n                            </div>\r\n                        )\r\n                    }\r\n                    <div className={classNames(\r\n                                'row',\r\n                                'shoutout-user-select',\r\n                                classes.input_row_style,\r\n                    )}>\r\n                        <MessageInput\r\n                            handleMessage={handleMessage}\r\n                            editorState={editorState}\r\n                            error={messageError}\r\n                            minMessageChar={minMessageChar}//hard\r\n                            hasText={messageInputHasText}//hard\r\n                            mentionUsers={mentionUsers}//hard\r\n                            onAddMention={onAddMention}\r\n                            onFocus={handleMessageInputFocus}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"justify-content-end align-items-center\" style={{display: 'flex', padding: 14}}>\r\n                    <div style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                        {\r\n                            badgeAttachability && (\r\n                                <Tooltip title='Danh hiệu' placement='top'>\r\n                                    <IconButton\r\n                                        className={classes.iconButton}\r\n                                        aria-label='Danh hiệu'\r\n                                        onClick={onAddBadgeClick}\r\n                                    >\r\n                                        {\r\n                                            selectedBadge ? (\r\n                                                <img\r\n                                                    className={classes.add_emoji_img}\r\n                                                    alt='badges'\r\n                                                    title={getImageTitleForBadge(selectedBadge)}\r\n                                                    src={getImageForBadgeIcon(selectedBadge)} />\r\n                                            ) : (\r\n                                            <AdjustIcon /> )\r\n                                        }\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            )\r\n                        }\r\n                        {/* <Tooltip title=\"Biểu tượng cảm xúc\" placement=\"top\">\r\n                            <IconButton\r\n                                className={classes.iconButton}\r\n                                // onClick={onEmojiClick}\r\n                                aria-label=\"Biểu tượng cảm xúc\"\r\n                            >\r\n                                <EmojiIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Hình ảnh\" placement=\"top\">\r\n                            <IconButton\r\n                                color=\"primary\"\r\n                                className={classes.iconButton}\r\n                                component=\"span\"\r\n                                aria-label=\"Hình ảnh\"\r\n                            >\r\n                                <CameraIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Gif\" placement=\"top\">\r\n                            <IconButton\r\n                                // onClick={onGifClick}\r\n                                className={classes.iconButton}\r\n                                aria-label=\"Gif\"\r\n                            >\r\n                                <GifIcon />\r\n                            </IconButton>\r\n                        </Tooltip> */}\r\n                    </div>\r\n                    <div className={classes.gc_button}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            type=\"submit\"\r\n                            disabled={giveButtonDisabled}\r\n                        >\r\n                            {\r\n                            /* {givePrivately\r\n                            ? 'Give Privately'\r\n                            : titleize(GIVE_RECOGNITION)} */\r\n\r\n                            titleize('gửi lời cảm ơn')}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Popover\r\n                    open={open}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'center',\r\n                    }}\r\n                >\r\n                    <BadgesSelector \r\n                        updateSelected={(badge) => onUpdateSelectedBadge(badge)}\r\n                        selectedBadge={selectedBadge}\r\n                    />\r\n                </Popover>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostRecognition","const GIVE_RECOGNITION_HEADER = 'Lời cám ơn';\r\n\r\nexport {\r\n    GIVE_RECOGNITION_HEADER\r\n}","import React from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport CarrotIcon from './CarrotIcon';\r\nimport moment from 'moment';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    balance_container: {\r\n        border: '.5px solid #EEEEEE',\r\n        background: '#FFFFFF',\r\n        borderRadius: 2,\r\n        marginBottom: 10,\r\n    },\r\n    reem_container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        padding: '16px 25px'\r\n    },\r\n    balance_carrots: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        fontSize: 34,\r\n        color: '#2c2c2c',\r\n        alignItems: 'center'\r\n    },\r\n    giving_container: {\r\n        paddingLeft: 10\r\n    },\r\n    remaining_container: {\r\n        color: '#2c2c2c',\r\n        fontSize: 12,\r\n        fontWeight: 700\r\n    },\r\n    date_container: {\r\n        color: '#2c2c2c',\r\n        fontSize: 12\r\n    }\r\n}));\r\n\r\nconst StyledTabs = withStyles({\r\n    root: {\r\n        background: '#f6f6f6'\r\n    },\r\n    indicator: {\r\n      backgroundColor: '#EEEEEE',\r\n    },\r\n})(Tabs);\r\n  \r\nconst StyledTab = withStyles(() => ({\r\n    root: {\r\n        textTransform: 'none',\r\n        color: '#2C2C2C',\r\n        // fontSize: 16,\r\n        fontWeight: 'bold',\r\n        letterSpacing: '.5px',\r\n        '&:focus': {\r\n        outline: 'none'\r\n        },\r\n    },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nfunction Balance (props) {\r\n    const classes = useStyles();\r\n    let showEarnedBalance = true;\r\n    let showAllowance = true;\r\n    const { slideIndex, onHandleChange } = props;\r\n    const customCompanyIcon = {\r\n        type: 'emoji',\r\n        value: {\r\n            hexCode: \"02764\",\r\n            id: \"heart\"\r\n        }\r\n    }\r\n\r\n    const handleChange = (event, newValue) => {\r\n        onHandleChange(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.balance_container}>\r\n            <StyledTabs value={slideIndex}\r\n                variant='fullWidth'\r\n                onChange={handleChange}\r\n            >\r\n                {\r\n                    showEarnedBalance && <StyledTab value={0} label=\"Số ❤️ nhận được\" />\r\n                }\r\n                {\r\n                    showAllowance && <StyledTab value={1} label=\"Số ❤️ cho đi\" />\r\n                }\r\n            </StyledTabs>\r\n            {\r\n                slideIndex === 0 && (\r\n                    <div className={classes.reem_container}>\r\n                        <div className={classes.balance_carrots}>\r\n                            100\r\n                            <CarrotIcon\r\n                                style={{fontSize: 24, fontFamily: 'Segoe UI Emoji'}}\r\n                                active\r\n                                url={customCompanyIcon}/>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            {\r\n                slideIndex === 1 && (\r\n                    <div className={classes.reem_container}>\r\n                        <div className={classes.balance_carrots}>\r\n                            <div>\r\n                                {/* {this.props.mePointsToGive !== null\r\n                                ? this.props.mePointsToGive\r\n                                : ''} */}\r\n                                200\r\n                            </div>\r\n                            <CarrotIcon\r\n                                style={{ fontSize: 24, fontFamily: 'Segoe UI Emoji' }}\r\n                                active\r\n                                url={customCompanyIcon}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.giving_container}>\r\n                            <div className={classes.remaining_container}>\r\n                                Remaining Allowance\r\n                            </div>\r\n                            <div className={classes.date_container}>\r\n                                Refreshes on:{' '}\r\n                                {moment()\r\n                                .add(1, 'months')\r\n                                .startOf('month')\r\n                                .format('M/D/YY')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Balance","import React from 'react';\r\nimport ReactHoverObserver from 'react-hover-observer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport classNames from 'classnames';\r\nimport { getProfileFullName } from '../assets/Util/text';\r\nimport { getBadgeObjectForName, getImageForBadge } from '../assets/Util/BadgesInfo';\r\nimport CarrotIcon from './CarrotIcon';\r\nimport { ProfilePic } from '../assets/Util/profilePic';\r\n\r\nconst useStyle = makeStyles({\r\n    feed_card_header_text: {\r\n        flexFlow: 'row wrap',\r\n        display: 'flex',\r\n        alignItems: 'baseline'\r\n    },\r\n    username_clickable: {\r\n        cursor: 'pointer',\r\n        color: '#2c2c2c'\r\n    },\r\n    feed_card_from: {\r\n        fontWeight: 600,\r\n        whiteSpace: 'normal',\r\n        // fontSize: 14\r\n    },\r\n    feed_card_to: {\r\n        fontWeight: 600,\r\n        whiteSpace: 'normal',\r\n        // fontSize: 14\r\n    },\r\n    feed_card_badge_img: {\r\n        width: 20,\r\n        height: 20,\r\n        margin: '0 3px',\r\n        whiteSpace: 'normal'\r\n    },\r\n    username_clickable_to_span: {\r\n        color: '#f40',\r\n        cursor: 'pointer'\r\n    },\r\n    feed_card_carrots: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        margin: '16px 0',\r\n        padding: 12,\r\n        color: '#2c2c2c'\r\n    },\r\n    users_list_container: {\r\n        position: 'relative',\r\n        cursor: 'pointer',\r\n        color: '#2C2C2C'\r\n    },\r\n    user_list_hover : {\r\n        position: 'absolute',\r\n        width: 300,\r\n        top: 20,\r\n        left: -10,\r\n        zIndex: 99,\r\n        borderRadius: 2,\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        backgroundColor: 'white',\r\n        transition: 'transform 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, opacity 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\r\n        boxSizing: 'border-box',\r\n        WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)',\r\n        boxShadow: 'rgba(0, 0, 0, 0.12) 0px 1px 6px, rgba(0, 0, 0, 0.12) 0px 1px 4px',\r\n        overflowY: 'auto'\r\n    }\r\n})\r\n\r\nconst ClickableFromUserName = ({ user }) => {\r\n    // const onClick = () => {\r\n    //   onUserClicked(user);\r\n    // };\r\n    const classes = useStyle();\r\n    return (\r\n      <p\r\n        // onClick={onClick}\r\n        className={\r\n          user.isDeleted\r\n            ? classNames(classes.username_clickable, classes.feed_card_from, classes.deactivated_user)\r\n            : classNames(classes.username_clickable , classes.feed_card_from)\r\n        }\r\n        style={{ marginBottom: 0 }}\r\n      >\r\n        {user.isDeleted ? 'Deactivated User' : getProfileFullName(user)}\r\n      </p>\r\n    );\r\n};\r\n\r\nconst ClickableUserName = ({ user }) => {\r\n    // const onClick = () => {\r\n    //     onUserClicked(user);\r\n    // };\r\n    const classes = useStyle();\r\n    return (\r\n        <p\r\n        // onClick={onClick}\r\n          className={\r\n            user.isDeleted ? 'deactivated_user' : classes.username_clickable_to_span\r\n          }\r\n          style={{ marginBottom: 0 }}\r\n        >\r\n          {user.isDeleted ? 'Deactivated User' : getProfileFullName(user)}\r\n        </p>\r\n    )\r\n}\r\nfunction FeedCardTitle(props) {\r\n    const classes = useStyle();\r\n    // const to = props.to.users;\r\n\r\n    const hasBadge = () => {\r\n        const badge = props.badges && props.badges.length > 0\r\n            ? getBadgeObjectForName(props.badges[0])\r\n            : null\r\n        if (badge) {\r\n            return (\r\n                <span className={classes.feed_card_gave}>\r\n                    &nbsp;recognized and gave a{' '}\r\n                    <img className={classes.feed_card_badge_img}\r\n                        alt={badge.displayName}\r\n                        title={badge.displayName}\r\n                        src={getImageForBadge(badge, true)}\r\n                    />\r\n                    {badge.displayName} badge to&nbsp;\r\n                </span>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <span className={classes.feed_card_gave} style={{ display: 'contents', marginBottom: 0 }}>\r\n                    &nbsp;recognized&nbsp;\r\n                </span>\r\n            )\r\n        }\r\n    }\r\n\r\n    const UserNameComponent = (props) => {\r\n        const onClickListItem = (user) => {\r\n            // onUserClicked(user)\r\n            console.log('onUserClicked')\r\n        }\r\n        const usersToShow = Array.from(props.users);\r\n        usersToShow.shift();\r\n        return (\r\n            <div className={classes.users_list_container} style={{display: 'flex'}}>\r\n                <ClickableUserName \r\n                    user={props.users[0]}\r\n                    isTo\r\n                    // onUserClicked={onUserClicked}\r\n                />\r\n                &nbsp;and {`${props.users.length - 1} others`}\r\n                {\r\n                    props.isHovering && (\r\n                        <div className={classes.user_list_hover}>\r\n                            <List>\r\n                                {\r\n                                    usersToShow.map((user) => (\r\n                                        <ListItem\r\n                                            button\r\n                                            key={user.id}\r\n                                            onClick={(user) => onClickListItem(user)}\r\n                                        >\r\n                                            <ListItemAvatar>\r\n                                                <ProfilePic size={40} user={user} />\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={getProfileFullName(user)} />\r\n                                        </ListItem>\r\n                                    ))\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.feed_card_header_text}>\r\n            <ClickableFromUserName \r\n                user={props.from}\r\n                // onUserClicked={onUserClicked()}\r\n            />\r\n            {hasBadge()}\r\n            {props.to.length > 2 ? (\r\n                <span className={classes.feed_card_to} style={{ display: 'flex' }}>\r\n                    <ReactHoverObserver>\r\n                        <UserNameComponent\r\n                            users={props.to}\r\n                            // onUserClicked={onUserClicked}\r\n                        />\r\n                    </ReactHoverObserver>\r\n                </span>\r\n            ) : Number(props.to.length) === 1 ? (\r\n                <span className={classes.feed_card_to} style={{display: 'flex'}}>\r\n                    <ClickableUserName\r\n                        user={props.to[0]}\r\n                        // isTo\r\n                        // onUserClicked={this.onUserClicked}\r\n                    />\r\n                </span>\r\n            ) : (\r\n                <span className={classes.feed_card_to} style={{display: 'flex'}}>\r\n                    <ClickableUserName\r\n                        user={props.to[0]}\r\n                        // isTo\r\n                        // onUserClicked={this.onUserClicked}\r\n                    />\r\n                    <span className=\"feed-card-gave\">&nbsp;and&nbsp;</span>\r\n                    <ClickableUserName\r\n                        user={props.to[1]}\r\n                        // isTo\r\n                        // onUserClicked={this.onUserClicked}\r\n                    />\r\n                </span>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeedCardTitle;\r\n\r\nexport const FeedValue = (props) => {\r\n    const classes = useStyle();\r\n    return (\r\n        <div className={classes.feed_card_carrots}>\r\n            <div>{props.value}</div>\r\n            <CarrotIcon\r\n                style={{ fontSize: 20, fontFamily: 'Segoe ui emoji' }}\r\n                active\r\n                url={props.customCompanyIcon}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { getter } from '../assets/Util/object';\r\nimport { ProfilePic } from '../assets/Util/profilePic';\r\nimport { getAgoTime } from '../assets/Util/time';\r\nimport { getPostFormattedMessage } from '../assets/Util/text';\r\nimport FeedCardTitle, { FeedValue } from './FeedComponent';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst StyledCard = withStyles({\r\n    root: {\r\n        background: '#FFFFFF',\r\n        border: '0.5px solid #EEEEEE',\r\n        boxSizing: 'border-box',\r\n        borderRadius: 2,\r\n        boxShadow: 'none',\r\n        overflow: 'visible',\r\n    }\r\n})(Card);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        // marginLeft: '5px',\r\n        // marginRight: '5px',\r\n        marginBottom: '12px',\r\n    },\r\n    feed_card_header: {\r\n        display: 'flex',\r\n        padding: 16,\r\n        position: 'relative'\r\n    },\r\n    feed_card_title: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        paddingRight: 45,\r\n        marginLeft: 16\r\n    },\r\n    feed_carrot_value: {\r\n        display: 'inline-block',\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 4,\r\n        color: '#000',\r\n        fontSize: 18,\r\n        fontWeight: 700\r\n    },\r\n    feed_card_carrots: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        margin: '16px 0',\r\n        padding: 12,\r\n        color: '#2c2c2c'\r\n    },\r\n    feed_carrot_time: {\r\n        color: 'rgba(0,0,0,.54)',\r\n        // fontSize: 14\r\n    },\r\n    feed_card_message: {\r\n        color: '#2c2c2c',\r\n        padding: '0 16px 16px',\r\n        whiteSpace: 'pre-wrap',\r\n        fontWeight: 400,\r\n        // fontSize: 14\r\n    }\r\n}));\r\n\r\nconst renderAvatar = (card) => {\r\n    const feedType = getter(['card', 'type'], card) || 'recognition';\r\n    switch (feedType) {\r\n        case 'recognition':\r\n        default: {\r\n            return (\r\n            <div style={{width: 40, height: 40}}>\r\n                <ProfilePic size={40} user={card.from} />\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst customCompanyIcon = {\r\n    type: 'emoji',\r\n    value: {\r\n        hexCode: \"02764\",\r\n        id: \"heart\"\r\n    }\r\n}\r\n\r\nfunction FeedCard(props) {\r\n    const classes = useStyles();\r\n    // const [showEnterComment, setShowEnterComment] = useState();\r\n    // const [menuAnchorEl, setMenuAnchorEl] = useState(null);\r\n    // const [isRemoveMediaAlertOpen, setIsRemoveMediaAlertOpen] = useState(false);\r\n    // const [isDeletePostModalOpen, setIsDeletePostModalOpen] = useState(false);\r\n    const { card } = props;\r\n    const feedType = getter(['card', 'type'], card) || 'recognition';\r\n    return (\r\n        <StyledCard key={card.id} className={classes.card}>\r\n            <div className={classes.feed_card_header}>\r\n                {renderAvatar(card)}\r\n                <div className={classes.feed_card_title}>\r\n                    {\r\n                        feedType === 'recognition' ? (\r\n                            <FeedCardTitle\r\n                                to={card.to}\r\n                                from={card.from}\r\n                                badges={card.badges}\r\n                                coreValue={card.coreValue}\r\n                            />\r\n                        ) : (\r\n                            // <FeedAnniversaryTitle to={this.props.card.to} type={feedType} />\r\n                            <div>FeedAnniversaryTitle</div>\r\n                        )\r\n                    }\r\n                    <span className={classes.feed_carrot_time} style={{ display: 'flex', alignItems: 'center' }}>\r\n                        {getAgoTime(card.created_at)}\r\n                    </span>\r\n                </div>\r\n                {card.carrots_each > 0 && (\r\n                    <div className={classes.feed_carrot_value}>\r\n                    <FeedValue\r\n                        customCompanyIcon={customCompanyIcon}\r\n                        value={ card.carrots_each * card.to.length }\r\n                    />\r\n                    </div>\r\n                )}\r\n                {/* {mediaUrl && mediaUrl.length > 0 && isImage ? (\r\n                    <div className=\"feed-image__div\">\r\n                        <Img className=\"media__Image\" alt=\"media\" src={mediaUrl} />\r\n                    </div>\r\n                    ) : (\r\n                    <div className=\"feed-media__div\">\r\n                        <Img className=\"media__Image\" alt=\"media\" src={mediaUrl} />\r\n                    </div>\r\n                )} */}\r\n                \r\n            </div>\r\n            <div className={classes.feed_card_message}>\r\n                {getPostFormattedMessage(\r\n                    card.message,\r\n                    card.taggedUsers\r\n                    // this.onUserClicked,\r\n                )}\r\n            </div>\r\n        </StyledCard>\r\n    )\r\n}\r\n\r\nexport default FeedCard","import moment from 'moment';\r\n\r\nexport const getAgoTime = (serTime) => {\r\n    const time = moment(serTime);\r\n\r\n    if (Math.abs(moment().diff(time)) < 1000) {\r\n        return 'just now';\r\n    }\r\n\r\n    return time.fromNow();\r\n}","import React, { useEffect, useState } from 'react';\r\n// import InfiniteScroll from 'react-infinite-scroll-component';\r\nimport FeedCard from './FeedCard';\r\nimport axios from 'axios';\r\n\r\nfunction Feed() {\r\n    const [homeFeed, setHomeFeed] = useState([]);\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        axios('https://camon.twgroup.vn/api/v1/feed', {\r\n            method: 'get',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': 'eyJhbGciOiJSUzI1NiJ9.eyJpZCI6IjE0NWRjNGI3LWQyODEtNDIzNi1hZjYwLWM2MmI3NDk3YmVjYSIsImVtYWlsIjoicGhhdGx0QHR3Z3JvdXAudm4ifQ.Ft8bNFXhOSbFneB_A4_zqzM3QMpzOEpHUo-OuAOJAC-nDqb3M1S0mGtqcMhadbdP8LP0fws9ecK3FNgvazKf1btp6Ojg5hCxORy2Wc8LAohb_cl4T3_DKy44XvYkVKM8zX61WLud2yUcTrpe46cbX80n6ItahSNvvQNtR0j_x-BzeaSr0MX13hrftKqGdFZGG6NKOS9THEHzNLXhkcG3m4vxXv3rNPyeDMQIimw3EF2FNjBNhZJff2Dj0_QtullEm26hf4NrS5ZjZBPJJo6SgSH7-M4hrOtPTAhLB0_QsBJm6W4Oq9OYd-cxe470WpeSz1TIPuVLJV9TEKW95lcDK-SXBH781xwxvr3WLpbK7qe-RdGnEOl1ymnoJAH7TpIWCAsiVUOmob3xjUDrvuylLACQ43k5sfh4au9vch9-AIR74US0uIdJZGfnPeUGc4QMz8rrlztnRhdvLBwErWkqg-lebjICvWg-5GQm6FPmpalNxTBB1QX20B-3Hg1hr8LqiptVWhn6156DSRwxjLCgyaQrsq707fseYZbKDRi35VVus9dMhCTVlQ11SH2TLOpd8n1EeHsL3ESObtdXzNFrVKgKAVnQawWnYM1ZEim4yzaVBbHgKqB2QKCupdj-U6pMH0oVA8t1se0RuRMageF4_TRlAnOC1Oq2z0Lhmv_VAlI'\r\n            }\r\n        }).then((res) => {\r\n            setHomeFeed(res.data.data)\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {/* <InfiniteScroll\r\n                dataLength={homeFeed.length + Math.random()}\r\n                next={newPostOnNext}\r\n                hasMore={!isEndOfFeed}\r\n                style={{\r\n                    paddingBottom: homeFeed.length > 0 ? 100 : 0,\r\n                    overflow: 'unset'\r\n                }}\r\n                loader={!isEndOfFeed && !isHomeFeedEmpty && renderLoadingPulse()}\r\n                endMessage={\r\n                    isEndOfFeed && !isHomeFeedEmpty && renderEndMessage()\r\n                }\r\n            >\r\n                \r\n            </InfiniteScroll> */}\r\n            {\r\n                homeFeed.map((feed) => (\r\n                    <FeedCard key={feed.id} card={feed} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed;","import React from 'react';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n  toggleOverlay: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    right: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    zIndex: '99',\r\n  },\r\n  paper: {\r\n    background: '#fff',\r\n    boxShadow: '0px 2px 7px rgba(0, 0, 0, 0.15)',\r\n    overflow: 'hidden',\r\n    zIndex: 9999,\r\n  },\r\n};\r\n\r\nfunction DropdownMenu (props) {\r\n    const {classes, open, onClose, anchorEl, children, placement} = props;\r\n\r\n    // const [dropdownMenu, setDropdownMenu] = useState(false);\r\n    // const [actionsPopover, setActionsPopover] = useState(null);\r\n  \r\n    // const onActionClick = (e) => {\r\n    //     e.preventDefault();\r\n    //     setDropdownMenu(!dropdownMenu);\r\n    // }\r\n\r\n    // const handleActionsPopoverClose = () => {\r\n    //     setActionsPopover(false)\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            {open && (\r\n                <div className={classes.toggleOverlay} onClick={onClose}></div>\r\n            )}\r\n            <Popper\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                style={{ zIndex: 9999 }}\r\n                placement={placement ? placement : 'bottom'}\r\n                transition\r\n            >\r\n                {({ TransitionProps }) => (\r\n                    <Fade {...TransitionProps} timeout={350}>\r\n                    <div className={classes.paper}>{children}</div>\r\n                    </Fade>\r\n                )}\r\n            </Popper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(DropdownMenu);\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport DropIcon from '@material-ui/icons/ArrowDropDown';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DropdownMenu from '../components/DropdownMenu';\r\nimport { getProfileFullName } from '../assets/Util/text';\r\nimport classNames from 'classnames';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    right_column_box: {\r\n        position: 'relative',\r\n        background: '#FFFFFF',\r\n        border: '0.5px solid #EEEEEE',\r\n        borderRadius: 2,\r\n        padding: 20,\r\n        marginBottom: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap'\r\n    },\r\n    right_column_header: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        flexGrow: 1\r\n    },\r\n    right_column_header_text: {\r\n        fontWeight: 700,\r\n        // fontSize: 16,\r\n        color: '#2c2c2c',\r\n        flexGrow: 1\r\n    },\r\n    dropIcon: {\r\n        position: 'absolute',\r\n        right: 2,\r\n        color: '#4A4A4A',\r\n    },\r\n    top_receivers_row_div: {\r\n        position: 'relative',\r\n        borderBottom: '1px solid #e0e0e0',\r\n        paddingBottom: 5,\r\n        paddingTop: 5\r\n    },\r\n    top_receivers_name: {\r\n        color: '#2c2c2c',\r\n        // fontSize: 14,\r\n        paddingRight: 40,\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    top_receivers_carrots: {\r\n        display: 'flex',\r\n        position: 'absolute',\r\n        right: 0\r\n    },\r\n    top_receivers_carrots_text: {\r\n        color: '#212121',\r\n        // fontSize: 14,\r\n        fontWeight: 700\r\n    }\r\n}));\r\n\r\nconst StyledButton = withStyles({\r\n    root: {\r\n        textTransform: 'none',\r\n        // width: 160,\r\n        minHeight: 30,\r\n        padding: '5px 8px',\r\n        paddingRight: 28,\r\n        position: 'relative',\r\n        '&:focus': {\r\n            outline: 'none',\r\n        }\r\n    },\r\n    label: {\r\n        color: '#4A4A4A',\r\n        fontSize: 15,\r\n        justifyContent: 'start',\r\n        fontWeight: 'lighter',\r\n    },\r\n})(Button);\r\n\r\nconst topReceivers = [//call API to get list\r\n    {\r\n        id: '0',\r\n        count: 6,\r\n        user: {\r\n            pointsEarned: 90,\r\n            pointsEarnedThisMonth: 90,\r\n            pointsGiven: 50,\r\n            totalPointsEarned: 90,\r\n            totalPointsGiven: 50,\r\n            profile: {\r\n                first_name: 'Võ',\r\n                last_name: 'Minh Nguyệt'\r\n            }\r\n        }\r\n    },\r\n    {\r\n        id: '1',\r\n        count: 4,\r\n        user: {\r\n            pointsEarned: 60,\r\n            pointsEarnedThisMonth: 60,\r\n            pointsGiven: 20,\r\n            totalPointsEarned: 60,\r\n            totalPointsGiven: 20,\r\n            profile: {\r\n                first_name: 'Võ',\r\n                last_name: 'Xuân Bách'\r\n            }\r\n        }\r\n    },\r\n    {\r\n        id: '2',\r\n        count: 3,\r\n        user: {\r\n            pointsEarned: 60,\r\n            pointsEarnedThisMonth: 60,\r\n            pointsGiven: 20,\r\n            totalPointsEarned: 60,\r\n            totalPointsGiven: 20,\r\n            profile: {\r\n                first_name: 'Nguyễn',\r\n                last_name: 'Minh Ý'\r\n            }\r\n        }\r\n    },\r\n    {\r\n        id: '3',\r\n        count: 1,\r\n        user: {\r\n            pointsEarned: 20,\r\n            pointsEarnedThisMonth: 20,\r\n            pointsGiven: 40,\r\n            totalPointsEarned: 20,\r\n            totalPointsGiven: 40,\r\n            profile: {\r\n                first_name: 'Trương',\r\n                last_name: 'Quốc Huy'\r\n            }\r\n        }\r\n    }\r\n]\r\n\r\nfunction TopReceivers() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(1);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleOptionClick = (event) => {\r\n        setAnchorEl(anchorEl ? null : event.currentTarget);\r\n    }\r\n\r\n    const handleMenuItemClick = (e, idx) => {\r\n        let filterBy;\r\n        if (idx === 1) {\r\n            filterBy = 'monthly';\r\n        }\r\n\r\n        else if (idx === 2) {\r\n            filterBy = 'quarterly';\r\n        }\r\n\r\n        else {\r\n            filterBy = 'alltime';\r\n        }\r\n\r\n        //dispatch action\r\n        // this.props.dispatch(getSidebarInfoAction(filterBy));\r\n        setValue(idx);\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const onUserClicked = (user) => {\r\n        //call API\r\n        // this.props.dispatch(uiActions.showUserProfile(user));\r\n        alert(\"click user\");\r\n    }\r\n    \r\n    const getTopReceiversSorted = () => {\r\n        \r\n        let sorted = topReceivers.sort((a, b) => a.count < b.count);\r\n        sorted = sorted.length > 5 ? sorted.slice(0, 5) : sorted;\r\n        return sorted;\r\n    };\r\n\r\n    let buttonLabel;\r\n\r\n    if (value === 1) {\r\n      buttonLabel = 'Monthly';\r\n    }\r\n\r\n    else if (value === 2) {\r\n      buttonLabel = 'Quarterly';\r\n    }\r\n\r\n    else {\r\n      buttonLabel = 'All Time';\r\n    }\r\n\r\n    const isEmpty = topReceivers.length === 0;\r\n\r\n    const CarrotText = (props) => (\r\n      <div className={classes.top_receivers_carrots}>\r\n        <div\r\n          className={classes.top_receivers_carrots_text}\r\n          style={{ marginRight: 10 }}\r\n        >\r\n          {props.value}\r\n        </div>\r\n        {/* <img src={ic_gc_carrot} alt=\"carrot\" className=\"allowance-change-carrrot__img\" /> */}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.right_column_box}>\r\n            <div className={classes.right_column_header}>\r\n                <div className={classes.right_column_header_text}>\r\n                    Top Receivers\r\n                </div>\r\n                <StyledButton\r\n                    aria-label='Options'\r\n                    aria-owns={anchorEl ? 'menu' : null}\r\n                    aria-haspopup='true'\r\n                    onClick={handleOptionClick}\r\n                >\r\n                    {buttonLabel}\r\n                    <DropIcon className={classes.dropIcon} />\r\n                </StyledButton>\r\n                <DropdownMenu\r\n                    id=\"menu\"\r\n                    anchorEl={anchorEl}\r\n                    open= {Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                    PaperProps={{\r\n                        style: {\r\n                            width: 150,\r\n                        },\r\n                    }}\r\n                >\r\n                    <MenuItem\r\n                        key={1}\r\n                        // selected={this.state.value === 1}\r\n                        onClick={(e) => handleMenuItemClick(e, 1)}\r\n                    >\r\n                        Monthly\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                        key={2}\r\n                        // selected={this.state.value === 1}\r\n                        onClick={(e) => handleMenuItemClick(e, 2)}\r\n                    >\r\n                        Quarterly\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                        key={3}\r\n                        // selected={this.state.value === 2}\r\n                        onClick={(e) => handleMenuItemClick(e, 3)}\r\n                    >\r\n                        All Time\r\n                    </MenuItem>\r\n                </DropdownMenu>\r\n            </div>\r\n            <div className='container' style={{marginTop: '10px'}}>\r\n            {!isEmpty ?\r\n            (\r\n                getTopReceiversSorted().map((receiver) => (\r\n                    <div key={receiver.id} className={classNames(\r\n                        'row',\r\n                        'justify-content-start',\r\n                        classes.top_receivers_row_div)}>\r\n                        <div className={classes.top_receivers_name} style={{cursor: 'pointer'}} \r\n                            onClick={() => this.onUserClicked(receiver.user)}>\r\n                            {getProfileFullName(receiver.user)}\r\n                        </div>\r\n                        <CarrotText value={receiver.count} />\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                    <div className=\"container top_receivers_noname_container\">\r\n                        <div className=\"row justify-content-center medium_icon_popovers\">\r\n                            <span role=\"img\" aria-label=\"Smirking Face\">\r\n                            😏\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"row justify-content-center top_receivers_noname\">\r\n                            No top receivers, yet\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopReceivers","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport { getBadgeObjectForName, getImageForBadge } from '../assets/Util/BadgesInfo';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    right_column_box: {\r\n        position: 'relative',\r\n        background: '#FFFFFF',\r\n        border: '0.5px solid #EEEEEE',\r\n        borderRadius: 2,\r\n        padding: 20,\r\n        marginBottom: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap'\r\n    },\r\n    right_column_header: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        flexGrow: 1\r\n    },\r\n    right_column_header_text: {\r\n        fontWeight: 700,\r\n        // fontSize: 16,\r\n        color: '#2c2c2c',\r\n        flexGrow: 1\r\n    },\r\n    top_receivers_row_div: {\r\n        position: 'relative',\r\n        borderBottom: '1px solid #e0e0e0',\r\n        paddingBottom: 5,\r\n        paddingTop: 5\r\n    },\r\n    top_receivers_name: {\r\n        color: '#2c2c2c',\r\n        // fontSize: 14,\r\n        paddingRight: 40,\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    top_receivers_carrots: {\r\n        display: 'flex',\r\n        position: 'absolute',\r\n        right: 0\r\n    },\r\n    top_receivers_carrots_text: {\r\n        color: '#212121',\r\n        fontSize: 14,\r\n        fontWeight: 700\r\n    },\r\n    top_badges_names: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    top_badges_img: {\r\n        width: 20,\r\n        height: 20,\r\n        marginRight: 5\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst topBadges = [\r\n    {\r\n        count: 2,\r\n        id: \"detail_master\"\r\n    },\r\n    {\r\n        count: 1,\r\n        id: \"teamwork\"\r\n    },\r\n    {\r\n        count: 2,\r\n        id: \"culture\"\r\n    },\r\n    {\r\n        count: 2,\r\n        id: \"closer\"\r\n    }\r\n]\r\n\r\nfunction TopBadges() {\r\n    const classes = useStyles();\r\n\r\n    const BadgeText = (props) => {\r\n        const badgeObj = getBadgeObjectForName(props.name);\r\n        const badgeImg = getImageForBadge(badgeObj, true);\r\n        return (\r\n          <div className={classes.top_badges_names}>\r\n            <img src={badgeImg} alt={badgeObj.displayName} className={classes.top_badges_img} />\r\n            <div className={classes.top_receivers_name}>{badgeObj.displayName}</div>\r\n          </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={classes.right_column_box}>\r\n            <div className={classes.right_column_header}>\r\n                <div className={classes.right_column_header_text}>\r\n                    Top Badges\r\n                </div>\r\n            </div>\r\n            <div className='container' style={{marginTop: '10px'}}>\r\n                <div>\r\n                    {\r\n                        (topBadges && topBadges.length > 0) ?\r\n                            topBadges.map((badge) => (\r\n                                <div key={badge.id} className={classNames(\r\n                                    'row',\r\n                                    'justify-content-start',\r\n                                    classes.top_receivers_row_div)}>\r\n                                        <BadgeText name={badge.id} />\r\n                                        <div className={classNames(classes.top_receivers_carrots, classes.top_receivers_carrots_text)}>\r\n                                            {badge.count}\r\n                                        </div>\r\n                                </div>\r\n                        ))\r\n                        : \r\n                        (\r\n                            <div className=\"container top_receivers_noname_container\">\r\n                                <div className=\"row justify-content-center medium_icon_popovers\">\r\n                                    <span role=\"img\" aria-label=\"Smirking Face\">\r\n                                    🤔\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"row justify-content-center top_receivers_noname\">\r\n                                    No top badges, yet\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBadges","import React, { useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PostRecognition from '../components/PostRecognition';\r\nimport InfoRecognition from '../components/InfoRecognition';\r\nimport Feed from '../components/Feed';\r\nimport TopReceivers from '../components/TopReceivers';\r\nimport TopBadges from '../components/TopBadges';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    fixed_right_panel: {\r\n        position: 'fixed',\r\n        top: 16,\r\n        right: 0,\r\n        overflowY: 'auto',\r\n        maxHeight: 'calc(100vh - 16px)'\r\n    },\r\n}));\r\n\r\nfunction Home () {\r\n    const classes = useStyles();\r\n    const [balanceTabToShow, setBalanceTabToShow] = useState(0);\r\n\r\n    const onHandleTabChange = (tabIndex) => {\r\n        setBalanceTabToShow(tabIndex);\r\n    }\r\n\r\n    const badgeSetStatus = true;//setting\r\n    // const coreValueSetStatus = true;//setting\r\n    return (\r\n        <Container fluid>\r\n            <Row className='position-relative justify-content-start'>\r\n                <Col xs={6} md={6} lg={7} style={{padding: '0 0 0 24px'}}>\r\n                    <PostRecognition\r\n                        switchBalanceTab={onHandleTabChange}\r\n                    />\r\n                    <Feed />\r\n                </Col>\r\n                <Col xs={6} md={6} lg={5} style={{padding: '0 0 0 24px'}} className={classes.fixed_right_panel}>\r\n                    <InfoRecognition \r\n                        slideIndex={balanceTabToShow}\r\n                        onHandleChange={onHandleTabChange}\r\n                    />\r\n                    <TopReceivers />\r\n                    {badgeSetStatus && <TopBadges />}\r\n                    {/* {coreValueSetStatus && <TopCoreValues />} */}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport './sass/main.scss';\r\nimport Home from './pages/Home';\r\n// import NavigationBar from './components/NavigationBar';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n        {/* <NavigationBar /> */}\r\n        <main className=\"main-content\">\r\n            <section>\r\n                <Home />\r\n            </section>\r\n        </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\r\nimport { CssBaseline } from '@material-ui/core';\r\n\r\nconst LIGHT = 300;\r\nconst REGULAR = 400;\r\nconst SEMIBOLD = 500;\r\nconst BOLD = 600;\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#FF4400',\r\n    },\r\n    secondary: {\r\n      main: '#0AD71C',\r\n    },\r\n    text: {\r\n      main: 'red',\r\n    },\r\n  },\r\n  props: {\r\n    MuiDialogTitle: {\r\n      disableTypography: true,\r\n    },\r\n    MuiButtonBase: {\r\n      disableRipple: true,\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      '@global': {\r\n        button: {\r\n          '&:focus': {\r\n            outline: 'none !important',\r\n          },\r\n        },\r\n        body: {\r\n          backgroundColor: '#f6f6f6',\r\n        },\r\n      },\r\n    },\r\n    MuiIconButton: {\r\n      root: {\r\n        '&:focus': {\r\n          outline: 'none !important',\r\n        },\r\n      },\r\n    },\r\n    MuiFormLabel: {\r\n      // Name of the component ⚛️ / style sheet\r\n      root: {\r\n        // Name of the rule\r\n        color: 'rgb(0,0,0,0.38)', // Some CSS\r\n      },\r\n    },\r\n    MuiInput: {\r\n      root: {\r\n        fontSize: '1rem',\r\n      },\r\n      underline: {\r\n        '&:after': {\r\n          borderBottom: '2px solid #FF4400',\r\n          transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\r\n        },\r\n        '&:before': {\r\n          borderBottom: '1px solid rgb(224, 224, 224)',\r\n        },\r\n        '&:hover:before': {\r\n          borderBottom: '1px solid rgb(224, 224, 224) !important',\r\n        },\r\n      },\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        boxShadow: 'none',\r\n        '&:focus': {\r\n          outline: 'none',\r\n        },\r\n      },\r\n      containedPrimary: {\r\n        boxShadow: 'none',\r\n        color: '#FFF',\r\n        minWidth: 80,\r\n        backgroundColor: '#EB6200',\r\n        '&:hover': {\r\n          color: '#FFF',\r\n          backgroundColor: '#F3933C'\r\n        },\r\n      },\r\n      containedSecondary: {\r\n        boxShadow: 'none',\r\n        color: '#FFF',\r\n        '&:hover': {\r\n          color: '#FFF',\r\n        },\r\n      },\r\n    },\r\n    MuiDialogTitle: {\r\n      root: {\r\n        color: '#000',\r\n        fontSize: 20,\r\n        fontWeight: 500,\r\n      },\r\n    },\r\n  },\r\n  typography: {\r\n    fontWeightLight: LIGHT,\r\n    fontWeightRegular: REGULAR,\r\n    fontWeightSemibold: SEMIBOLD,\r\n    fontWeightBold: BOLD,\r\n    fontSize: 16,\r\n    htmlFontSize: 16,\r\n    fontFamily: ['IBM Plex Sans', 'sans-serif'].join(','),\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <App />\r\n    </MuiThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}