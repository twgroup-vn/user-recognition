{"version":3,"sources":["assets/images/logo-twg.svg","components/PostRecognition.jsx","components/CarrotIcon.jsx","components/InfoRecognition.jsx","components/DropdownMenu.jsx","components/TopReceivers.jsx","assets/Util/text.js","components/TopBadges.jsx","pages/Home.jsx","components/NavigationBar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledTabs","withStyles","root","background","indicator","backgroundColor","Tabs","StyledTab","textTransform","color","fontSize","fontWeight","letterSpacing","outline","props","Tab","disableRipple","useStyles","makeStyles","theme","post_container","border","borderRadius","marginBottom","form_container","position","width","p_16","padding","input_row_style","marginLeft","marginRight","PostRecognition","classes","useState","value","setValue","className","style","overflow","centered","variant","onChange","event","newValue","label","classNames","CarrotIcon","active","onClick","size","url","currency","blendMode","type","emojiType","_","get","mixBlendMode","role","aria-label","String","fromCodePoint","parseInt","hexCode","src","alt","SvgIcon","viewBox","id","stroke","strokeWidth","fill","fillRule","cx","cy","r","d","balance_container","reem_container","display","alignItems","justifyContent","balance_carrots","flexDirection","giving_container","paddingLeft","remaining_container","date_container","Balance","slideIndex","onHandleChange","customCompanyIcon","marginTop","moment","add","startOf","format","toggleOverlay","top","right","left","bottom","zIndex","paper","boxShadow","console","log","open","onClose","anchorEl","children","placement","Popper","transition","TransitionProps","Fade","timeout","right_column_box","flexWrap","right_column_header","flexGrow","right_column_header_text","dropIcon","top_receivers_row_div","borderBottom","paddingBottom","paddingTop","top_receivers_name","paddingRight","textOverflow","whiteSpace","top_receivers_carrots","top_receivers_carrots_text","StyledButton","minHeight","Button","topReceivers","count","user","pointsEarned","pointsEarnedThisMonth","pointsGiven","totalPointsEarned","totalPointsGiven","profile","firstName","lastName","TopReceivers","buttonLabel","setAnchorEl","handleMenuItemClick","e","idx","isEmpty","length","CarrotText","aria-owns","aria-haspopup","currentTarget","Boolean","PaperProps","MenuItem","key","sorted","sort","a","b","slice","getTopReceiversSorted","map","receiver","cursor","onUserClicked","TopBadges","fixed_right_panel","overflowY","maxHeight","Home","balanceTabToShow","setBalanceTabToShow","Container","Row","Col","xs","md","lg","InfoRecognition","tabIndex","NavigationBar","Navbar","fixed","expand","bg","Brand","href","Logo","App","window","location","hostname","match","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fbfa2997.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-twg.69a2ae22.svg\";","import React, {useState} from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport classNames from 'classnames';\r\n\r\nconst StyledTabs = withStyles({\r\n    root: {\r\n        background: '#f6f6f6'\r\n    },\r\n    indicator: {\r\n      backgroundColor: '#EEEEEE',\r\n    },\r\n})(Tabs);\r\n  \r\nconst StyledTab = withStyles(() => ({\r\n    root: {\r\n        textTransform: 'none',\r\n        color: '#2C2C2C',\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        letterSpacing: '.5px',\r\n        '&:focus': {\r\n        outline: 'none'\r\n        },\r\n    },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    post_container: {\r\n        border: '.5px solid #EEEEEE',\r\n        background: '#FFFFFF',\r\n        borderRadius: 2,\r\n        marginBottom: 10,\r\n    },\r\n    form_container: {\r\n        position: 'relative',\r\n        width: '100%'\r\n    },\r\n    p_16: {\r\n        padding: 16\r\n    },\r\n    input_row_style: {\r\n        position: 'relative',\r\n        marginBottom: 10,\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n    }\r\n}));\r\n\r\nfunction PostRecognition () {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    const canGivePoints = true;\r\n    return (\r\n        <div className={classes.post_container}>\r\n            <div style={{overflow: 'hidden', width: 'calc(100% - 1px)'}}>\r\n                <StyledTabs\r\n                    centered\r\n                    variant='fullWidth'\r\n                    value={value}\r\n                    onChange={handleChange}>\r\n                    <StyledTab disableRipple label='Give Recognition' />\r\n                </StyledTabs>\r\n            </div>\r\n            <form className={classes.form_container}>\r\n                <div className={classes.p_16}>\r\n                    <div \r\n                        className={classNames(\r\n                            'row',\r\n                            'shoutout-user-select',\r\n                            classes.input_row_style,\r\n                        )}\r\n                    >\r\n                        {/* <DSTypeAhead\r\n                            handleUsers={this.handleTypeAheadUsers}\r\n                            onFocus={this.onUserInputFocus}\r\n                            onBlur={this.onUserInputBlur}\r\n                            // key=\"DSTypeAhead\"\r\n                        /> */}\r\n                    </div>\r\n                    {\r\n                        canGivePoints && (\r\n                            <div\r\n                                className={classNames(\r\n                                'row',\r\n                                'shoutout-impactvalue-select',\r\n                                classes.input_row_style,\r\n                                )}\r\n                            >\r\n                                {/* <ImpactValueSelector\r\n                                    carrots={this.state.carrots}\r\n                                    impact={this.state.impact}\r\n                                    onChange={this.handleImpactValueChange}\r\n                                    options={impactLevels}\r\n                                    selectedUsers={this.state.selectedUsers}\r\n                                    mePointsToGive={this.props.mePointsToGive}\r\n                                    carrotsPerPost={carrotsPerPost}\r\n                                    error={this.state.carrotError}\r\n                                    canGiveCustomAmount={canGiveCustomAmount && canGivePoints}\r\n                                    canGivePoints={canGivePoints}\r\n                                    onImpactOpen={this.onImpactOpen}\r\n                                    onImpactClose={this.onImpactClose}\r\n                                    customCurrency={customCurrency}\r\n                                    customCompanyIcon={customCompanyIcon}\r\n                                /> */}\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostRecognition","import React from 'react';\r\nimport _ from 'lodash';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nfunction CarrotIcon(props) {\r\n  // style={{ fontSize: 73 }}\r\n  const { active, onClick, size, url, currency } = props;\r\n  if (url) {\r\n    const blendMode = active ? 'normal' : 'luminosity';\r\n    if (url.type === 'emoji') {\r\n      const emojiType = _.get(url, ['value', 'type'], 'REGULAR');\r\n      if (emojiType === 'REGULAR') {\r\n        return (\r\n          <span\r\n            className={props.className}\r\n            style={{\r\n              fontSize: size ? `${size}px` : '20px',\r\n              mixBlendMode: blendMode,\r\n              ...props.style,\r\n            }}\r\n            role=\"img\"\r\n            aria-label=\"custom-icon\"\r\n          >\r\n            {String.fromCodePoint(parseInt(url.value.hexCode, 16))}\r\n          </span>\r\n        );\r\n      }\r\n      if (emojiType === 'CUSTOM') {\r\n        return (\r\n          <img\r\n            src={url.value.url}\r\n            alt={currency}\r\n            className={props.className}\r\n            style={{\r\n              width: size ? `${size}px` : '20px',\r\n              mixBlendMode: blendMode,\r\n              ...props.style,\r\n            }}\r\n          />\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <img\r\n        src={url.value}\r\n        alt={currency}\r\n        className={props.className}\r\n        style={{\r\n          width: size ? `${size}px` : '20px',\r\n          mixBlendMode: blendMode,\r\n          ...props.style,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SvgIcon\r\n      className={props.className}\r\n      style={props.style || { fontSize: size ? size : '24' }}\r\n      viewBox=\"0 0 20 20\"\r\n      onClick={onClick}\r\n    >\r\n      <title>Gold</title>\r\n      <desc>Icon for gold</desc>\r\n      <g id=\"Logo\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n        <g id=\"coin-copy-2\">\r\n          <circle\r\n            id=\"Oval\"\r\n            fill={active ? '#FFCF40' : '#C0C0C0'}\r\n            fillRule=\"nonzero\"\r\n            cx=\"10\"\r\n            cy=\"10\"\r\n            r=\"10\"\r\n          />\r\n          <path\r\n            d=\"M5.55578364,15.4442164 C3.98747343,14.1698866 3,12.2196023 3,10 C3,6.07999038 6.07999038,3 10,3 C12.2196023,3 14.1698866,3.98747343 15.4442164,5.55578364 C14.2427551,4.57953682 12.7004073,4 11,4 C7.07999038,4 4,7.07999038 4,11 C4,12.7004073 4.57953682,14.2427551 5.55578364,15.4442164 Z\"\r\n            id=\"Combined-Shape\"\r\n            fill={active ? '#FFBF00' : '#9E9E9E'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M10,0 C4.4285802,0 0,4.4285802 0,10 C0,15.5714198 4.4285802,20 10,20 C15.5714198,20 20,15.5714198 20,10 C20,4.4285802 15.5714198,0 10,0 Z M10,17 C6.07999038,17 3,13.9200096 3,10 C3,6.07999038 6.07999038,3 10,3 C13.9200096,3 17,6.07999038 17,10 C17,13.9200096 13.9200096,17 10,17 Z\"\r\n            id=\"Shape\"\r\n            fill={active ? '#FFDB70' : '#CDCDCD'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M10,19.9966916 L10,19.9966916 C15.5714198,20.1416163 20,15.5053955 20,10 L19.857099,10 C19.1428396,10 18.5713584,10.5795743 18.4285802,11.3039488 C18.142901,13.332272 17.1428396,15.2156706 15.7143208,16.5196193 C14.5714812,17.6786434 13.0000614,18.4030179 11.2857406,18.6928673 C10.5714812,18.6927428 10,19.2721926 10,19.9966916 Z\"\r\n            id=\"Path\"\r\n            fill={active ? '#FFBF00' : '#9E9E9E'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M10,0.00330843364 L10,0.00330843364 C4.4285802,-0.141616265 0,4.49460453 0,10 L0.142900988,10 C0.857160395,10 1.42864158,9.42042571 1.5714198,8.69605123 C1.85709901,6.66772798 2.8571604,4.78432942 4.28567921,3.48038065 C5.42851881,2.32135658 6.99993862,1.5969821 8.71425941,1.3071327 C9.42864158,1.3072572 10,0.727682916 10,0.00330843364 Z\"\r\n            id=\"Path\"\r\n            fill={active ? '#FFD24F' : '#B1B1B1'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M14.2239024,14.4323171 C14.0819512,14.4323171 13.940122,14.4323171 13.7981707,14.2903659 C13.5143902,14.0065854 13.5143902,13.5808537 13.7981707,13.2970732 C14.6496341,12.4456098 15.0753659,11.1684146 15.0753659,10.0331707 C15.0753659,9.60743902 15.3591463,9.32365854 15.784878,9.32365854 C16.2106098,9.32365854 16.4943902,9.60743902 16.4943902,10.0331707 C16.4943902,11.5941463 15.9267073,13.155122 14.9334146,14.2903659 C14.6496341,14.4323171 14.3658537,14.4323171 14.2239024,14.4323171 Z\"\r\n            id=\"Path\"\r\n            fill={active ? '#FFD24F' : '#B1B1B1'}\r\n            fillRule=\"nonzero\"\r\n          />\r\n          <path\r\n            d=\"M8.5,7.5 C8.5,6.67157288 9.17157288,6 10,6 C10.8284271,6 11.5,6.67157288 11.5,7.5 L11.5,12.5 C11.5,13.3284271 10.8284271,14 10,14 C9.17157288,14 8.5,13.3284271 8.5,12.5 L8.5,7.5 Z\"\r\n            id=\"Combined-Shape\"\r\n            fill={active ? '#FFBF00' : '#9E9E9E'}\r\n          />\r\n        </g>\r\n      </g>\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nexport default CarrotIcon;\r\n","import React from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport CarrotIcon from './CarrotIcon';\r\nimport moment from 'moment';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    balance_container: {\r\n        border: '.5px solid #EEEEEE',\r\n        background: '#FFFFFF',\r\n        borderRadius: 2,\r\n        marginBottom: 10,\r\n    },\r\n    reem_container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        padding: '16px 25px'\r\n    },\r\n    balance_carrots: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        fontSize: 34,\r\n        color: '#2c2c2c',\r\n        alignItems: 'center'\r\n    },\r\n    giving_container: {\r\n        paddingLeft: 10\r\n    },\r\n    remaining_container: {\r\n        color: '#2c2c2c',\r\n        fontSize: 12,\r\n        fontWeight: 700\r\n    },\r\n    date_container: {\r\n        color: '#2c2c2c',\r\n        fontSize: 12\r\n    }\r\n}));\r\n\r\nconst StyledTabs = withStyles({\r\n    root: {\r\n        background: '#f6f6f6'\r\n    },\r\n    indicator: {\r\n      backgroundColor: '#EEEEEE',\r\n    },\r\n})(Tabs);\r\n  \r\nconst StyledTab = withStyles(() => ({\r\n    root: {\r\n        textTransform: 'none',\r\n        color: '#2C2C2C',\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        letterSpacing: '.5px',\r\n        '&:focus': {\r\n        outline: 'none'\r\n        },\r\n    },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nfunction Balance (props) {\r\n    const classes = useStyles();\r\n    let showEarnedBalance = true;\r\n    let showAllowance = true;\r\n    const { slideIndex, onHandleChange } = props;\r\n    const customCompanyIcon = {\r\n        type: 'emoji',\r\n        value: {\r\n            hexCode: \"1F3C6\",\r\n            id: \"trophy\"\r\n        }\r\n    }\r\n\r\n    const handleChange = (event, newValue) => {\r\n        onHandleChange(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.balance_container}>\r\n            <StyledTabs value={slideIndex}\r\n                variant='fullWidth'\r\n                onChange={handleChange}\r\n            >\r\n                {\r\n                    showEarnedBalance && <StyledTab value={0} label=\"Earned Balance\" />\r\n                }\r\n                {\r\n                    showAllowance && <StyledTab value={1} label=\"Giving Allowance\" />\r\n                }\r\n            </StyledTabs>\r\n            {\r\n                slideIndex === 0 && (\r\n                    <div className={classes.reem_container}>\r\n                        <div className={classes.balance_carrots}>\r\n                            100\r\n                            <CarrotIcon\r\n                                style={{fontSize: 20, marginLeft: 5, marginTop: 2}}\r\n                                active\r\n                                url={customCompanyIcon}/>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            {\r\n                slideIndex === 1 && (\r\n                    <div className={classes.reem_container}>\r\n                        <div className={classes.balance_carrots}>\r\n                            <div>\r\n                                {/* {this.props.mePointsToGive !== null\r\n                                ? this.props.mePointsToGive\r\n                                : ''} */}\r\n                                200\r\n                            </div>\r\n                            <CarrotIcon\r\n                                style={{ fontSize: 20, marginLeft: 5, marginTop: 2 }}\r\n                                active\r\n                                url={customCompanyIcon}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.giving_container}>\r\n                            <div className={classes.remaining_container}>\r\n                                Remaining Allowance\r\n                            </div>\r\n                            <div className={classes.date_container}>\r\n                                Refreshes on:{' '}\r\n                                {moment()\r\n                                .add(1, 'months')\r\n                                .startOf('month')\r\n                                .format('M/D/YY')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Balance","import React , {useState} from 'react';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n  toggleOverlay: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    right: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    zIndex: '99',\r\n  },\r\n  paper: {\r\n    background: '#fff',\r\n    boxShadow: '0px 2px 7px rgba(0, 0, 0, 0.15)',\r\n    overflow: 'hidden',\r\n    zIndex: 9999,\r\n  },\r\n};\r\n\r\nfunction DropdownMenu (props) {\r\n    console.log(props)\r\n    const {classes, open, onClose, anchorEl, children, placement} = props;\r\n\r\n    // const [dropdownMenu, setDropdownMenu] = useState(false);\r\n    // const [actionsPopover, setActionsPopover] = useState(null);\r\n  \r\n    // const onActionClick = (e) => {\r\n    //     e.preventDefault();\r\n    //     setDropdownMenu(!dropdownMenu);\r\n    // }\r\n\r\n    // const handleActionsPopoverClose = () => {\r\n    //     setActionsPopover(false)\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            {open && (\r\n                <div className={classes.toggleOverlay} onClick={onClose}></div>\r\n            )}\r\n            <Popper\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                style={{ zIndex: 9999 }}\r\n                placement={placement ? placement : 'bottom'}\r\n                transition\r\n            >\r\n                {({ TransitionProps }) => (\r\n                    <Fade {...TransitionProps} timeout={350}>\r\n                    <div className={classes.paper}>{children}</div>\r\n                    </Fade>\r\n                )}\r\n            </Popper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(DropdownMenu);\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport DropIcon from '@material-ui/icons/ArrowDropDown';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DropdownMenu from '../components/DropdownMenu';\r\nimport { getProfileFullName } from '../assets/Util/text';\r\nimport classNames from 'classnames';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    right_column_box: {\r\n        position: 'relative',\r\n        background: '#FFFFFF',\r\n        border: '0.5px solid #EEEEEE',\r\n        borderRadius: 2,\r\n        padding: 20,\r\n        marginBottom: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap'\r\n    },\r\n    right_column_header: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        flexGrow: 1\r\n    },\r\n    right_column_header_text: {\r\n        fontWeight: 700,\r\n        fontSize: 16,\r\n        color: '#2c2c2c',\r\n        flexGrow: 1\r\n    },\r\n    dropIcon: {\r\n        position: 'absolute',\r\n        right: 2,\r\n        color: '#4A4A4A',\r\n    },\r\n    top_receivers_row_div: {\r\n        position: 'relative',\r\n        borderBottom: '1px solid #e0e0e0',\r\n        paddingBottom: 5,\r\n        paddingTop: 5\r\n    },\r\n    top_receivers_name: {\r\n        color: '#2c2c2c',\r\n        fontSize: 14,\r\n        paddingRight: 40,\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    top_receivers_carrots: {\r\n        display: 'flex',\r\n        position: 'absolute',\r\n        right: 0\r\n    },\r\n    top_receivers_carrots_text: {\r\n        color: '#212121',\r\n        fontSize: 14,\r\n        fontWeight: 700\r\n    }\r\n}));\r\n\r\nconst StyledButton = withStyles({\r\n    root: {\r\n        textTransform: 'none',\r\n        // width: 160,\r\n        minHeight: 30,\r\n        padding: '5px 8px',\r\n        paddingRight: 28,\r\n        position: 'relative',\r\n        '&:focus': {\r\n            outline: 'none',\r\n        }\r\n    },\r\n    label: {\r\n        color: '#4A4A4A',\r\n        fontSize: 15,\r\n        justifyContent: 'start',\r\n        fontWeight: 'lighter',\r\n    },\r\n})(Button);\r\n\r\nconst topReceivers = [//call API to get list\r\n    {\r\n        id: '0',\r\n        count: 6,\r\n        user: {\r\n            pointsEarned: 90,\r\n            pointsEarnedThisMonth: 90,\r\n            pointsGiven: 50,\r\n            totalPointsEarned: 90,\r\n            totalPointsGiven: 50,\r\n            profile: {\r\n                firstName: 'Võ',\r\n                lastName: 'Minh Nguyệt'\r\n            }\r\n        }\r\n    },\r\n    {\r\n        id: '1',\r\n        count: 4,\r\n        user: {\r\n            pointsEarned: 60,\r\n            pointsEarnedThisMonth: 60,\r\n            pointsGiven: 20,\r\n            totalPointsEarned: 60,\r\n            totalPointsGiven: 20,\r\n            profile: {\r\n                firstName: 'Võ',\r\n                lastName: 'Xuân Bách'\r\n            }\r\n        }\r\n    },\r\n    {\r\n        id: '2',\r\n        count: 3,\r\n        user: {\r\n            pointsEarned: 60,\r\n            pointsEarnedThisMonth: 60,\r\n            pointsGiven: 20,\r\n            totalPointsEarned: 60,\r\n            totalPointsGiven: 20,\r\n            profile: {\r\n                firstName: 'Nguyễn',\r\n                lastName: 'Minh Ý'\r\n            }\r\n        }\r\n    },\r\n    {\r\n        id: '3',\r\n        count: 1,\r\n        user: {\r\n            pointsEarned: 20,\r\n            pointsEarnedThisMonth: 20,\r\n            pointsGiven: 40,\r\n            totalPointsEarned: 20,\r\n            totalPointsGiven: 40,\r\n            profile: {\r\n                firstName: 'Trương',\r\n                lastName: 'Quốc Huy'\r\n            }\r\n        }\r\n    }\r\n]\r\n\r\nfunction TopReceivers() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(1);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleOptionClick = (event) => {\r\n        setAnchorEl(anchorEl ? null : event.currentTarget);\r\n    }\r\n\r\n    const handleMenuItemClick = (e, idx) => {\r\n        let filterBy;\r\n        if (idx === 1) {\r\n            filterBy = 'monthly';\r\n        }\r\n\r\n        else if (idx === 2) {\r\n            filterBy = 'quarterly';\r\n        }\r\n\r\n        else {\r\n            filterBy = 'alltime';\r\n        }\r\n\r\n        //dispatch action\r\n        // this.props.dispatch(getSidebarInfoAction(filterBy));\r\n        setValue(idx);\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const onUserClicked = (user) => {\r\n        //call API\r\n        // this.props.dispatch(uiActions.showUserProfile(user));\r\n        alert(\"click user\");\r\n    }\r\n    \r\n    const getTopReceiversSorted = () => {\r\n        \r\n        let sorted = topReceivers.sort((a, b) => a.count < b.count);\r\n        sorted = sorted.length > 5 ? sorted.slice(0, 5) : sorted;\r\n        return sorted;\r\n    };\r\n\r\n    let buttonLabel;\r\n\r\n    if (value === 1) {\r\n      buttonLabel = 'Monthly';\r\n    }\r\n\r\n    else if (value === 2) {\r\n      buttonLabel = 'Quarterly';\r\n    }\r\n\r\n    else {\r\n      buttonLabel = 'All Time';\r\n    }\r\n\r\n    const isEmpty = topReceivers.length === 0;\r\n\r\n    const CarrotText = (props) => (\r\n      <div className={classes.top_receivers_carrots}>\r\n        <div\r\n          className={classes.top_receivers_carrots_text}\r\n          style={{ marginRight: 10 }}\r\n        >\r\n          {props.value}\r\n        </div>\r\n        {/* <img src={ic_gc_carrot} alt=\"carrot\" className=\"allowance-change-carrrot__img\" /> */}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.right_column_box}>\r\n            <div className={classes.right_column_header}>\r\n                <div className={classes.right_column_header_text}>\r\n                    Top Receivers\r\n                </div>\r\n                <StyledButton\r\n                    aria-label='Options'\r\n                    aria-owns={anchorEl ? 'menu' : null}\r\n                    aria-haspopup='true'\r\n                    onClick={handleOptionClick}\r\n                >\r\n                    {buttonLabel}\r\n                    <DropIcon className={classes.dropIcon} />\r\n                </StyledButton>\r\n                <DropdownMenu\r\n                    id=\"menu\"\r\n                    anchorEl={anchorEl}\r\n                    open= {Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                    PaperProps={{\r\n                        style: {\r\n                            width: 150,\r\n                        },\r\n                    }}\r\n                >\r\n                    <MenuItem\r\n                        key={1}\r\n                        // selected={this.state.value === 1}\r\n                        onClick={(e) => handleMenuItemClick(e, 1)}\r\n                    >\r\n                        Monthly\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                        key={2}\r\n                        // selected={this.state.value === 1}\r\n                        onClick={(e) => handleMenuItemClick(e, 2)}\r\n                    >\r\n                        Quarterly\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                        key={3}\r\n                        // selected={this.state.value === 2}\r\n                        onClick={(e) => handleMenuItemClick(e, 3)}\r\n                    >\r\n                        All Time\r\n                    </MenuItem>\r\n                </DropdownMenu>\r\n            </div>\r\n            <div className='container' style={{marginTop: '10px'}}>\r\n            {!isEmpty ?\r\n            (\r\n                getTopReceiversSorted().map((receiver) => (\r\n                    <div key={receiver.id} className={classNames(\r\n                        'row',\r\n                        'justify-content-start',\r\n                        classes.top_receivers_row_div)}>\r\n                        <div className={classes.top_receivers_name} style={{cursor: 'pointer'}} \r\n                            onClick={() => this.onUserClicked(receiver.user)}>\r\n                            {getProfileFullName(receiver.user)}\r\n                        </div>\r\n                        <CarrotText value={receiver.count} />\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                    <div className=\"container top_receivers_noname_container\">\r\n                        <div className=\"row justify-content-center medium_icon_popovers\">\r\n                            <span role=\"img\" aria-label=\"Smirking Face\">\r\n                            😏\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"row justify-content-center top_receivers_noname\">\r\n                            No top receivers, yet\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopReceivers","import React from 'react';\r\n\r\nexport const getProfileFullName = (user) => {\r\n    if (user && user.profile) {\r\n      return `${user.profile.firstName} ${user.profile.lastName}`;\r\n    }\r\n    return '';\r\n  };","import React, { useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n// import { getBadgeObjectForName, getImageForBadge } from '../../Utils/BadgesInfo';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    right_column_box: {\r\n        position: 'relative',\r\n        background: '#FFFFFF',\r\n        border: '0.5px solid #EEEEEE',\r\n        borderRadius: 2,\r\n        padding: 20,\r\n        marginBottom: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap'\r\n    },\r\n    right_column_header: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        flexGrow: 1\r\n    },\r\n    right_column_header_text: {\r\n        fontWeight: 700,\r\n        fontSize: 16,\r\n        color: '#2c2c2c',\r\n        flexGrow: 1\r\n    },\r\n}));\r\n\r\n// const BadgeText = (props) => {\r\n//     const badgeObj = getBadgeObjectForName(props.name);\r\n//     const badgeImg = getImageForBadge(badgeObj, true);\r\n//     return (\r\n//       <div className=\"top-badges-names__div\">\r\n//         <img src={badgeImg} alt={badgeObj.displayName} className=\"top-badges__img\" />\r\n//         <div className=\"top-receivers-name__div \">{badgeObj.displayName}</div>\r\n//       </div>\r\n//     );\r\n// };\r\n\r\nfunction TopBadges() {\r\n    const [value, setValue] = useState(1);\r\n    const classes = useStyles();\r\n    const handleChange = (event, index, value) => {\r\n        setValue(value);\r\n    }\r\n\r\n    // const { topBadges } = this.props;\r\n    return (\r\n        <div className={classes.right_column_box}>\r\n            <div className={classes.right_column_header}>\r\n                <div className={classes.right_column_header_text}>\r\n                    Top Badges\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBadges","import React, { useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PostRecognition from '../components/PostRecognition';\r\nimport InfoRecognition from '../components/InfoRecognition';\r\nimport TopReceivers from '../components/TopReceivers';\r\nimport TopBadges from '../components/TopBadges';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    fixed_right_panel: {\r\n        position: 'fixed',\r\n        top: 75,\r\n        right: 0,\r\n        overflowY: 'auto',\r\n        maxHeight: 'calc(100vh - 75px)'\r\n    },\r\n}));\r\n\r\nfunction Home () {\r\n    const classes = useStyles();\r\n    const [balanceTabToShow, setBalanceTabToShow] = useState(0);\r\n\r\n    const onHandleTabChange = (tabIndex) => {\r\n        setBalanceTabToShow(tabIndex);\r\n    }\r\n\r\n    const badgeSetStatus = true;//setting\r\n    const coreValueSetStatus = true;//setting\r\n    return (\r\n        <Container style={{marginTop: '35px'}}>\r\n            <Row className='position-relative justify-content-start'>\r\n                <Col xs={6} md={6} lg={8}>\r\n                    <PostRecognition />\r\n                </Col>\r\n                <Col xs={6} md={6} lg={4} className={classes.fixed_right_panel}>\r\n                    <InfoRecognition \r\n                        slideIndex={balanceTabToShow}\r\n                        onHandleChange={onHandleTabChange}\r\n                    />\r\n                    <TopReceivers />\r\n                    {badgeSetStatus && <TopBadges />}\r\n                    {/* {coreValueSetStatus && <TopCoreValues />} */}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Logo from '../assets/images/logo-twg.svg';\r\n\r\nfunction NavigationBar() {\r\n    return (\r\n        <Navbar fixed=\"top\" expand=\"lg\" variant=\"light\" bg=\"light\">\r\n            <Container>\r\n                <Navbar.Brand href=\"#\">\r\n                    <img\r\n                        src={Logo}\r\n                        className=\"d-inline-block align-top\"\r\n                        alt=\"TWG logo\"\r\n                    />\r\n                </Navbar.Brand>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavigationBar","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport './sass/main.scss';\r\nimport Home from './pages/Home';\r\nimport NavigationBar from './components/NavigationBar';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n        <NavigationBar />\r\n        <main className=\"main-content\">\r\n            <section>\r\n                <Home />\r\n            </section>\r\n        </main>\r\n        {/* <footer className=\"footer\">\r\n            <Container>\r\n                <h4 style={{textAlign: 'center'}}>TWG 2020</h4>\r\n            </Container>\r\n        </footer> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline />\r\n    <App />\r\n   \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}